{
  "version": 3,
  "sources": ["../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Color.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/List.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Math.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/Registry.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/States.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Children.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Container.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Text.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Label.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Button.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Data.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Component.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Time.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Series.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Line.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Scrollbar.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js", "../../../../../../../node_modules/d3-shape/src/constant.js", "../../../../../../../node_modules/d3-shape/src/math.js", "../../../../../../../node_modules/d3-path/src/path.js", "../../../../../../../node_modules/d3-shape/src/path.js", "../../../../../../../node_modules/d3-shape/src/arc.js", "../../../../../../../node_modules/d3-shape/src/array.js", "../../../../../../../node_modules/d3-shape/src/curve/linear.js", "../../../../../../../node_modules/d3-shape/src/point.js", "../../../../../../../node_modules/d3-shape/src/line.js", "../../../../../../../node_modules/d3-shape/src/area.js", "../../../../../../../node_modules/d3-shape/src/curve/cardinal.js", "../../../../../../../node_modules/d3-shape/src/curve/step.js", "../../../../../../../node_modules/d3-shape/src/curve/radial.js", "../../../../../../../node_modules/d3-shape/src/symbol/asterisk.js", "../../../../../../../node_modules/d3-shape/src/symbol/diamond.js", "../../../../../../../node_modules/d3-shape/src/symbol/star.js", "../../../../../../../node_modules/d3-shape/src/symbol/triangle.js", "../../../../../../../node_modules/d3-shape/src/symbol/triangle2.js", "../../../../../../../node_modules/d3-shape/src/symbol/wye.js", "../../../../../../../node_modules/d3-shape/src/noop.js", "../../../../../../../node_modules/d3-shape/src/curve/basis.js", "../../../../../../../node_modules/d3-shape/src/curve/basisClosed.js", "../../../../../../../node_modules/d3-shape/src/curve/basisOpen.js", "../../../../../../../node_modules/d3-shape/src/curve/bundle.js", "../../../../../../../node_modules/d3-shape/src/curve/cardinalClosed.js", "../../../../../../../node_modules/d3-shape/src/curve/cardinalOpen.js", "../../../../../../../node_modules/d3-shape/src/curve/catmullRom.js", "../../../../../../../node_modules/d3-shape/src/curve/catmullRomClosed.js", "../../../../../../../node_modules/d3-shape/src/curve/catmullRomOpen.js", "../../../../../../../node_modules/d3-shape/src/curve/linearClosed.js", "../../../../../../../node_modules/d3-shape/src/curve/monotone.js", "../../../../../../../node_modules/d3-shape/src/curve/natural.js"],
  "sourcesContent": ["/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\nexport class Percent {\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param percent  Percent value\r\n   */\n  constructor(percent) {\n    /**\r\n     * Value in percent.\r\n     */\n    Object.defineProperty(this, \"_value\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._value = percent;\n  }\n  /**\r\n   * Relative value.\r\n   *\r\n   * E.g. 100% is 1, 50% is 0.5, etc.\r\n   *\r\n   * This is useful to apply transformations to other values. E.g.:\r\n   *\r\n   * ```TypeScript\r\n   * let value = 256;\r\n   * let percent = new am5.p50;\r\n   * console.log(value * percent.value); // outputs 128\r\n   * ```\r\n   * ```JavaScript\r\n   * var value = 256;\r\n   * var percent = new am5.p50;\r\n   * console.log(value * percent.value); // outputs 128\r\n   * ```\r\n   *\r\n   * Alternatively, you can use `am5.percent()` helper function:\r\n   *\r\n   * ```TypeScript\r\n   * let value = 256;\r\n   * let percent = am5.p50;\r\n   * console.log(value * percent.value); // outputs 128\r\n   * ```\r\n   * ```JavaScript\r\n   * var value = 256;\r\n   * var percent = am5.p50;\r\n   * console.log(value * percent.value); // outputs 128\r\n   * ```\r\n   *\r\n   * @readonly\r\n   * @return Relative value\r\n   */\n  get value() {\n    return this._value / 100;\n  }\n  /**\r\n   * Value in percent.\r\n   *\r\n   * @readonly\r\n   * @return Percent\r\n   */\n  get percent() {\n    return this._value;\n  }\n  toString() {\n    return \"\" + this._value + \"%\";\n  }\n  interpolate(min, max) {\n    return min + this.value * (max - min);\n  }\n  static normalize(percent, min, max) {\n    if (percent instanceof Percent) {\n      return percent;\n    } else {\n      if (min === max) {\n        return new Percent(0);\n      } else {\n        return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\n      }\n    }\n  }\n}\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\nexport function percent(value) {\n  return new Percent(value);\n}\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\nexport const p0 = percent(0);\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\nexport const p100 = percent(100);\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\nexport const p50 = percent(50);\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\nexport function isPercent(value) {\n  return value instanceof Percent;\n}\n", "import * as $type from \"./Type\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nimport { Disposer, DisposerClass } from \"./Disposer\";\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\nexport function ready(f) {\n  if (document.readyState !== \"loading\") {\n    f();\n  } else {\n    const listener = () => {\n      if (document.readyState !== \"loading\") {\n        document.removeEventListener(\"readystatechange\", listener);\n        f();\n      }\n    };\n    document.addEventListener(\"readystatechange\", listener);\n  }\n}\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\nexport function removeElement(el) {\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n}\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\nexport function addEventListener(dom, type, listener, options) {\n  //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n  dom.addEventListener(type, listener, options || false);\n  return new Disposer(() => {\n    dom.removeEventListener(type, listener, options || false);\n  });\n}\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\nexport function onZoom(listener) {\n  // TODO use matchMedia instead ?\n  return addEventListener(window, \"resize\", _ev => {\n    listener();\n  });\n}\n/**\r\n * @ignore\r\n */\nexport function supports(cap) {\n  switch (cap) {\n    case \"touchevents\":\n      //return \"ontouchstart\" in document.documentElement;\n      return window.hasOwnProperty(\"TouchEvent\");\n    case \"pointerevents\":\n      return window.hasOwnProperty(\"PointerEvent\");\n    case \"mouseevents\":\n      return window.hasOwnProperty(\"MouseEvent\");\n    case \"wheelevents\":\n      return window.hasOwnProperty(\"WheelEvent\");\n    case \"keyboardevents\":\n      return window.hasOwnProperty(\"KeyboardEvent\");\n  }\n  return false;\n}\n/**\r\n * @ignore\r\n */\nexport function getPointerId(event) {\n  let id = event.pointerId || 0;\n  return id;\n}\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\nexport function blur() {\n  if (document.activeElement && document.activeElement != document.body) {\n    if (document.activeElement.blur) {\n      document.activeElement.blur();\n    } else {\n      let input = document.createElement(\"button\");\n      input.style.position = \"fixed\";\n      input.style.top = \"0px\";\n      input.style.left = \"-10000px\";\n      document.body.appendChild(input);\n      input.focus();\n      input.blur();\n      document.body.removeChild(input);\n    }\n  }\n}\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\nexport function focus(el) {\n  if (el) {\n    el.focus();\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function getRendererEvent(key) {\n  if (supports(\"pointerevents\")) {\n    return key;\n  } else if (supports(\"touchevents\")) {\n    switch (key) {\n      case \"pointerover\":\n        return \"touchstart\";\n      case \"pointerout\":\n        return \"touchend\";\n      case \"pointerleave\":\n        return \"touchend\";\n      case \"pointerdown\":\n        return \"touchstart\";\n      case \"pointermove\":\n        return \"touchmove\";\n      case \"pointerup\":\n        return \"touchend\";\n      case \"click\":\n        return \"click\";\n      case \"dblclick\":\n        return \"dblclick\";\n    }\n  } else if (supports(\"mouseevents\")) {\n    switch (key) {\n      case \"pointerover\":\n        return \"mouseover\";\n      case \"pointerout\":\n        return \"mouseout\";\n      case \"pointerleave\":\n        return \"mouseleave\";\n      case \"pointerdown\":\n        return \"mousedown\";\n      case \"pointermove\":\n        return \"mousemove\";\n      case \"pointerup\":\n        return \"mouseup\";\n      case \"click\":\n        return \"click\";\n      case \"dblclick\":\n        return \"dblclick\";\n    }\n  }\n  return key;\n}\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\nexport function isTouchEvent(ev) {\n  if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\n    return true;\n  } else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\n    switch (ev.pointerType) {\n      case \"touch\":\n      case \"pen\":\n      case 2:\n        return true;\n      case \"mouse\":\n      case 4:\n        return false;\n      default:\n        return !(ev instanceof MouseEvent);\n    }\n  } else if (ev.type != null) {\n    if (ev.type.match(/^mouse/)) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\nexport function setStyle(dom, property, value) {\n  dom.style[property] = value;\n}\nexport function getStyle(dom, property) {\n  return dom.style[property];\n}\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\nexport function getEventTarget(event) {\n  if (event.composedPath) {\n    const path = event.composedPath();\n    if (path.length === 0) {\n      return null;\n    } else {\n      return path[0];\n    }\n  } else {\n    return event.target;\n  }\n}\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\nexport function contains(a, b) {\n  let cursor = b;\n  while (true) {\n    if (a === cursor) {\n      return true;\n    } else if (cursor.parentNode === null) {\n      // TODO better ShadowRoot detection\n      if (cursor.host == null) {\n        return false;\n      } else {\n        cursor = cursor.host;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\nexport function isLocalEvent(event, target) {\n  return event.target && contains(target.root.dom, event.target);\n}\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\nexport function setInteractive(target, interactive) {\n  if (interactive) {\n    target.style.pointerEvents = \"auto\";\n  } else {\n    target.style.pointerEvents = \"none\";\n  }\n}\nexport function getEventKey(event) {\n  if (event.key !== undefined) {\n    return event.key;\n  }\n  switch (event.keyCode) {\n    case 9:\n      return \"Tab\";\n    case 13:\n      return \"Enter\";\n    case 16:\n      return \"Shift\";\n    case 17:\n      return \"Control\";\n    case 27:\n      return \"Escape\";\n    case 32:\n      return \" \";\n    case 37:\n      return \"ArrowLeft\";\n    case 38:\n      return \"ArrowUp\";\n    case 39:\n      return \"ArrowRight\";\n    case 40:\n      return \"ArrowDown\";\n    case 46:\n      return \"Delete\";\n  }\n  return \"\" + event.keyCode;\n}\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\nexport function getShadowRoot(a) {\n  let cursor = a;\n  while (true) {\n    if (cursor.parentNode === null) {\n      // TODO better ShadowRoot detection\n      if (cursor.host != null) {\n        return cursor;\n      } else {\n        return null;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\nlet rootStylesheet;\n/**\r\n * @ignore Exclude from docs\r\n */\nfunction createStylesheet(element, text, nonce = \"\") {\n  // TODO use createElementNS ?\n  const e = document.createElement(\"style\");\n  e.type = \"text/css\";\n  if (nonce != \"\") {\n    e.setAttribute(\"nonce\", nonce);\n  }\n  e.textContent = text;\n  if (element === null) {\n    document.head.appendChild(e);\n  } else {\n    element.appendChild(e);\n  }\n  return e;\n}\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\nfunction getStylesheet(element, nonce = \"\") {\n  if (element === null) {\n    if (rootStylesheet == null) {\n      // TODO use createElementNS ?\n      const e = document.createElement(\"style\");\n      e.type = \"text/css\";\n      if (nonce != \"\") {\n        e.setAttribute(\"nonce\", nonce);\n      }\n      document.head.appendChild(e);\n      rootStylesheet = e.sheet;\n    }\n    return rootStylesheet;\n  } else {\n    // TODO use createElementNS ?\n    const e = document.createElement(\"style\");\n    e.type = \"text/css\";\n    if (nonce != \"\") {\n      e.setAttribute(\"nonce\", nonce);\n    }\n    element.appendChild(e);\n    return e.sheet;\n  }\n}\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\nfunction appendStylesheet(root, selector) {\n  const index = root.cssRules.length;\n  root.insertRule(selector + \"{}\", index);\n  return root.cssRules[index];\n}\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\nexport class StyleRule extends DisposerClass {\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param selector  CSS selector\r\n   * @param styles    An object of style attribute - value pairs\r\n   */\n  constructor(element, selector, styles, nonce = \"\") {\n    super();\n    Object.defineProperty(this, \"_root\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * CSS rule.\r\n     */\n    Object.defineProperty(this, \"_rule\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._root = getStylesheet(element, nonce);\n    try {\n      this._rule = appendStylesheet(this._root, selector);\n    } catch (err) {\n      // Create an empty rule on failed selectors\n      this._rule = appendStylesheet(this._root, \":not(*)\");\n    }\n    $object.each(styles, (key, value) => {\n      this.setStyle(key, value);\n    });\n  }\n  /**\r\n   * A CSS selector text.\r\n   *\r\n   * E.g.: `.myClass p`\r\n   *\r\n   * @param selector  CSS selector\r\n   */\n  set selector(selector) {\n    this._rule.selectorText = selector;\n  }\n  /**\r\n   * @return CSS selector\r\n   */\n  get selector() {\n    return this._rule.selectorText;\n  }\n  // TODO test this\n  _dispose() {\n    // TODO a bit hacky\n    const index = $array.indexOf(this._root.cssRules, this._rule);\n    if (index === -1) {\n      throw new Error(\"Could not dispose StyleRule\");\n    } else {\n      // TODO if it's empty remove it from the DOM ?\n      this._root.deleteRule(index);\n    }\n  }\n  /**\r\n   * Sets the same style properties with browser-specific prefixes.\r\n   *\r\n   * @param name   Attribute name\r\n   * @param value  Attribute value\r\n   */\n  _setVendorPrefixName(name, value) {\n    const style = this._rule.style;\n    style.setProperty(\"-webkit-\" + name, value, \"\");\n    style.setProperty(\"-moz-\" + name, value, \"\");\n    style.setProperty(\"-ms-\" + name, value, \"\");\n    style.setProperty(\"-o-\" + name, value, \"\");\n    style.setProperty(name, value, \"\");\n  }\n  /**\r\n   * Sets a value for specific style attribute.\r\n   *\r\n   * @param name   Attribute\r\n   * @param value  Value\r\n   */\n  setStyle(name, value) {\n    if (name === \"transition\") {\n      this._setVendorPrefixName(name, value);\n    } else {\n      this._rule.style.setProperty(name, value, \"\");\n    }\n  }\n}\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\nexport class StyleSheet extends DisposerClass {\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param text  CSS stylesheet\r\n   */\n  constructor(element, text, nonce = \"\") {\n    super();\n    Object.defineProperty(this, \"_element\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._element = createStylesheet(element, text, nonce);\n  }\n  _dispose() {\n    if (this._element.parentNode) {\n      this._element.parentNode.removeChild(this._element);\n    }\n  }\n}\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\nexport function addClass(element, className) {\n  if (!element) {\n    return;\n  }\n  if (element.classList) {\n    const classes = className.split(\" \");\n    $array.each(classes, name => {\n      element.classList.add(name);\n    });\n  } else {\n    let currentClassName = element.getAttribute(\"class\");\n    if (currentClassName) {\n      element.setAttribute(\"class\", currentClassName.split(\" \").filter(item => {\n        return item !== className;\n      }).join(\" \") + \" \" + className);\n    } else {\n      element.setAttribute(\"class\", className);\n    }\n  }\n}\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\nexport function removeClass(element, className) {\n  if (!element) {\n    return;\n  }\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    let currentClassName = element.getAttribute(\"class\");\n    if (currentClassName) {\n      element.setAttribute(\"class\", currentClassName.split(\" \").filter(item => {\n        return item !== className;\n      }).join(\" \"));\n    }\n  }\n}\n// /**\n//  * Applies a set of styles to an element. Stores the original styles so they\n//  * can be restored later.\n//  *\n//  * @ignore\n//  * @param io      Element\n//   */\n// export function prepElementForDrag(dom: HTMLElement): void {\n// \t// @todo: save current values\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"none\");\n// \t\t}\n// \t}\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\n// }\n// /**\n//  * Restores replaced styles\n//  *\n//  * @ignore\n//  * @param  io  Element\n//  */\n// export function unprepElementForDrag(dom: HTMLElement): void {\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"\");\n// \t\t}\n// \t}\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\n// }\nexport function iOS() {\n  return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\n}\nexport function getSafeResolution() {\n  return iOS() ? 1 : undefined;\n}\nexport function relativeToValue(percent, full) {\n  if ($type.isNumber(percent)) {\n    return percent;\n  } else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\n    return full * percent.value;\n  } else {\n    return 0;\n  }\n}\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\nexport function decimalPlaces(number) {\n  let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n  if (!match) {\n    return 0;\n  }\n  return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\nexport function padString(value, len = 0, char = \"0\") {\n  if (typeof value !== \"string\") {\n    value = value.toString();\n  }\n  return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\n}\nexport function trimLeft(text) {\n  return text.replace(/^[\\s]*/, \"\");\n}\nexport function trimRight(text) {\n  return text.replace(/[\\s]*$/, \"\");\n}\nexport function trim(text) {\n  return trimLeft(trimRight(text));\n}\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\n  if (text.length > maxLength) {\n    // Find the last non-alphanumeric character before maxLength\n    let lastNonAlphanumericIndex = maxLength - 1;\n    while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\n      lastNonAlphanumericIndex--;\n    }\n    if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\n      return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\n    } else {\n      // If no non-alphanumeric character found, truncate without breaking words\n      return text.substring(0, maxLength) + ellipsis;\n    }\n  } else {\n    return text;\n  }\n}\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\nexport function getFormat(format) {\n  // Undefined?\n  if (typeof format === \"undefined\") {\n    return \"string\";\n  }\n  // Cleanup and lowercase format\n  format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\n  // Remove style tags\n  format = format.replace(/\\[[^\\]]+\\]/, \"\");\n  // Trim\n  format = format.trim();\n  // Check for any explicit format hints (i.e. /Date)\n  let hints = format.match(/\\/(date|number|duration)$/);\n  if (hints) {\n    return hints[1];\n  }\n  // Check for explicit hints\n  if (format === \"number\") {\n    return \"number\";\n  }\n  if (format === \"date\") {\n    return \"date\";\n  }\n  if (format === \"duration\") {\n    return \"duration\";\n  }\n  // Detect number formatting symbols\n  if (format.match(/[#0]/)) {\n    return \"number\";\n  }\n  // Detect date formatting symbols\n  if (format.match(/[ymwdhnsqaxkzgtei]/)) {\n    return \"date\";\n  }\n  // Nothing? Let's display as string\n  return \"string\";\n}\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\nexport function cleanFormat(format) {\n  return format.replace(/\\/(date|number|duration)$/i, \"\");\n}\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\nexport function stripTags(text) {\n  return text ? text.replace(/<[^>]*>/g, \"\") : text;\n}\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\nexport function plainText(text) {\n  return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\n}\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\nexport function escapeForRgex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\nexport function addSpacing(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charAt(i);\n    if (char.toUpperCase() == char && i != 0) {\n      result += \" \";\n    }\n    result += char;\n  }\n  return result;\n}\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\nexport function splitString(source) {\n  // Regular expression to identify RTL characters\n  const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\n  // Regular expression to capture segments ending with specific Arabic characters\n  const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\n  // Split input string into array of words or characters, including whitespace\n  let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\n  let result = [];\n  segments.forEach(segment => {\n    if (segment.match(/^\\s+$/)) {\n      // If the segment is purely whitespace\n      if (segment = \" \") {\n        segment = \"  \";\n      }\n      result.push(segment);\n    } else if (rtlChar.test(segment)) {\n      // If the segment contains RTL characters, handle special splits\n      let parts = segment.split(splitPattern).filter(part => part !== '');\n      // Concatenate parts processed by the split pattern directly to result\n      result = result.concat(parts);\n    } else {\n      // Treat this segment as LTR: split into characters\n      result = result.concat([...segment]);\n    }\n  });\n  return result;\n}\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\nexport function getYearDay(date, utc = false) {\n  // TODO: utc needed?\n  utc;\n  const start = new Date(date.getFullYear(), 0, 0);\n  const diff = date.getTime() - start.getTime() + (start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000;\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.floor(diff / oneDay);\n}\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\nexport function getWeek(date, _utc = false) {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const day = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - day);\n  const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil(((d.getTime() - firstDay.getTime()) / 86400000 + 1) / 7);\n}\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\nexport function getWeekYear(date, _utc = false) {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const day = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - day);\n  const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return firstDay.getFullYear();\n}\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\nexport function getMonthWeek(date, utc = false) {\n  const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\n  let currentWeek = getWeek(date, utc);\n  if (currentWeek == 1) {\n    currentWeek = 53;\n  }\n  return currentWeek - firstWeek + 1;\n}\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\n  let date = new Date(year, 0, 4, 0, 0, 0, 0);\n  if (utc) {\n    date.setUTCFullYear(year);\n  }\n  let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\n  return day;\n}\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\nexport function get12Hours(hours, base) {\n  if (hours > 12) {\n    hours -= 12;\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return base != null ? hours + (base - 1) : hours;\n}\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\n  if (utc) {\n    return long ? \"Coordinated Universal Time\" : \"UTC\";\n  } else if (timezone) {\n    const d1 = date.toLocaleString(\"en-US\", {\n      timeZone: timezone\n    });\n    const d2 = date.toLocaleString(\"en-US\", {\n      timeZone: timezone,\n      timeZoneName: long ? \"long\" : \"short\"\n    });\n    return trim(d2.substr(d1.length));\n  }\n  let wotz = date.toLocaleString(\"UTC\");\n  let wtz = date.toLocaleString(\"UTC\", {\n    timeZoneName: long ? \"long\" : \"short\"\n  }).substr(wotz.length);\n  //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\n  if (savings === false) {\n    wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\n  }\n  return trim(wtz);\n}\nexport function getTimezoneOffset(timezone, targetDate) {\n  const date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\n  const utcDate = new Date(date.toLocaleString(\"en-US\", {\n    timeZone: \"UTC\"\n  }));\n  const tzDate = new Date(date.toLocaleString(\"en-US\", {\n    timeZone: timezone\n  }));\n  return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\n}\nexport function capitalizeFirst(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\nexport function hslToRgb(color) {\n  let r, g, b;\n  let h = color.h;\n  let s = color.s;\n  let l = color.l;\n  if (s == 0) {\n    r = g = b = l; // achromatic\n  } else {\n    let hue2rgb = function hue2rgb(p, q, t) {\n      if (t < 0) {\n        t += 1;\n      }\n      if (t > 1) {\n        t -= 1;\n      }\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n      }\n      if (t < 1 / 2) {\n        return q;\n      }\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n      }\n      return p;\n    };\n    let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    let p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\nexport function rgbToHsl(color) {\n  let r = color.r / 255;\n  let g = color.g / 255;\n  let b = color.b / 255;\n  let max = Math.max(r, g, b);\n  let min = Math.min(r, g, b);\n  let h = 0;\n  let s = 0;\n  let l = (max + min) / 2;\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    let d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n}\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\nexport function hsvToHsl(hsv) {\n  const l = hsv.v * (1 - hsv.s / 2);\n  const s = l === 0 || l === 1 ? 0 : (hsv.v - l) / Math.min(l, 1 - l);\n  return {\n    h: hsv.h,\n    s,\n    l,\n    a: hsv.a\n  };\n}\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\nexport function hslToHsv(hsl) {\n  const v = hsl.l + hsl.s * Math.min(hsl.l, 1 - hsl.l);\n  const s = v === 0 ? 0 : 2 * (1 - hsl.l / v);\n  return {\n    h: hsl.h,\n    s,\n    v,\n    a: hsl.a\n  };\n}\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\nexport function lighten(rgb, percent) {\n  if (rgb) {\n    return {\n      r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\n      g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\n      b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\n      a: rgb.a\n    };\n  } else {\n    // TODO is this correct ?\n    return rgb;\n  }\n}\n;\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\nexport function getLightnessStep(value, percent) {\n  let base = percent > 0 ? 255 - value : value;\n  return Math.round(base * percent);\n}\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\nexport function brighten(rgb, percent) {\n  if (rgb) {\n    let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\n    //let base = Math.max(rgb.r, rgb.g, rgb.b);\n    let step = getLightnessStep(base, percent);\n    return {\n      r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\n      g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\n      b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\n      a: rgb.a\n    };\n  } else {\n    // TODO is this correct ?\n    return rgb;\n  }\n}\n;\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\nexport function getBrightnessStep(_value, percent) {\n  let base = 255; //percent > 0 ? 255 - value : value;\n  return Math.round(base * percent);\n}\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\nexport function isLight(color) {\n  return (color.r * 299 + color.g * 587 + color.b * 114) / 1000 >= 128;\n}\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\nexport function saturate(rgb, saturation) {\n  if (rgb === undefined || saturation == 1) {\n    return rgb;\n  }\n  let hsl = rgbToHsl(rgb);\n  hsl.s = saturation;\n  return hslToRgb(hsl);\n}\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\nexport function alternativeColor(color, lightAlternative = {\n  r: 255,\n  g: 255,\n  b: 255\n}, darkAlternative = {\n  r: 255,\n  g: 255,\n  b: 255\n}) {\n  let light = lightAlternative;\n  let dark = darkAlternative;\n  if (isLight(darkAlternative)) {\n    light = darkAlternative;\n    dark = lightAlternative;\n  }\n  return isLight(color) ? dark : light;\n}\n/**\r\n * @ignore\r\n */\nexport function mergeTags(tags1, tags2) {\n  if (!tags1) {\n    tags1 = [];\n  }\n  return [...tags1, ...tags2].filter((value, index, self) => {\n    return self.indexOf(value) === index;\n  });\n}\n/**\r\n * @ignore\r\n */\nexport function sameBounds(a, b) {\n  if (!b) {\n    return false;\n  }\n  if (a.left != b.left) {\n    return false;\n  }\n  if (a.right != b.right) {\n    return false;\n  }\n  if (a.top != b.top) {\n    return false;\n  }\n  if (a.bottom != b.bottom) {\n    return false;\n  }\n  return true;\n}\n", "import { __awaiter } from \"tslib\";\nimport { Percent } from \"./Percent\";\nimport { Color } from \"./Color\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport * as $object from \"./Object\";\n/**\r\n * @ignore\r\n */\nexport function waitForAnimations(animations) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (animations !== undefined) {\n      const promises = [];\n      $object.each(animations, (_, animation) => {\n        promises.push(animation.waitForStop());\n      });\n      yield Promise.all(promises);\n    }\n  });\n}\n/**\r\n * @ignore\r\n */\nexport function normalize(value, min, max) {\n  if (min === max) {\n    return 0;\n  } else {\n    return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function range(diff, from, to) {\n  return from + diff * (to - from);\n}\n/**\r\n * @ignore\r\n */\nexport function defaultInterpolate(diff, from, to) {\n  if (diff >= 1) {\n    return to;\n  } else {\n    return from;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function percentInterpolate(diff, from, to) {\n  return new Percent(range(diff, from.percent, to.percent));\n}\n/**\r\n * @ignore\r\n */\nexport function colorInterpolate(diff, from, to) {\n  return Color.interpolate(diff, from, to);\n}\n/**\r\n * @ignore\r\n */\nexport function getInterpolate(from, to) {\n  if (typeof from === \"number\" && typeof to === \"number\") {\n    return range;\n  }\n  if (from instanceof Percent && to instanceof Percent) {\n    return percentInterpolate;\n  }\n  if (from instanceof Color && to instanceof Color) {\n    return colorInterpolate;\n  }\n  return defaultInterpolate;\n}\nexport var AnimationState;\n(function (AnimationState) {\n  AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\n  AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\n  AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\n})(AnimationState || (AnimationState = {}));\n/**\r\n * @ignore\r\n */\nexport class AnimationTime {\n  constructor(entity, duration) {\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_duration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_playingDuration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_startingTime\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_current\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_from\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_to\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    Object.defineProperty(this, \"easing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._entity = entity;\n    this._duration = duration;\n  }\n  _stopEvent() {\n    const type = \"stopped\";\n    if (this.events.isEnabled(type)) {\n      this.events.dispatch(type, {\n        type: type,\n        target: this\n      });\n    }\n  }\n  _runAnimation(currentTime) {\n    if (this._playingDuration !== null) {\n      if (this._startingTime === null) {\n        this._startingTime = currentTime;\n        return AnimationState.Playing;\n      } else {\n        const diff = (currentTime - this._startingTime) / this._playingDuration;\n        if (diff >= 1) {\n          this._playingDuration = null;\n          this._startingTime = null;\n          this._from = this._to;\n          this._current = this._to;\n          this._entity.markDirty();\n          this._stopEvent();\n          const type = \"ended\";\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this\n            });\n          }\n          return AnimationState.Stopped;\n        } else {\n          this._current = range(diff, this._from, this._to);\n          this._entity.markDirty();\n          const type = \"progress\";\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this,\n              progress: diff\n            });\n          }\n          return AnimationState.Playing;\n        }\n      }\n    } else {\n      return AnimationState.Stopped;\n    }\n  }\n  _play() {\n    this._from = this._current;\n    if (this._playingDuration === null) {\n      this._entity._root._addAnimation(this);\n      const type = \"started\";\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this\n        });\n      }\n    } else {\n      this._startingTime = null;\n    }\n    this._playingDuration = Math.abs(this._to - this._from) * this._duration;\n  }\n  get duration() {\n    return this._duration;\n  }\n  set duration(value) {\n    if (this._duration !== value) {\n      this._duration = value;\n      if (value === 0) {\n        this.jumpTo(this._to);\n      } else if (this._current !== this._to) {\n        this._play();\n      }\n    }\n  }\n  get current() {\n    if (this.easing) {\n      return this.easing(this._current);\n    } else {\n      return this._current;\n    }\n  }\n  stop() {\n    this.jumpTo(this._current);\n  }\n  jumpTo(value) {\n    if (this._current !== value) {\n      this._entity.markDirty();\n    }\n    if (this._playingDuration !== null) {\n      this._stopEvent();\n    }\n    this._playingDuration = null;\n    this._startingTime = null;\n    this._current = value;\n    this._from = value;\n    this._to = value;\n  }\n  tweenTo(value) {\n    if (this._current === value || this._duration === 0) {\n      this.jumpTo(value);\n    } else {\n      if (this._to !== value) {\n        this._to = value;\n        this._play();\n      }\n    }\n  }\n}\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\n", "import { range } from \"./Animation\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n/**\r\n * @ignore\r\n */\nfunction string2hex(string) {\n  //string = cssColorNames[string.toLowerCase()] || string;\n  if (string[0] === \"#\") {\n    string = string.substr(1);\n  }\n  if (string.length == 3) {\n    string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\n  }\n  return parseInt(string, 16);\n}\n/**\r\n * @ignore\r\n */\nexport function rgba2hex(color) {\n  color = color.replace(/[ ]/g, \"\");\n  // Init\n  let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\n  // Try rgb() format\n  if (matches) {\n    matches.push(\"1\");\n  } else {\n    matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\n    if (!matches) {\n      return 0x000000;\n    }\n  }\n  let hex = \"\";\n  for (let i = 1; i <= 3; i++) {\n    let val = parseInt(matches[i]).toString(16);\n    if (val.length == 1) {\n      val = \"0\" + val;\n    }\n    hex += val;\n  }\n  return string2hex(hex);\n}\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\nexport function color(input) {\n  return Color.fromAny(input);\n}\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\nexport class Color {\n  constructor(hex) {\n    Object.defineProperty(this, \"_hex\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._hex = hex | 0;\n  }\n  /**\r\n   * Color numeric value.\r\n   */\n  get hex() {\n    return this._hex;\n  }\n  /**\r\n   * Value of color's R channel.\r\n   * @return R value\r\n   */\n  get r() {\n    return this._hex >>> 16;\n  }\n  /**\r\n   * Value of color's G channel.\r\n   * @return G value\r\n   */\n  get g() {\n    return this._hex >> 8 & 0xFF;\n  }\n  /**\r\n   * Value of color's B channel.\r\n   * @return B value\r\n   */\n  get b() {\n    return this._hex & 0xFF;\n  }\n  /**\r\n   * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n   *\r\n   * @param   alpha  Opacity\r\n   * @return         CSS string\r\n   */\n  toCSS(alpha = 1) {\n    return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\n  }\n  /**\r\n   * Returns color CSS representation in form of `#rgb` string.\r\n   *\r\n   * @return         CSS string\r\n   */\n  toCSSHex() {\n    return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\n  }\n  /**\r\n   * Returns color's HSL info.\r\n   * @param   alpha Opacity\r\n   * @return        HSL info\r\n   */\n  toHSL(alpha = 1) {\n    return $utils.rgbToHsl({\n      r: this.r,\n      g: this.g,\n      b: this.b,\n      a: alpha\n    });\n  }\n  /**\r\n   * Converts HSL values into a new [[Color]] object.\r\n   *\r\n   * @param   h H value\r\n   * @param   s S value\r\n   * @param   l L value\r\n   * @return    Color object\r\n   */\n  static fromHSL(h, s, l) {\n    const rgb = $utils.hslToRgb({\n      h: h,\n      s: s,\n      l: l\n    });\n    return this.fromRGB(rgb.r, rgb.g, rgb.b);\n  }\n  toString() {\n    return this.toCSSHex();\n  }\n  /**\r\n   * Converts hex number into a new [[Color]] object.\r\n   *\r\n   * ```TypeScript\r\n   * Color.fromHex(0xff0000) // red\r\n   * ```\r\n   * ```JavaScript\r\n   * Color.fromHex(0xff0000) // red\r\n   * ```\r\n   *\r\n   * @param   hex  Hex color\r\n   * @return       Color\r\n   */\n  static fromHex(hex) {\n    return new Color(hex);\n  }\n  /**\r\n   * Converts RGB values to a new [[Color]] object.\r\n   *\r\n   * @param   r  R value\r\n   * @param   g  G value\r\n   * @param   b  B value\r\n   * @return     Color\r\n   */\n  static fromRGB(r, g, b) {\n    return new Color((b | 0) + (g << 8) + (r << 16));\n  }\n  /**\r\n   * Converts RGB string to a new [[Color]] object.\r\n   *\r\n   * ```TypeScript\r\n   * Color.fromString(\"#ff0000\") // red\r\n   * ```\r\n   * ```JavaScript\r\n   * Color.fromString(\"#ff0000\") // red\r\n   * ```\r\n   *\r\n   * @param   s  RGB string\r\n   * @return     Color\r\n   */\n  static fromString(s) {\n    return new Color(string2hex(s));\n  }\n  /**\r\n   * Converts CSS rgba() syntax to a new [[Color]] object.\r\n   *\r\n   * ```TypeScript\r\n   * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n   * ```\r\n   * ```JavaScript\r\n   * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n   * ```\r\n   *\r\n   * @param  {string} s [description]\r\n   * @return {Color}    [description]\r\n   */\n  static fromCSS(s) {\n    return new Color(rgba2hex(s));\n  }\n  /**\r\n   * Convert to color from virtually anything.\r\n   *\r\n   * Will throw an exception if unable to resolve the color.\r\n   *\r\n   * @param   s  Source\r\n   * @return     Color\r\n   */\n  static fromAny(s) {\n    if ($type.isString(s)) {\n      if (s[0] == \"#\") {\n        return Color.fromString(s);\n      } else if (s.substr(0, 3) == \"rgb\") {\n        return Color.fromCSS(s);\n      }\n    } else if ($type.isNumber(s)) {\n      return Color.fromHex(s);\n    } else if (s instanceof Color) {\n      return Color.fromHex(s.hex);\n    }\n    throw new Error(\"Unknown color syntax: \" + s);\n  }\n  /**\r\n   * Returns a new [[Color]] object based on either `lightAlternative` or\r\n   * `darkAlternative` depending on which one is more contrasting with\r\n   * the `color`.\r\n   *\r\n   * @param   color             Reference color\r\n   * @param   lightAlternative  Light color\r\n   * @param   darkAlternative   Dark color\r\n   * @return                    Alternative color\r\n   */\n  static alternative(color, lightAlternative, darkAlternative) {\n    const rgb = $utils.alternativeColor({\n      r: color.r,\n      g: color.g,\n      b: color.b\n    }, lightAlternative ? {\n      r: lightAlternative.r,\n      g: lightAlternative.g,\n      b: lightAlternative.b\n    } : undefined, darkAlternative ? {\n      r: darkAlternative.r,\n      g: darkAlternative.g,\n      b: darkAlternative.b\n    } : undefined);\n    return this.fromRGB(rgb.r, rgb.g, rgb.b);\n  }\n  /**\r\n   * Returns an intermediate Color between two reference colors depending on\r\n   * the progress (`diff`) between the two.\r\n   *\r\n   * @param   diff  Progress\r\n   * @param   from  Source color\r\n   * @param   to    Target color\r\n   * @param   mode  Interpolation mode\r\n   * @return        Color\r\n   */\n  static interpolate(diff, from, to, mode = \"rgb\") {\n    if (mode == \"hsl\") {\n      const fromHSL = from.toHSL();\n      const toHSL = to.toHSL();\n      return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\n    } else {\n      return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\n    }\n  }\n  /**\r\n   * Returns a new [[Color]] lightened by `percent` value.\r\n   *\r\n   * Use negative value to darken the color.\r\n   *\r\n   * @param   color    Source color\r\n   * @param   percent  Percent\r\n   * @return           New color\r\n   */\n  static lighten(color, percent) {\n    const rgb = $utils.lighten({\n      r: color.r,\n      g: color.g,\n      b: color.b\n    }, percent);\n    return Color.fromRGB(rgb.r, rgb.g, rgb.b);\n  }\n  /**\r\n   * Returns a new [[Color]] brightened by `percent` value.\r\n   *\r\n   * Use negative value to dim the color.\r\n   *\r\n   * @param   color    Source color\r\n   * @param   percent  Percent\r\n   * @return           New color\r\n   */\n  static brighten(color, percent) {\n    const rgb = $utils.brighten({\n      r: color.r,\n      g: color.g,\n      b: color.b\n    }, percent);\n    return Color.fromRGB(rgb.r, rgb.g, rgb.b);\n  }\n  /**\r\n   * Returns a new [[Color]] saturated by `percent` value.\r\n   *\r\n   * Value range is between `0` (fully desaturated), to `1` (full color).\r\n   *\r\n   * @param   color    Source color\r\n   * @param   percent  Percent\r\n   * @return           New color\r\n   */\n  static saturate(color, percent) {\n    const rgb = $utils.saturate({\n      r: color.r,\n      g: color.g,\n      b: color.b\n    }, percent);\n    return Color.fromRGB(rgb.r, rgb.g, rgb.b);\n  }\n}\n", "import { EventDispatcher } from \"./EventDispatcher\";\nimport * as $array from \"./Array\";\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\nfunction checkBounds(index, len) {\n  if (!(index >= 0 && index < len)) {\n    throw new Error(\"Index out of bounds: \" + index);\n  }\n}\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\nexport class List {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param initial  Inital list of values to add to list\r\n   */\n  constructor(initial = []) {\n    /**\r\n     * List values.\r\n     */\n    Object.defineProperty(this, \"_values\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    this._values = initial;\n  }\n  /**\r\n   * An array of values in the list.\r\n   *\r\n   * Do not use this property to add values. Rather use dedicated methods, like\r\n   * `push()`, `removeIndex()`, etc.\r\n   *\r\n   * @readonly\r\n   * @return List values\r\n   */\n  get values() {\n    return this._values;\n  }\n  /**\r\n   * Checks if list contains specific item reference.\r\n   *\r\n   * @param item  Item to search for\r\n   * @return `true` if found, `false` if not found\r\n   */\n  contains(value) {\n    return this._values.indexOf(value) !== -1;\n  }\n  /**\r\n   * Removes specific item from the list.\r\n   *\r\n   * @param item An item to remove\r\n   */\n  removeValue(value) {\n    let i = 0;\n    let length = this._values.length;\n    while (i < length) {\n      // TODO handle NaN\n      if (this._values[i] === value) {\n        this.removeIndex(i);\n        --length;\n      } else {\n        ++i;\n      }\n    }\n  }\n  /**\r\n   * Searches the list for specific item and returns its index.\r\n   *\r\n   * @param item  An item to search for\r\n   * @return Index or -1 if not found\r\n   */\n  indexOf(value) {\n    return $array.indexOf(this._values, value);\n  }\n  /**\r\n   * Number of items in list.\r\n   *\r\n   * @readonly\r\n   * @return Number of items\r\n   */\n  get length() {\n    return this._values.length;\n  }\n  /**\r\n   * Checks if there's a value at specific index.\r\n   *\r\n   * @param index  Index\r\n   * @return Value exists?\r\n   */\n  hasIndex(index) {\n    return index >= 0 && index < this._values.length;\n  }\n  /**\r\n   * Returns an item at specified index.\r\n   *\r\n   * @param index  Index\r\n   * @return List item\r\n   */\n  getIndex(index) {\n    return this._values[index];\n  }\n  _onPush(newValue) {\n    if (this.events.isEnabled(\"push\")) {\n      this.events.dispatch(\"push\", {\n        type: \"push\",\n        target: this,\n        newValue\n      });\n    }\n  }\n  _onInsertIndex(index, newValue) {\n    if (this.events.isEnabled(\"insertIndex\")) {\n      this.events.dispatch(\"insertIndex\", {\n        type: \"insertIndex\",\n        target: this,\n        index,\n        newValue\n      });\n    }\n  }\n  _onSetIndex(index, oldValue, newValue) {\n    if (this.events.isEnabled(\"setIndex\")) {\n      this.events.dispatch(\"setIndex\", {\n        type: \"setIndex\",\n        target: this,\n        index,\n        oldValue,\n        newValue\n      });\n    }\n  }\n  _onSwap(a, b) {\n    if (this.events.isEnabled(\"swap\")) {\n      this.events.dispatch(\"swap\", {\n        type: \"swap\",\n        target: this,\n        a,\n        b\n      });\n    }\n  }\n  _onRemoveIndex(index, oldValue) {\n    if (this.events.isEnabled(\"removeIndex\")) {\n      this.events.dispatch(\"removeIndex\", {\n        type: \"removeIndex\",\n        target: this,\n        index,\n        oldValue\n      });\n    }\n  }\n  _onMoveIndex(oldIndex, newIndex, value) {\n    if (this.events.isEnabled(\"moveIndex\")) {\n      this.events.dispatch(\"moveIndex\", {\n        type: \"moveIndex\",\n        target: this,\n        oldIndex,\n        newIndex,\n        value\n      });\n    }\n  }\n  _onClear(oldValues) {\n    if (this.events.isEnabled(\"clear\")) {\n      this.events.dispatch(\"clear\", {\n        type: \"clear\",\n        target: this,\n        oldValues\n      });\n    }\n  }\n  /**\r\n   * Sets value at specific index.\r\n   *\r\n   * If there's already a value at the index, it is overwritten.\r\n   *\r\n   * @param index  Index\r\n   * @param value  New value\r\n   * @return New value\r\n   */\n  setIndex(index, value) {\n    checkBounds(index, this._values.length);\n    const oldValue = this._values[index];\n    // Do nothing if the old value and the new value are the same\n    if (oldValue !== value) {\n      this._values[index] = value;\n      this._onSetIndex(index, oldValue, value);\n    }\n    return oldValue;\n  }\n  /**\r\n   * Adds an item to the list at a specific index, which pushes all the other\r\n   * items further down the list.\r\n   *\r\n   * @param index Index\r\n   * @param item  An item to add\r\n   */\n  insertIndex(index, value) {\n    checkBounds(index, this._values.length + 1);\n    $array.insertIndex(this._values, index, value);\n    this._onInsertIndex(index, value);\n    return value;\n  }\n  /**\r\n   * Swaps indexes of two items in the list.\r\n   *\r\n   * @param a  Item 1\r\n   * @param b  Item 2\r\n   */\n  swap(a, b) {\n    const len = this._values.length;\n    checkBounds(a, len);\n    checkBounds(b, len);\n    if (a !== b) {\n      const value_a = this._values[a];\n      const value_b = this._values[b];\n      this._values[a] = value_b;\n      this._values[b] = value_a;\n      this._onSwap(value_a, value_b);\n    }\n  }\n  /**\r\n   * Removes a value at specific index.\r\n   *\r\n   * @param index  Index of value to remove\r\n   * @return Removed value\r\n   */\n  removeIndex(index) {\n    checkBounds(index, this._values.length);\n    const oldValue = this._values[index];\n    $array.removeIndex(this._values, index);\n    this._onRemoveIndex(index, oldValue);\n    return oldValue;\n  }\n  /**\r\n   * Moves an item to a specific index within the list.\r\n   *\r\n   * If the index is not specified it will move the item to the end of the\r\n   * list.\r\n   *\r\n   * @param value  Item to move\r\n   * @param index  Index to place item at\r\n   */\n  moveValue(value, toIndex) {\n    // TODO don't do anything if the desired index is the same as the current index\n    let index = this.indexOf(value);\n    // TODO remove all old values rather than only the first ?\n    if (index !== -1) {\n      $array.removeIndex(this._values, index);\n      if (toIndex == null) {\n        const toIndex = this._values.length;\n        this._values.push(value);\n        this._onMoveIndex(index, toIndex, value);\n      } else {\n        $array.insertIndex(this._values, toIndex, value);\n        this._onMoveIndex(index, toIndex, value);\n      }\n    } else if (toIndex == null) {\n      this._values.push(value);\n      this._onPush(value);\n    } else {\n      $array.insertIndex(this._values, toIndex, value);\n      this._onInsertIndex(toIndex, value);\n    }\n    return value;\n  }\n  /**\r\n   * Adds an item to the end of the list.\r\n   *\r\n   * @param item  An item to add\r\n   */\n  push(value) {\n    this._values.push(value);\n    this._onPush(value);\n    return value;\n  }\n  /**\r\n   * Adds an item as a first item in the list.\r\n   *\r\n   * @param item  An item to add\r\n   */\n  unshift(value) {\n    this.insertIndex(0, value);\n    return value;\n  }\n  /**\r\n   * Adds multiple items to the list.\r\n   *\r\n   * @param items  An Array of items to add\r\n   */\n  pushAll(values) {\n    $array.each(values, value => {\n      this.push(value);\n    });\n  }\n  /**\r\n   * Copies and adds items from abother list.\r\n   *\r\n   * @param source  A list top copy items from\r\n   */\n  copyFrom(source) {\n    this.pushAll(source._values);\n  }\n  /**\r\n   * Returns the last item from the list, and removes it.\r\n   *\r\n   * @return Item\r\n   */\n  pop() {\n    let index = this._values.length - 1;\n    return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\n  }\n  /**\r\n   * Returns the first item from the list, and removes it.\r\n   *\r\n   * @return Item\r\n   */\n  shift() {\n    return this._values.length ? this.removeIndex(0) : undefined;\n  }\n  /**\r\n   * Sets multiple items to the list.\r\n   *\r\n   * All current items are removed.\r\n   *\r\n   * @param newArray  New items\r\n   */\n  setAll(newArray) {\n    const old = this._values;\n    this._values = [];\n    this._onClear(old);\n    $array.each(newArray, value => {\n      this._values.push(value);\n      this._onPush(value);\n    });\n  }\n  /**\r\n   * Removes all items from the list.\r\n   */\n  clear() {\n    this.setAll([]);\n  }\n  /**\r\n   * Returns an ES6 iterator for the list.\r\n   */\n  *[Symbol.iterator]() {\n    const length = this._values.length;\n    for (let i = 0; i < length; ++i) {\n      yield this._values[i];\n    }\n  }\n  /**\r\n   * Calls `f` for each element in the list.\r\n   *\r\n   * `f` should have at least one parameter defined which will get a current\r\n   * item, with optional second argument - index.\r\n   */\n  each(f) {\n    $array.each(this._values, f);\n  }\n  /**\r\n   * Calls `f` for each element in the list, from right to left.\r\n   *\r\n   * `f` should have at least one parameter defined which will get a current\r\n   * item, with optional second argument - index.\r\n   */\n  eachReverse(f) {\n    $array.eachReverse(this._values, f);\n  }\n}\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\nexport class ListAutoDispose extends List {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * Automatically disposes elements that are removed from the list.\r\n     *\r\n     * @default true\r\n     */\n    Object.defineProperty(this, \"autoDispose\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  /**\r\n   * Swaps indexes of two items in the list.\r\n   *\r\n   * @param a  Item 1\r\n   * @param b  Item 2\r\n   */\n  swap(a, b) {\n    const currentAutoDispose = this.autoDispose;\n    this.autoDispose = false;\n    super.swap(a, b);\n    this.autoDispose = currentAutoDispose;\n  }\n  _onSetIndex(index, oldValue, newValue) {\n    if (this.autoDispose) {\n      oldValue.dispose();\n    }\n    super._onSetIndex(index, oldValue, newValue);\n  }\n  _onRemoveIndex(index, oldValue) {\n    if (this.autoDispose) {\n      oldValue.dispose();\n    }\n    super._onRemoveIndex(index, oldValue);\n  }\n  _onClear(oldValues) {\n    if (this.autoDispose) {\n      $array.each(oldValues, x => {\n        x.dispose();\n      });\n    }\n    super._onClear(oldValues);\n  }\n  _dispose() {\n    if (this.autoDispose) {\n      $array.each(this._values, x => {\n        x.dispose();\n      });\n    }\n  }\n  isDisposed() {\n    return this._disposed;\n  }\n  dispose() {\n    if (!this._disposed) {\n      this._disposed = true;\n      this._dispose();\n    }\n  }\n}\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\nexport class ListTemplate extends ListAutoDispose {\n  constructor(template, make) {\n    super();\n    Object.defineProperty(this, \"template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"make\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.template = template;\n    this.make = make;\n  }\n  _dispose() {\n    super._dispose();\n    if (this.autoDispose) {\n      this.template.dispose();\n    }\n  }\n}\n", "import { isNumber } from \"./Type\";\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\nexport const PI = Math.PI;\nexport const HALFPI = PI / 2;\nexport const RADIANS = PI / 180;\nexport const DEGREES = 180 / PI;\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\nexport function round(value, precision, floor) {\n  if (!isNumber(precision) || precision <= 0) {\n    let rounded = Math.round(value);\n    if (floor) {\n      if (rounded - value == 0.5) {\n        rounded--;\n      }\n    }\n    return rounded;\n  } else {\n    let d = Math.pow(10, precision);\n    return Math.round(value * d) / d;\n  }\n}\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\nexport function ceil(value, precision) {\n  if (!isNumber(precision) || precision <= 0) {\n    return Math.ceil(value);\n  } else {\n    let d = Math.pow(10, precision);\n    return Math.ceil(value * d) / d;\n  }\n}\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\n  return {\n    x: (-p0.x + p1.x / tensionX + p2.x) * tensionX,\n    y: (-p0.y + p1.y / tensionY + p2.y) * tensionY\n  };\n}\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\n  return {\n    x: (p1.x + p2.x / tensionX - p3.x) * tensionX,\n    y: (p1.y + p2.y / tensionY - p3.y) * tensionY\n  };\n}\nexport function fitToRange(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\nexport function sin(angle) {\n  return Math.sin(RADIANS * angle);\n}\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\nexport function tan(angle) {\n  return Math.tan(RADIANS * angle);\n}\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\nexport function cos(angle) {\n  return Math.cos(RADIANS * angle);\n}\n// 0 to 360\nexport function normalizeAngle(value) {\n  value = value % 360;\n  if (value < 0) {\n    value += 360;\n  }\n  return value;\n}\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\n  let minX = Number.MAX_VALUE;\n  let minY = Number.MAX_VALUE;\n  let maxX = -Number.MAX_VALUE;\n  let maxY = -Number.MAX_VALUE;\n  let bpoints = [];\n  bpoints.push(getArcPoint(radius, startAngle));\n  bpoints.push(getArcPoint(radius, endAngle));\n  let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\n  let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\n  for (let angle = fromAngle; angle <= toAngle; angle += 90) {\n    if (angle >= startAngle && angle <= endAngle) {\n      bpoints.push(getArcPoint(radius, angle));\n    }\n  }\n  for (let i = 0; i < bpoints.length; i++) {\n    let pt = bpoints[i];\n    if (pt.x < minX) {\n      minX = pt.x;\n    }\n    if (pt.y < minY) {\n      minY = pt.y;\n    }\n    if (pt.x > maxX) {\n      maxX = pt.x;\n    }\n    if (pt.y > maxY) {\n      maxY = pt.y;\n    }\n  }\n  return {\n    left: cx + minX,\n    top: cy + minY,\n    right: cx + maxX,\n    bottom: cy + maxY\n  };\n}\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\nexport function getArcPoint(radius, arc) {\n  return {\n    x: radius * cos(arc),\n    y: radius * sin(arc)\n  };\n}\nexport function mergeBounds(bounds) {\n  const len = bounds.length;\n  if (len > 0) {\n    let bound = bounds[0];\n    let left = bound.left;\n    let top = bound.top;\n    let right = bound.right;\n    let bottom = bound.bottom;\n    if (len > 1) {\n      for (let i = 1; i < len; i++) {\n        bound = bounds[i];\n        left = Math.min(bound.left, left);\n        right = Math.max(bound.right, right);\n        top = Math.min(bound.top, top);\n        bottom = Math.max(bound.bottom, bottom);\n      }\n    }\n    return {\n      left,\n      right,\n      top,\n      bottom\n    };\n  }\n  return {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n}\nexport function fitAngleToRange(value, startAngle, endAngle) {\n  if (startAngle > endAngle) {\n    let temp = startAngle;\n    startAngle = endAngle;\n    endAngle = temp;\n  }\n  value = normalizeAngle(value);\n  let count = (startAngle - normalizeAngle(startAngle)) / 360;\n  if (value < startAngle) {\n    value += 360 * (count + 1);\n  }\n  let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\n  let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\n  if (value > endAngle) {\n    if (value - 360 > startAngle) {\n      value -= 360;\n    } else {\n      if (value < maxEnd) {\n        value = endAngle;\n      } else {\n        value = startAngle;\n      }\n    }\n  }\n  if (value < startAngle) {\n    if (value > maxStart) {\n      value = startAngle;\n    } else {\n      value = endAngle;\n    }\n  }\n  return value;\n}\nexport function inBounds(point, bounds) {\n  if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\n    return true;\n  }\n  return false;\n}\nexport function getAngle(point1, point2) {\n  if (!point2) {\n    point2 = {\n      x: point1.x * 2,\n      y: point1.y * 2\n    };\n  }\n  let diffX = point2.x - point1.x;\n  let diffY = point2.y - point1.y;\n  let angle = Math.atan2(diffY, diffX) * DEGREES;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return normalizeAngle(angle);\n}\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\n  let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\n  let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\n  return {\n    x: x,\n    y: y\n  };\n}\nexport function getPointOnLine(pointA, pointB, position) {\n  return {\n    x: pointA.x + (pointB.x - pointA.x) * position,\n    y: pointA.y + (pointB.y - pointA.y) * position\n  };\n}\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\nexport function closest(values, referenceValue) {\n  return values.reduce(function (prev, curr) {\n    return Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev;\n  });\n}\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\nexport function boundsOverlap(bounds1, bounds2) {\n  const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\n  const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\n  return horizontalOverlap && verticalOverlap;\n}\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\n  let r = innerRadius + 0.01;\n  startAngle = normalizeAngle(startAngle);\n  endAngle = normalizeAngle(endAngle);\n  let angle = startAngle * RADIANS;\n  if (endAngle < startAngle) {\n    endAngle += 360;\n  }\n  let points = [];\n  while (r < radius + radiusStep) {\n    let stepSize = step;\n    if (stepSize / 2 > r) {\n      stepSize = 2 * r;\n    }\n    let c = Math.max(0.01, Math.min(1, r / 200));\n    stepSize = stepSize * c;\n    let degrees = angle * DEGREES;\n    let point = {\n      x: cx + r * Math.cos(angle),\n      y: cy + r * radiusY / radius * Math.sin(angle)\n    };\n    points.push(point);\n    r = innerRadius + 0.01 + (degrees - startAngle) / 360 * radiusStep;\n    angle += 2 * Math.asin(stepSize / 2 / r);\n    if (angle * DEGREES > endAngle + 360 * Math.ceil((radius - innerRadius) / radiusStep)) {\n      break;\n    }\n  }\n  points.shift();\n  return points;\n}\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\nexport function circlesOverlap(circle1, circle2) {\n  return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\n}\n", "/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport * as $math from \"./Math\";\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\n/**\r\n */\nexport function linear(t) {\n  return t;\n}\nexport function quad(t) {\n  return t * t;\n}\nexport function cubic(t) {\n  return t * t * t;\n}\nexport function pow(t, e) {\n  return Math.pow(t, e);\n}\nexport function exp(t) {\n  return Math.pow(2, 10 * t - 10);\n}\nexport function sine(t) {\n  return 1 - Math.cos(t * $math.HALFPI);\n}\nexport function circle(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n */\nexport function yoyo(ease) {\n  return function (t) {\n    if (t < 0.5) {\n      return ease(t * 2.0);\n    } else {\n      return ease((1.0 - t) * 2.0);\n    }\n  };\n}\nexport function out(ease) {\n  return function (t) {\n    return 1.0 - ease(1.0 - t);\n  };\n}\nexport function inOut(ease) {\n  return function (t) {\n    if (t <= 0.5) {\n      return ease(t * 2.0) / 2.0;\n    } else {\n      return 1.0 - ease((1.0 - t) * 2.0) / 2.0;\n    }\n  };\n}\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\nlet b1 = 4 / 11,\n  b2 = 6 / 11,\n  b3 = 8 / 11,\n  b4 = 3 / 4,\n  b5 = 9 / 11,\n  b6 = 10 / 11,\n  b7 = 15 / 16,\n  b8 = 21 / 22,\n  b9 = 63 / 64,\n  b0 = 1 / b1 / b1;\nexport function bounce(t) {\n  return 1 - bounceOut(1 - t);\n}\n/**\r\n * @ignore\r\n */\nfunction bounceOut(t) {\n  t = t;\n  if (t < b1) {\n    return b0 * t * t;\n  } else if (t < b3) {\n    return b0 * (t -= b2) * t + b4;\n  } else if (t < b6) {\n    return b0 * (t -= b5) * t + b7;\n  } else {\n    return b0 * (t -= b8) * t + b9;\n  }\n}\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * @ignore\r\n */\nlet tau = 2 * Math.PI;\n/**\r\n * @ignore\r\n */\nlet amplitude = 1;\n/**\r\n * @ignore\r\n */\nlet period = 0.3 / tau;\n/**\r\n * @ignore\r\n */\nlet s = Math.asin(1 / amplitude) * period;\nexport function elastic(t) {\n  let v = t;\n  return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\n}\n", "/**\r\n * @ignore\r\n */\nexport class Registry {\n  constructor() {\n    /**\r\n     * Currently running version of amCharts.\r\n     */\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"5.13.3\"\n    });\n    /**\r\n     * List of applied licenses.\r\n     * @ignore\r\n     */\n    Object.defineProperty(this, \"licenses\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    /**\r\n     * Entities that have their `id` setting set.\r\n     */\n    Object.defineProperty(this, \"entitiesById\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    /**\r\n     * All created [[Root]] elements.\r\n     */\n    Object.defineProperty(this, \"rootElements\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n  }\n}\n/**\r\n    * @ignore\r\n */\nexport const registry = new Registry();\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\nexport function addLicense(license) {\n  registry.licenses.push(license);\n}\n/**\r\n * Disposes all [[Root]] elements.\r\n */\nexport function disposeAllRootElements() {\n  let root;\n  while (root = registry.rootElements.pop()) {\n    root.dispose();\n  }\n}\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\nexport function getRootById(id) {\n  let found;\n  registry.rootElements.forEach(item => {\n    if (item.dom.id == id) {\n      found = item;\n    }\n  });\n  return found;\n}\n", "import * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\nexport class State {\n  constructor(entity, settings) {\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_userSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._entity = entity;\n    this._settings = settings;\n    $object.each(settings, key => {\n      this._userSettings[key] = true;\n    });\n  }\n  get(key, fallback) {\n    const value = this._settings[key];\n    if (value !== undefined) {\n      return value;\n    } else {\n      return fallback;\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  setRaw(key, value) {\n    this._settings[key] = value;\n  }\n  /**\r\n   * Sets a setting `value` for the specified `key` to be set when the state\r\n   * is applied.\r\n   *\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  set(key, value) {\n    this._userSettings[key] = true;\n    this.setRaw(key, value);\n  }\n  /**\r\n   * Removes a setting value for the specified `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n  remove(key) {\n    delete this._userSettings[key];\n    delete this._settings[key];\n  }\n  /**\r\n   * Sets multiple settings at once.\r\n   *\r\n   * `settings` must be an object with key: value pairs.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param settings Settings\r\n   */\n  setAll(settings) {\n    $object.keys(settings).forEach(key => {\n      this.set(key, settings[key]);\n    });\n  }\n  _eachSetting(f) {\n    $object.each(this._settings, f);\n  }\n  /**\r\n   * Applies the state to the target element.\r\n   *\r\n   * All setting values are set immediately.\r\n   */\n  apply() {\n    const seen = {};\n    seen[\"stateAnimationEasing\"] = true;\n    seen[\"stateAnimationDuration\"] = true;\n    const defaultState = this._entity.states.lookup(\"default\");\n    this._eachSetting((key, value) => {\n      if (!seen[key]) {\n        seen[key] = true;\n        // save values to default state\n        if (this !== defaultState) {\n          if (!(key in defaultState._settings)) {\n            defaultState._settings[key] = this._entity.get(key);\n          }\n        }\n        this._entity.set(key, value);\n      }\n    });\n  }\n  /**\r\n   * Applies the state to the target element.\r\n   *\r\n   * Returns an object representing all [[Animation]] objects created for\r\n   * each setting key transition.\r\n   *\r\n   * @return           Animations\r\n   */\n  applyAnimate(duration) {\n    if (duration == null) {\n      duration = this._settings.stateAnimationDuration;\n    }\n    if (duration == null) {\n      duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\n    }\n    let easing = this._settings.stateAnimationEasing;\n    if (easing == null) {\n      easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\n    }\n    const defaultState = this._entity.states.lookup(\"default\");\n    const seen = {};\n    seen[\"stateAnimationEasing\"] = true;\n    seen[\"stateAnimationDuration\"] = true;\n    const animations = {};\n    this._eachSetting((key, value) => {\n      if (!seen[key]) {\n        seen[key] = true;\n        // save values to default state\n        if (this != defaultState) {\n          if (!(key in defaultState._settings)) {\n            defaultState._settings[key] = this._entity.get(key);\n          }\n        }\n        const animation = this._entity.animate({\n          key: key,\n          to: value,\n          duration: duration,\n          easing: easing\n        });\n        if (animation) {\n          animations[key] = animation;\n        }\n      }\n    });\n    return animations;\n  }\n}\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\nexport class States {\n  constructor(entity) {\n    Object.defineProperty(this, \"_states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._entity = entity;\n  }\n  /**\r\n   * Checks if a state by `name` exists. Returns it there is one.\r\n   *\r\n   * @param  name  State name\r\n   * @return       State\r\n   */\n  lookup(name) {\n    return this._states[name];\n  }\n  /**\r\n   * Sets supplied `settings` on a state by the `name`.\r\n   *\r\n   * If such state does not yet exists, it is created.\r\n   *\r\n   * @param   name      State name\r\n   * @param   settings  Settings\r\n   * @return            New State\r\n   */\n  create(name, settings) {\n    const state = this._states[name];\n    if (state) {\n      state.setAll(settings);\n      return state;\n    } else {\n      const state = new State(this._entity, settings);\n      this._states[name] = state;\n      return state;\n    }\n  }\n  /**\r\n   * Removes the state called `name`.\r\n   *\r\n   * @param   name      State name\r\n   */\n  remove(name) {\n    delete this._states[name];\n  }\n  /**\r\n   * Applies a named state to the target element.\r\n   *\r\n   * @param  newState  State name\r\n   */\n  apply(newState) {\n    const state = this._states[newState];\n    if (state) {\n      state.apply();\n    }\n    this._entity._applyState(newState);\n  }\n  /**\r\n   * Applies a named state to the element.\r\n   *\r\n   * Returns an object representing all [[Animation]] objects created for\r\n   * each setting key transition.\r\n   *\r\n   * @param   newState  State name\r\n   * @return            Animations\r\n   */\n  applyAnimate(newState, duration) {\n    let animations;\n    const state = this._states[newState];\n    if (state) {\n      animations = state.applyAnimate(duration);\n    }\n    this._entity._applyStateAnimated(newState, duration);\n    return animations;\n  }\n}\n", "import { Disposer } from \"./Disposer\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { AnimationState, getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\nexport class Adapters {\n  constructor(entity) {\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_disabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._entity = entity;\n  }\n  /**\r\n   * Add a function (`callback`) that will modify value for setting `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n   */\n  add(key, callback) {\n    let callbacks = this._callbacks[key];\n    if (callbacks === undefined) {\n      callbacks = this._callbacks[key] = [];\n    }\n    callbacks.push(callback);\n    this._entity._markDirtyKey(key);\n    return new Disposer(() => {\n      if ($array.removeFirst(callbacks, callback)) {\n        this._entity._markDirtyKey(key);\n      }\n    });\n  }\n  /**\r\n   * Removes all adapters for the specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n  remove(key) {\n    const callbacks = this._callbacks[key];\n    if (callbacks !== undefined) {\n      delete this._callbacks[key];\n      if (callbacks.length !== 0) {\n        this._entity._markDirtyKey(key);\n      }\n    }\n  }\n  /**\r\n   * Enables (previously disabled) adapters for specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n  enable(key) {\n    if (this._disabled[key]) {\n      delete this._disabled[key];\n      this._entity._markDirtyKey(key);\n    }\n  }\n  /**\r\n   * Disables all adapters for specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n  disable(key) {\n    if (!this._disabled[key]) {\n      this._disabled[key] = true;\n      this._entity._markDirtyKey(key);\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  fold(key, value) {\n    if (!this._disabled[key]) {\n      const callbacks = this._callbacks[key];\n      if (callbacks !== undefined) {\n        for (let i = 0, len = callbacks.length; i < len; ++i) {\n          value = callbacks[i](value, this._entity, key);\n        }\n      }\n    }\n    return value;\n  }\n}\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\nexport class Animation {\n  constructor(animation, from, to, duration, easing, loops, startingTime) {\n    Object.defineProperty(this, \"_animation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_from\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_to\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_duration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_easing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_loops\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_interpolate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_oldTime\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_time\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_stopped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_playing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    this._animation = animation;\n    this._from = from;\n    this._to = to;\n    this._duration = duration;\n    this._easing = easing;\n    this._loops = loops;\n    this._interpolate = getInterpolate(from, to);\n    this._oldTime = startingTime;\n  }\n  get to() {\n    return this._to;\n  }\n  get from() {\n    return this._from;\n  }\n  get playing() {\n    return this._playing;\n  }\n  get stopped() {\n    return this._stopped;\n  }\n  stop() {\n    if (!this._stopped) {\n      this._stopped = true;\n      this._playing = false;\n      if (this.events.isEnabled(\"stopped\")) {\n        this.events.dispatch(\"stopped\", {\n          type: \"stopped\",\n          target: this\n        });\n      }\n    }\n  }\n  pause() {\n    this._playing = false;\n    this._oldTime = null;\n  }\n  play() {\n    if (!this._stopped && !this._playing) {\n      this._playing = true;\n      this._animation._startAnimation();\n    }\n  }\n  get percentage() {\n    return this._time / this._duration;\n  }\n  waitForStop() {\n    return new Promise((resolve, _reject) => {\n      if (this._stopped) {\n        resolve();\n      } else {\n        const listener = () => {\n          stopped.dispose();\n          resolve();\n        };\n        const stopped = this.events.on(\"stopped\", listener);\n      }\n    });\n  }\n  _checkEnded() {\n    if (this._loops > 1) {\n      --this._loops;\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _run(currentTime) {\n    if (this._oldTime !== null) {\n      this._time += currentTime - this._oldTime;\n      if (this._time > this._duration) {\n        this._time = this._duration;\n      }\n    }\n    this._oldTime = currentTime;\n  }\n  _reset(currentTime) {\n    this._oldTime = currentTime;\n    this._time = 0;\n  }\n  _value(diff) {\n    return this._interpolate(this._easing(diff), this._from, this._to);\n  }\n}\n/**\r\n * @ignore\r\n */\nlet counter = 0;\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\nexport class Settings {\n  constructor(settings) {\n    /**\r\n     * Unique ID.\r\n     */\n    Object.defineProperty(this, \"uid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ++counter\n    });\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_privateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_settingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_privateSettingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_prevSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_prevPrivateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_animatingSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_animatingPrivateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // TODO move this into Entity\n    Object.defineProperty(this, \"_userProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    /**\r\n     * If this is set to `false` then disposing does nothing, it's a no-op.\r\n     */\n    Object.defineProperty(this, \"enableDispose\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    this._settings = settings;\n  }\n  _checkDirty() {\n    $object.keys(this._settings).forEach(key => {\n      this._userProperties[key] = true;\n      this._markDirtyKey(key);\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  resetUserSettings() {\n    this._userProperties = {};\n  }\n  _runAnimation(currentTime) {\n    let state = AnimationState.Stopped;\n    if (!this.isDisposed()) {\n      let playing = false;\n      let paused = false;\n      $object.each(this._animatingSettings, (key, animation) => {\n        if (animation.stopped) {\n          this._stopAnimation(key);\n        } else if (animation.playing) {\n          animation._run(currentTime);\n          const diff = animation.percentage;\n          if (diff >= 1) {\n            if (animation._checkEnded()) {\n              this.set(key, animation._value(1));\n            } else {\n              playing = true;\n              animation._reset(currentTime);\n              this._set(key, animation._value(1));\n            }\n          } else {\n            playing = true;\n            this._set(key, animation._value(diff));\n          }\n        } else {\n          paused = true;\n        }\n      });\n      $object.each(this._animatingPrivateSettings, (key, animation) => {\n        if (animation.stopped) {\n          this._stopAnimationPrivate(key);\n        } else if (animation.playing) {\n          animation._run(currentTime);\n          const diff = animation.percentage;\n          if (diff >= 1) {\n            if (animation._checkEnded()) {\n              this.setPrivate(key, animation._value(1));\n            } else {\n              playing = true;\n              animation._reset(currentTime);\n              this._setPrivate(key, animation._value(1));\n            }\n          } else {\n            playing = true;\n            this._setPrivate(key, animation._value(diff));\n          }\n        } else {\n          paused = true;\n        }\n      });\n      if (playing) {\n        state = AnimationState.Playing;\n      } else if (paused) {\n        state = AnimationState.Paused;\n      }\n    }\n    return state;\n  }\n  _markDirtyKey(_key) {\n    this.markDirty();\n  }\n  _markDirtyPrivateKey(_key) {\n    this.markDirty();\n  }\n  /**\r\n   * Sets a callback function to invoke when specific key of settings changes\r\n   * or is set.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @param   key       Settings key\r\n   * @param   callback  Callback\r\n   * @return            Disposer for event\r\n   */\n  on(key, callback) {\n    let events = this._settingEvents[key];\n    if (events === undefined) {\n      events = this._settingEvents[key] = [];\n    }\n    events.push(callback);\n    return new Disposer(() => {\n      $array.removeFirst(events, callback);\n      if (events.length === 0) {\n        delete this._settingEvents[key];\n      }\n    });\n  }\n  /**\r\n   * Removes a callback for when value of a setting changes.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @param   key       Private settings key\r\n   * @param   callback  Callback\r\n   * @since 5.9.2\r\n   */\n  off(key, callback) {\n    let events = this._settingEvents[key];\n    if (events !== undefined && callback !== undefined) {\n      $array.removeFirst(events, callback);\n    } else {\n      delete this._settingEvents[key];\n    }\n  }\n  /**\r\n   * Sets a callback function to invoke when specific key of private settings\r\n   * changes or is set.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @param   key       Private settings key\r\n   * @param   callback  Callback\r\n   * @return            Disposer for event\r\n   */\n  onPrivate(key, callback) {\n    let events = this._privateSettingEvents[key];\n    if (events === undefined) {\n      events = this._privateSettingEvents[key] = [];\n    }\n    events.push(callback);\n    return new Disposer(() => {\n      $array.removeFirst(events, callback);\n      if (events.length === 0) {\n        delete this._privateSettingEvents[key];\n      }\n    });\n  }\n  /**\r\n   * Removes a callback for when value of a private setting changes.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @param   key       Private settings key\r\n   * @param   callback  Callback\r\n   * @since 5.9.2\r\n   */\n  offPrivate(key, callback) {\n    let events = this._privateSettingEvents[key];\n    if (events !== undefined && callback !== undefined) {\n      $array.removeFirst(events, callback);\n    } else {\n      delete this._privateSettingEvents[key];\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  getRaw(key, fallback) {\n    const value = this._settings[key];\n    if (value !== undefined) {\n      return value;\n    } else {\n      return fallback;\n    }\n  }\n  /**\r\n   * Returns `true` if the setting exists.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key        Settings key\r\n   * @return  {boolean}  Key exists\r\n   */\n  has(key) {\n    return key in this._settings;\n  }\n  get(key, fallback) {\n    return this.getRaw(key, fallback);\n  }\n  _sendKeyEvent(key, value) {\n    const events = this._settingEvents[key];\n    if (events !== undefined) {\n      $array.each(events, callback => {\n        callback(value, this, key);\n      });\n    }\n  }\n  _sendPrivateKeyEvent(key, value) {\n    const events = this._privateSettingEvents[key];\n    if (events !== undefined) {\n      $array.each(events, callback => {\n        callback(value, this, key);\n      });\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  _setRaw(key, old, value) {\n    this._prevSettings[key] = old;\n    this._sendKeyEvent(key, value);\n  }\n  /**\r\n   * @ignore\r\n   */\n  setRaw(key, value) {\n    const old = this._settings[key];\n    this._settings[key] = value;\n    if (old !== value) {\n      this._setRaw(key, old, value);\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  _set(key, value) {\n    const old = this._settings[key];\n    this._settings[key] = value;\n    if (old !== value) {\n      this._setRaw(key, old, value);\n      this._markDirtyKey(key);\n    }\n  }\n  _stopAnimation(key) {\n    const animation = this._animatingSettings[key];\n    if (animation) {\n      delete this._animatingSettings[key];\n      animation.stop();\n    }\n  }\n  /**\r\n   * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  set(key, value) {\n    this._set(key, value);\n    this._stopAnimation(key);\n    return value;\n  }\n  /**\r\n   * Removes a setting value for the specified `key`;\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n  remove(key) {\n    if (key in this._settings) {\n      this._prevSettings[key] = this._settings[key];\n      delete this._settings[key];\n      this._sendKeyEvent(key, undefined);\n      this._markDirtyKey(key);\n    }\n    this._stopAnimation(key);\n  }\n  /**\r\n   * Removes all keys;\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   */\n  removeAll() {\n    $array.each($object.keys(this._settings), key => {\n      this.remove(key);\n    });\n  }\n  /**\r\n   * Returns a value of a private setting.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n   */\n  getPrivate(key, fallback) {\n    const value = this._privateSettings[key];\n    if (value !== undefined) {\n      return value;\n    } else {\n      return fallback;\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  _setPrivateRaw(key, old, value) {\n    this._prevPrivateSettings[key] = old;\n    this._sendPrivateKeyEvent(key, value);\n  }\n  /**\r\n   * @ignore\r\n   */\n  setPrivateRaw(key, value) {\n    const old = this._privateSettings[key];\n    this._privateSettings[key] = value;\n    if (old !== value) {\n      this._setPrivateRaw(key, old, value);\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  _setPrivate(key, value) {\n    const old = this._privateSettings[key];\n    this._privateSettings[key] = value;\n    if (old !== value) {\n      this._setPrivateRaw(key, old, value);\n      this._markDirtyPrivateKey(key);\n    }\n  }\n  _stopAnimationPrivate(key) {\n    const animation = this._animatingPrivateSettings[key];\n    if (animation) {\n      animation.stop();\n      delete this._animatingPrivateSettings[key];\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  setPrivate(key, value) {\n    this._setPrivate(key, value);\n    this._stopAnimationPrivate(key);\n    return value;\n  }\n  /**\r\n   * @ignore\r\n   */\n  removePrivate(key) {\n    if (key in this._privateSettings) {\n      this._prevPrivateSettings[key] = this._privateSettings[key];\n      delete this._privateSettings[key];\n      this._markDirtyPrivateKey(key);\n    }\n    this._stopAnimationPrivate(key);\n  }\n  /**\r\n   * Sets multiple settings at once.\r\n   *\r\n   * `settings` must be an object with key: value pairs.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param settings Settings\r\n   */\n  setAll(settings) {\n    $object.each(settings, (key, value) => {\n      this.set(key, value);\n    });\n  }\n  /**\r\n   * Animates setting values from current/start values to new ones.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n   * @param   options  Animation options\r\n   * @return           Animation object\r\n   */\n  animate(options) {\n    const key = options.key;\n    const to = options.to;\n    const duration = options.duration || 0;\n    const loops = options.loops || 1;\n    const from = options.from === undefined ? this.get(key) : options.from;\n    const easing = options.easing === undefined ? $ease.linear : options.easing;\n    if (duration === 0) {\n      this.set(key, to);\n    } else {\n      if (from === undefined || from === to) {\n        this.set(key, to);\n      } else {\n        this.set(key, from);\n        const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n        this._startAnimation();\n        return animation;\n      }\n    }\n    const animation = new Animation(this, from, to, duration, easing, loops, null);\n    animation.stop();\n    return animation;\n  }\n  /**\r\n   * @ignore\r\n   */\n  animatePrivate(options) {\n    const key = options.key;\n    const to = options.to;\n    const duration = options.duration || 0;\n    const loops = options.loops || 1;\n    const from = options.from === undefined ? this.getPrivate(key) : options.from;\n    const easing = options.easing === undefined ? $ease.linear : options.easing;\n    if (duration === 0) {\n      this.setPrivate(key, to);\n    } else {\n      if (from === undefined || from === to) {\n        this.setPrivate(key, to);\n      } else {\n        this.setPrivate(key, from);\n        const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n        this._startAnimation();\n        return animation;\n      }\n    }\n    const animation = new Animation(this, from, to, duration, easing, loops, null);\n    animation.stop();\n    return animation;\n  }\n  _dispose() {}\n  /**\r\n   * Returns `true` if this element is disposed.\r\n   *\r\n   * @return Disposed\r\n   */\n  isDisposed() {\n    return this._disposed;\n  }\n  /**\r\n   * Disposes this object.\r\n   */\n  dispose() {\n    if (this.enableDispose && !this._disposed) {\n      this._disposed = true;\n      this._dispose();\n    }\n  }\n}\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\nexport class Entity extends Settings {\n  /**\r\n   * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n   *\r\n   * Use static method `Class.new()` instead.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @ignore\r\n   */\n  constructor(root, settings, isReal, templates = []) {\n    super(settings);\n    Object.defineProperty(this, \"_root\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_user_id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // for testing purposes\n    Object.defineProperty(this, \"states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new States(this)\n    });\n    Object.defineProperty(this, \"adapters\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Adapters(this)\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createEvents()\n    });\n    Object.defineProperty(this, \"_userPrivateProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dirtyPrivate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // Templates for the themes\n    Object.defineProperty(this, \"_templates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    // Internal templates which can be overridden by the user's templates\n    Object.defineProperty(this, \"_internalTemplates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // Default themes which can be overridden by the user's themes\n    Object.defineProperty(this, \"_defaultThemes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    // Disposers for all of the templates\n    Object.defineProperty(this, \"_templateDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_disposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    // Whether the template setup function should be run\n    Object.defineProperty(this, \"_runSetup\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"_disposerProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    this._root = root;\n    this._internalTemplates = templates;\n    if (settings.id) {\n      this._registerId(settings.id);\n    }\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n  static new(root, settings, template) {\n    const x = new this(root, settings, true);\n    x._template = template;\n    x._afterNew();\n    return x;\n  }\n  static _new(root, settings, templates = []) {\n    const x = new this(root, settings, true, templates);\n    x._afterNew();\n    return x;\n  }\n  _afterNew() {\n    this._checkDirty();\n    let shouldApply = false;\n    const template = this._template;\n    if (template) {\n      shouldApply = true;\n      template._setObjectTemplate(this);\n    }\n    $array.each(this._internalTemplates, template => {\n      shouldApply = true;\n      template._setObjectTemplate(this);\n    });\n    if (shouldApply) {\n      this._applyTemplates(false);\n    }\n    this.states.create(\"default\", {});\n    this._setDefaults();\n  }\n  // This is the same as _afterNew, except it also applies the themes.\n  // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n  _afterNewApplyThemes() {\n    this._checkDirty();\n    const template = this._template;\n    if (template) {\n      template._setObjectTemplate(this);\n    }\n    $array.each(this._internalTemplates, template => {\n      template._setObjectTemplate(this);\n    });\n    this.states.create(\"default\", {});\n    this._setDefaults();\n    this._applyThemes();\n  }\n  _createEvents() {\n    return new EventDispatcher();\n  }\n  /**\r\n   * @ignore\r\n   */\n  get classNames() {\n    return this.constructor.classNames;\n  }\n  /**\r\n   * @ignore\r\n   */\n  get className() {\n    return this.constructor.className;\n  }\n  _setDefaults() {}\n  _setDefaultFn(key, f) {\n    const value = this.get(key);\n    if (value) {\n      return value;\n    } else {\n      const value = f();\n      this.set(key, value);\n      return value;\n    }\n  }\n  _setDefault(key, value) {\n    if (!this.has(key)) {\n      super.set(key, value);\n    }\n  }\n  _setRawDefault(key, value) {\n    if (!this.has(key)) {\n      super.setRaw(key, value);\n    }\n  }\n  _clearDirty() {\n    $object.keys(this._dirty).forEach(key => {\n      this._dirty[key] = false;\n    });\n    $object.keys(this._dirtyPrivate).forEach(key => {\n      this._dirtyPrivate[key] = false;\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  isDirty(key) {\n    return !!this._dirty[key];\n  }\n  /**\r\n   * @ignore\r\n   */\n  isPrivateDirty(key) {\n    return !!this._dirtyPrivate[key];\n  }\n  _markDirtyKey(key) {\n    this._dirty[key] = true;\n    super._markDirtyKey(key);\n  }\n  _markDirtyPrivateKey(key) {\n    this._dirtyPrivate[key] = true;\n    super._markDirtyKey(key);\n  }\n  /**\r\n   * Checks if element is of certain class (or inherits one).\r\n   *\r\n   * @param   type  Class name to check\r\n   * @return {boolean} Is of class?\r\n   */\n  isType(type) {\n    return this.classNames.indexOf(type) !== -1;\n  }\n  _pushPropertyDisposer(key, disposer) {\n    let disposers = this._disposerProperties[key];\n    if (disposers === undefined) {\n      disposers = this._disposerProperties[key] = [];\n    }\n    disposers.push(disposer);\n    return disposer;\n  }\n  _disposeProperty(key) {\n    const disposers = this._disposerProperties[key];\n    if (disposers !== undefined) {\n      $array.each(disposers, disposer => {\n        disposer.dispose();\n      });\n      delete this._disposerProperties[key];\n    }\n  }\n  /**\r\n   * @todo needs description\r\n   * @param  value  Template\r\n   */\n  set template(value) {\n    const template = this._template;\n    if (template !== value) {\n      this._template = value;\n      if (template) {\n        template._removeObjectTemplate(this);\n      }\n      if (value) {\n        value._setObjectTemplate(this);\n      }\n      this._applyTemplates();\n    }\n  }\n  get template() {\n    return this._template;\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirty() {\n    this._root._addDirtyEntity(this);\n  }\n  _startAnimation() {\n    this._root._addAnimation(this);\n  }\n  _animationTime() {\n    return this._root.animationTime;\n  }\n  _applyState(_name) {}\n  _applyStateAnimated(_name, _duration) {}\n  get(key, fallback) {\n    const value = this.adapters.fold(key, this._settings[key]);\n    if (value !== undefined) {\n      return value;\n    } else {\n      return fallback;\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  isUserSetting(key) {\n    return this._userProperties[key] || false;\n  }\n  /**\r\n   * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  set(key, value) {\n    this._userProperties[key] = true;\n    return super.set(key, value);\n  }\n  /**\r\n   * @ignore\r\n   */\n  setRaw(key, value) {\n    this._userProperties[key] = true;\n    super.setRaw(key, value);\n  }\n  /**\r\n   * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  _setSoft(key, value) {\n    if (!this._userProperties[key]) {\n      return super.set(key, value);\n    }\n    return value;\n  }\n  /**\r\n   * Removes a setting value for the specified `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n  remove(key) {\n    delete this._userProperties[key];\n    this._removeTemplateProperty(key);\n  }\n  /**\r\n   * @ignore\r\n   */\n  setPrivate(key, value) {\n    this._userPrivateProperties[key] = true;\n    return super.setPrivate(key, value);\n  }\n  /**\r\n   * @ignore\r\n   */\n  setPrivateRaw(key, value) {\n    this._userPrivateProperties[key] = true;\n    super.setPrivateRaw(key, value);\n  }\n  /**\r\n   * @ignore\r\n   */\n  removePrivate(key) {\n    delete this._userPrivateProperties[key];\n    this._removeTemplatePrivateProperty(key);\n  }\n  _setTemplateProperty(template, key, value) {\n    if (!this._userProperties[key]) {\n      const match = this._findTemplateByKey(key);\n      if (template === match) {\n        super.set(key, value);\n      }\n    }\n  }\n  _setTemplatePrivateProperty(template, key, value) {\n    if (!this._userPrivateProperties[key]) {\n      const match = this._findTemplateByPrivateKey(key);\n      if (template === match) {\n        super.setPrivate(key, value);\n      }\n    }\n  }\n  _removeTemplateProperty(key) {\n    if (!this._userProperties[key]) {\n      const match = this._findTemplateByKey(key);\n      if (match) {\n        // TODO don't stop the animation if the property didn't change\n        super.set(key, match._settings[key]);\n      } else {\n        super.remove(key);\n      }\n    }\n  }\n  _removeTemplatePrivateProperty(key) {\n    if (!this._userPrivateProperties[key]) {\n      const match = this._findTemplateByPrivateKey(key);\n      if (match) {\n        // TODO don't stop the animation if the property didn't change\n        super.setPrivate(key, match._privateSettings[key]);\n      } else {\n        super.removePrivate(key);\n      }\n    }\n  }\n  _walkParents(f) {\n    f(this._root._rootContainer);\n    f(this);\n  }\n  // TODO faster version of this method which is specialized to just 1 key\n  _applyStateByKey(name) {\n    const other = this.states.create(name, {});\n    const seen = {};\n    this._eachTemplate(template => {\n      const state = template.states.lookup(name);\n      if (state) {\n        state._apply(other, seen);\n      }\n    });\n    $object.each(other._settings, key => {\n      if (!seen[key] && !other._userSettings[key]) {\n        other.remove(key);\n      }\n    });\n  }\n  _applyTemplate(template, state) {\n    this._templateDisposers.push(template._apply(this, state));\n    $object.each(template._settings, (key, value) => {\n      if (!state.settings[key] && !this._userProperties[key]) {\n        state.settings[key] = true;\n        super.set(key, value);\n      }\n    });\n    $object.each(template._privateSettings, (key, value) => {\n      if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n        state.privateSettings[key] = true;\n        super.setPrivate(key, value);\n      }\n    });\n    if (this._runSetup && template.setup) {\n      this._runSetup = false;\n      template.setup(this);\n    }\n  }\n  /**\r\n   * Calls the closure with each template and returns the first template which is true\r\n   */\n  _findStaticTemplate(f) {\n    if (this._template) {\n      if (f(this._template)) {\n        return this._template;\n      }\n    }\n  }\n  _eachTemplate(f) {\n    this._findStaticTemplate(template => {\n      f(template);\n      return false;\n    });\n    // _internalTemplates is sorted with most specific to the right\n    $array.eachReverse(this._internalTemplates, f);\n    // _templates is sorted with most specific to the left\n    $array.each(this._templates, f);\n  }\n  _applyTemplates(remove = true) {\n    if (remove) {\n      this._disposeTemplates();\n    }\n    const state = {\n      settings: {},\n      privateSettings: {},\n      states: {}\n    };\n    this._eachTemplate(template => {\n      this._applyTemplate(template, state);\n    });\n    if (remove) {\n      $object.each(this._settings, key => {\n        if (!this._userProperties[key] && !state.settings[key]) {\n          super.remove(key);\n        }\n      });\n      $object.each(this._privateSettings, key => {\n        if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\n          super.removePrivate(key);\n        }\n      });\n    }\n  }\n  _findTemplate(f) {\n    const value = this._findStaticTemplate(f);\n    if (value === undefined) {\n      // _internalTemplates is sorted with most specific to the right\n      const value = $array.findReverse(this._internalTemplates, f);\n      if (value === undefined) {\n        // _templates is sorted with most specific to the left\n        return $array.find(this._templates, f);\n      } else {\n        return value;\n      }\n    } else {\n      return value;\n    }\n  }\n  _findTemplateByKey(key) {\n    return this._findTemplate(template => {\n      return key in template._settings;\n    });\n  }\n  _findTemplateByPrivateKey(key) {\n    return this._findTemplate(template => {\n      return key in template._privateSettings;\n    });\n  }\n  _disposeTemplates() {\n    $array.each(this._templateDisposers, disposer => {\n      disposer.dispose();\n    });\n    this._templateDisposers.length = 0;\n  }\n  _removeTemplates() {\n    $array.each(this._templates, template => {\n      template._removeObjectTemplate(this);\n    });\n    this._templates.length = 0;\n  }\n  _applyThemes(force = false) {\n    let isConnected = false;\n    const defaults = [];\n    let themes = [];\n    const themeTags = new Set();\n    const tags = this.get(\"themeTagsSelf\");\n    if (tags) {\n      $array.each(tags, tag => {\n        themeTags.add(tag);\n      });\n    }\n    this._walkParents(entity => {\n      if (entity === this._root._rootContainer) {\n        isConnected = true;\n      }\n      if (entity._defaultThemes.length > 0) {\n        defaults.push(entity._defaultThemes);\n      }\n      const theme = entity.get(\"themes\");\n      if (theme) {\n        themes.push(theme);\n      }\n      const tags = entity.get(\"themeTags\");\n      if (tags) {\n        $array.each(tags, tag => {\n          themeTags.add(tag);\n        });\n      }\n    });\n    themes = defaults.concat(themes);\n    this._removeTemplates();\n    if (isConnected || force) {\n      $array.eachReverse(this.classNames, name => {\n        const allRules = [];\n        $array.each(themes, themes => {\n          $array.each(themes, theme => {\n            const rules = theme._lookupRules(name);\n            if (rules) {\n              $array.eachReverse(rules, rule => {\n                const matches = rule.tags.every(tag => {\n                  return themeTags.has(tag);\n                });\n                if (matches) {\n                  const result = $array.getFirstSortedIndex(allRules, x => {\n                    const order = $order.compare(rule.tags.length, x.tags.length);\n                    if (order === 0) {\n                      return $order.compareArray(rule.tags, x.tags, $order.compare);\n                    } else {\n                      return order;\n                    }\n                  });\n                  allRules.splice(result.index, 0, rule);\n                }\n              });\n            }\n          });\n        });\n        $array.each(allRules, rule => {\n          this._templates.push(rule.template);\n          rule.template._setObjectTemplate(this);\n        });\n      });\n    }\n    this._applyTemplates();\n    if (isConnected || force) {\n      // This causes it to only run the setup function the first time that the themes are applied\n      this._runSetup = false;\n    }\n    return isConnected || force;\n  }\n  _changed() {}\n  _beforeChanged() {\n    if (this.isDirty(\"id\")) {\n      const id = this.get(\"id\");\n      if (id) {\n        this._registerId(id);\n      }\n      const prevId = this._prevSettings.id;\n      if (prevId) {\n        delete this._root.entitiesById[prevId];\n        delete registry.entitiesById[prevId];\n      }\n    }\n  }\n  _registerId(id) {\n    if (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\n      throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n    }\n    this._root.entitiesById[id] = this;\n    registry.entitiesById[id] = this;\n  }\n  _afterChanged() {}\n  /**\r\n   * @ignore\r\n   */\n  addDisposer(disposer) {\n    this._disposers.push(disposer);\n    return disposer;\n  }\n  _dispose() {\n    super._dispose();\n    const template = this._template;\n    if (template) {\n      template._removeObjectTemplate(this);\n    }\n    $array.each(this._internalTemplates, template => {\n      template._removeObjectTemplate(this);\n    });\n    this._removeTemplates();\n    this._disposeTemplates();\n    this.events.dispose();\n    this._disposers.forEach(x => {\n      x.dispose();\n    });\n    $object.each(this._disposerProperties, (_, disposers) => {\n      $array.each(disposers, disposer => {\n        disposer.dispose();\n      });\n    });\n    const id = this.get(\"id\");\n    if (id) {\n      delete this._root.entitiesById[id];\n      delete registry.entitiesById[id];\n    }\n  }\n  /**\r\n   * Creates and returns a \"disposable\" timeout.\r\n   *\r\n   * @param   fn     Callback\r\n   * @param   delay  Delay in milliseconds\r\n   * @return         Timeout disposer\r\n   */\n  setTimeout(fn, delay) {\n    const id = setTimeout(() => {\n      this.removeDispose(disposer);\n      fn();\n    }, delay);\n    const disposer = new Disposer(() => {\n      clearTimeout(id);\n    });\n    this._disposers.push(disposer);\n    return disposer;\n  }\n  /**\r\n   * @ignore\r\n   */\n  removeDispose(target) {\n    if (!this.isDisposed()) {\n      let index = $array.indexOf(this._disposers, target);\n      if (index > -1) {\n        this._disposers.splice(index, 1);\n      }\n    }\n    target.dispose();\n  }\n  /**\r\n   * @ignore\r\n   */\n  hasTag(tag) {\n    return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n  }\n  /**\r\n   * @ignore\r\n   */\n  addTag(tag) {\n    if (!this.hasTag(tag)) {\n      const tags = this.get(\"themeTags\", []);\n      tags.push(tag);\n      this.set(\"themeTags\", tags);\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  removeTag(tag) {\n    if (this.hasTag(tag)) {\n      const tags = this.get(\"themeTags\", []);\n      $array.remove(tags, tag);\n      this.set(\"themeTags\", tags);\n    }\n  }\n  _t(text, locale, ...rest) {\n    return this._root.language.translate(text, locale, ...rest);\n  }\n  /**\r\n   * An instance of [[Root]] object.\r\n   *\r\n   * @readonly\r\n   * @since 5.0.6\r\n   * @return Root object\r\n   */\n  get root() {\n    return this._root;\n  }\n}\nObject.defineProperty(Entity, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Entity\"\n});\nObject.defineProperty(Entity, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: [\"Entity\"]\n});\n", "import { __awaiter } from \"tslib\";\nimport { Entity } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher } from \"../util/EventDispatcher\";\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\nimport * as $math from \"../util/Math\";\n//import { populateString } from \"../util/PopulateString\";\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\nclass SpriteEventDispatcher extends EventDispatcher {\n  constructor(sprite) {\n    super();\n    Object.defineProperty(this, \"_sprite\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_rendererDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dispatchParents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    this._sprite = sprite;\n  }\n  _makePointerEvent(key, event) {\n    return {\n      type: key,\n      originalEvent: event.event,\n      point: event.point,\n      simulated: event.simulated,\n      native: event.native,\n      target: this._sprite\n    };\n  }\n  _onRenderer(key, dispatch) {\n    // TODO: is this OK? it'd be good not to require to set this on each individual element\n    this._sprite.set(\"interactive\", true);\n    this._sprite._display.interactive = true;\n    let events = this._rendererDisposers[key];\n    if (events === undefined) {\n      const disposer = this._sprite._display.on(key, e => {\n        dispatch.call(this, e);\n      });\n      events = this._rendererDisposers[key] = new CounterDisposer(() => {\n        delete this._rendererDisposers[key];\n        disposer.dispose();\n      });\n    }\n    return events.increment();\n  }\n  _on(once, type, callback, context, shouldClone, dispatch) {\n    const info = super._on(once, type, callback, context, shouldClone, dispatch);\n    const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\n    if (rendererEvent !== undefined) {\n      info.disposer = new MultiDisposer([info.disposer, this._onRenderer(type, rendererEvent)]);\n    }\n    return info;\n  }\n  /**\r\n   * Will stop any bubbling up of the event to element's parents.\r\n   *\r\n   * Should be called in an event handler, e.g.:\r\n   *\r\n   * ```TypeScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   * ```JavaScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   */\n  stopParentDispatch() {\n    this._dispatchParents = false;\n  }\n  /**\r\n   * @ignore\r\n   */\n  dispatchParents(type, event) {\n    const old = this._dispatchParents;\n    this._dispatchParents = true;\n    try {\n      this.dispatch(type, event);\n      if (this._dispatchParents && this._sprite.parent) {\n        this._sprite.parent.events.dispatchParents(type, event);\n      }\n    } finally {\n      this._dispatchParents = old;\n    }\n  }\n}\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: {\n    \"click\": function (event) {\n      if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n        this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n      }\n    },\n    \"rightclick\": function (event) {\n      if (this.isEnabled(\"rightclick\")) {\n        this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n      }\n    },\n    \"middleclick\": function (event) {\n      if (this.isEnabled(\"middleclick\")) {\n        this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n      }\n    },\n    \"dblclick\": function (event) {\n      this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n    },\n    \"pointerover\": function (event) {\n      const sprite = this._sprite;\n      let dispatch = true;\n      if (sprite.getPrivate(\"trustBounds\")) {\n        sprite._getBounds();\n        const bounds = sprite.globalBounds();\n        if (sprite.isType(\"Graphics\")) {\n          const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\n          if (strokeWidth >= 1) {\n            bounds.left -= strokeWidth;\n            bounds.right += strokeWidth;\n            bounds.top -= strokeWidth;\n            bounds.bottom += strokeWidth;\n          }\n        }\n        if (!$math.inBounds(event.point, bounds)) {\n          dispatch = false;\n          sprite._root._renderer.removeHovering(sprite._display);\n        }\n      }\n      if (dispatch && this.isEnabled(\"pointerover\")) {\n        this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n      }\n    },\n    \"pointerout\": function (event) {\n      if (this.isEnabled(\"pointerout\")) {\n        this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n      }\n    },\n    \"pointerdown\": function (event) {\n      this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n    },\n    \"pointerup\": function (event) {\n      if (this.isEnabled(\"pointerup\")) {\n        this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n      }\n    },\n    \"globalpointerup\": function (event) {\n      if (this.isEnabled(\"globalpointerup\")) {\n        this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n      }\n    },\n    \"globalpointermove\": function (event) {\n      if (this.isEnabled(\"globalpointermove\")) {\n        this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n      }\n    },\n    \"wheel\": function (event) {\n      this.dispatchParents(\"wheel\", {\n        type: \"wheel\",\n        target: this._sprite,\n        originalEvent: event.event,\n        point: event.point\n      });\n    }\n  }\n});\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\nexport class Sprite extends Entity {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_adjustedLocalBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_dataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_templateField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_sizeDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // Will be true only when dragging\n    Object.defineProperty(this, \"_isDragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // The event when the dragging starts\n    Object.defineProperty(this, \"_dragEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // The position when dragging starts\n    Object.defineProperty(this, \"_dragPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_isHidden\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isShowing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isHiding\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_downPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_downPoints\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_toggleDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_dragDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_hoverDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_focusDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipMoveDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipPointerDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_statesHandled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    this.setPrivateRaw(\"visible\", true);\n    super._afterNew();\n  }\n  /**\r\n   * Marks some setting as dirty. Could be used to trigger adapter.\r\n   * @param key\r\n   */\n  markDirtyKey(key) {\n    this._markDirtyKey(key);\n  }\n  _markDirtyKey(key) {\n    super._markDirtyKey(key);\n    if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n      this.markDirtyBounds();\n      this._addPercentagePositionChildren();\n      this.markDirtyPosition();\n    }\n  }\n  _markDirtyPrivateKey(key) {\n    super._markDirtyPrivateKey(key);\n    if (key == \"x\" || key == \"y\") {\n      this.markDirtyPosition();\n    }\n  }\n  _removeTemplateField() {\n    if (this._templateField) {\n      this._templateField._removeObjectTemplate(this);\n    }\n  }\n  _createEvents() {\n    return new SpriteEventDispatcher(this);\n  }\n  _processTemplateField() {\n    let template;\n    const field = this.get(\"templateField\");\n    if (field) {\n      const dataItem = this.dataItem;\n      if (dataItem) {\n        const context = dataItem.dataContext;\n        if (context) {\n          template = context[field];\n          if (!(template instanceof Template) && template) {\n            template = Template.new(template);\n          }\n        }\n      }\n    }\n    if (this._templateField !== template) {\n      this._removeTemplateField();\n      this._templateField = template;\n      if (template) {\n        template._setObjectTemplate(this);\n      }\n      this._applyTemplates();\n    }\n  }\n  // TODO change this to run before the element is added to the parent, so that way\n  //      it doesn't need to apply the themes twice\n  _setDataItem(dataItem) {\n    const oldDataItem = this._dataItem;\n    this._dataItem = dataItem;\n    this._processTemplateField();\n    const eventType = \"dataitemchanged\";\n    if (dataItem != oldDataItem) {\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this,\n          oldDataItem: oldDataItem,\n          newDataItem: dataItem\n        });\n      }\n    }\n  }\n  /**\r\n   * A [[DataItem]] used for this element.\r\n   *\r\n   * NOTE: data item is being assigned automatically in most cases where it\r\n   * matters. Use this accessor to set data item only if you know what you're\r\n   * doing.\r\n   *\r\n   * @param  value  Data item\r\n   */\n  set dataItem(value) {\n    this._setDataItem(value);\n  }\n  /**\r\n   * @return DataItem\r\n   */\n  get dataItem() {\n    if (this._dataItem) {\n      return this._dataItem;\n    } else {\n      let parent = this._parent;\n      while (parent) {\n        if (parent._dataItem) {\n          return parent._dataItem;\n        } else {\n          parent = parent._parent;\n        }\n      }\n    }\n  }\n  _addPercentageSizeChildren() {\n    let parent = this.parent;\n    if (parent) {\n      if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n        $array.pushOne(parent._percentageSizeChildren, this);\n      } else {\n        $array.removeFirst(parent._percentageSizeChildren, this);\n      }\n    }\n  }\n  _addPercentagePositionChildren() {\n    let parent = this.parent;\n    if (parent) {\n      if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n        $array.pushOne(parent._percentagePositionChildren, this);\n      } else {\n        $array.removeFirst(parent._percentagePositionChildren, this);\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyPosition() {\n    this._root._addDirtyPosition(this);\n  }\n  updatePivotPoint() {\n    const bounds = this._localBounds;\n    if (bounds) {\n      const centerX = this.get(\"centerX\");\n      if (centerX != null) {\n        this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\n      }\n      const centerY = this.get(\"centerY\");\n      if (centerY != null) {\n        this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\n      }\n    }\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    // handling states in beforeChanged, otherwise states is not applied without animated theme\n    this._handleStates();\n    if (this.isDirty(\"tooltip\")) {\n      const previous = this._prevSettings.tooltip;\n      if (previous) {\n        previous.dispose();\n      }\n    }\n    if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n      this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n      this.markDirtyLayer();\n    }\n    if (this.isDirty(\"tooltipPosition\")) {\n      const tooltipMoveDp = this._tooltipMoveDp;\n      if (tooltipMoveDp) {\n        tooltipMoveDp.dispose();\n        this._tooltipMoveDp = undefined;\n      }\n      const tooltipPointerDp = this._tooltipPointerDp;\n      if (tooltipPointerDp) {\n        tooltipPointerDp.dispose();\n        this._tooltipPointerDp = undefined;\n      }\n      if (this.get(\"tooltipPosition\") == \"pointer\") {\n        if (this.isHover()) {\n          this._tooltipMoveDp = this.events.on(\"globalpointermove\", e => {\n            this.showTooltip(e.point);\n          });\n        }\n        this._tooltipPointerDp = new MultiDisposer([this.events.on(\"pointerover\", () => {\n          this._tooltipMoveDp = this.events.on(\"globalpointermove\", e => {\n            this.showTooltip(e.point);\n          });\n        }), this.events.on(\"pointerout\", () => {\n          const tooltipMoveDp = this._tooltipMoveDp;\n          if (tooltipMoveDp) {\n            tooltipMoveDp.dispose();\n            this._tooltipMoveDp = undefined;\n          }\n        })]);\n      }\n    }\n  }\n  _handleStates() {\n    if (!this._statesHandled) {\n      if (this.isDirty(\"active\")) {\n        if (this.get(\"active\")) {\n          this.states.applyAnimate(\"active\");\n          this.set(\"ariaChecked\", true);\n        } else {\n          if (!this.isHidden()) {\n            this.states.applyAnimate(\"default\");\n          }\n          this.set(\"ariaChecked\", false);\n        }\n        this.markDirtyAccessibility();\n      }\n      if (this.isDirty(\"disabled\")) {\n        if (this.get(\"disabled\")) {\n          this.states.applyAnimate(\"disabled\");\n          this.set(\"ariaChecked\", false);\n        } else {\n          if (!this.isHidden()) {\n            this.states.applyAnimate(\"default\");\n          }\n          this.set(\"ariaChecked\", true);\n        }\n        this.markDirtyAccessibility();\n      }\n      this._statesHandled = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    const display = this._display;\n    const events = this.events;\n    if (this.isDirty(\"draggable\")) {\n      const draggable = this.get(\"draggable\");\n      if (draggable) {\n        this.set(\"interactive\", true);\n        this._dragDp = new MultiDisposer([events.on(\"pointerdown\", ev => {\n          this.dragStart(ev);\n        }), events.on(\"globalpointermove\", ev => {\n          this.dragMove(ev);\n        }), events.on(\"globalpointerup\", ev => {\n          this.dragStop(ev);\n        })]);\n      } else {\n        if (this._dragDp) {\n          this._dragDp.dispose();\n          this._dragDp = undefined;\n        }\n      }\n      display.cancelTouch = draggable ? true : false;\n    }\n    if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n      const tooltipText = this.get(\"tooltipText\");\n      const tooltipHTML = this.get(\"tooltipHTML\");\n      const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n      if (this._tooltipDp) {\n        this._tooltipDp.dispose();\n        this._tooltipDp = undefined;\n      }\n      if (tooltipText || tooltipHTML) {\n        if (showTooltipOn == \"click\") {\n          this._tooltipDp = new MultiDisposer([events.on(\"click\", () => {\n            this.setTimeout(() => {\n              const tooltip = this.getTooltip();\n              if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\n                this.hideTooltip();\n              } else {\n                this.showTooltip();\n              }\n            }, 10);\n          }), $utils.addEventListener(document, \"click\", _ev => {\n            this.hideTooltip();\n          })]);\n          this._disposers.push(this._tooltipDp);\n        } else if (showTooltipOn == \"always\") {\n          // nothing\n        } else {\n          this._tooltipDp = new MultiDisposer([events.on(\"pointerover\", () => {\n            this.showTooltip();\n          }), events.on(\"pointerout\", () => {\n            this.hideTooltip();\n          })]);\n          this._disposers.push(this._tooltipDp);\n        }\n      }\n    }\n    if (this.isDirty(\"toggleKey\")) {\n      let toggleKey = this.get(\"toggleKey\");\n      if (toggleKey && toggleKey != \"none\") {\n        this._toggleDp = events.on(\"click\", () => {\n          if (!this._isDragging) {\n            this.set(toggleKey, !this.get(toggleKey));\n          }\n        });\n      } else {\n        if (this._toggleDp) {\n          this._toggleDp.dispose();\n          this._toggleDp = undefined;\n        }\n      }\n    }\n    if (this.isDirty(\"opacity\")) {\n      display.alpha = Math.max(0, this.get(\"opacity\", 1));\n      if (this.get(\"focusable\")) {\n        this.markDirtyAccessibility();\n      }\n    }\n    if (this.isDirty(\"rotation\")) {\n      this.markDirtyBounds();\n      display.angle = this.get(\"rotation\", 0);\n    }\n    if (this.isDirty(\"scale\")) {\n      this.markDirtyBounds();\n      display.scale = this.get(\"scale\", 0);\n    }\n    if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n      this.markDirtyBounds();\n      this.updatePivotPoint();\n    }\n    if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n      if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n        display.visible = false;\n        this.hideTooltip();\n      } else {\n        display.visible = true;\n      }\n      this.markDirtyBounds();\n      if (this.get(\"focusable\")) {\n        this.markDirtyAccessibility();\n      }\n    }\n    if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n      this.markDirtyBounds();\n      this._addPercentageSizeChildren();\n      const parent = this.parent;\n      if (parent) {\n        if (this.isDirty(\"width\") && this.get(\"width\") instanceof Percent || this.isDirty(\"height\") && this.get(\"height\") instanceof Percent) {\n          parent.markDirty();\n          parent._prevWidth = 0;\n        }\n      }\n      this._sizeDirty = true;\n    }\n    if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\n      this.markDirtyBounds();\n      this._sizeDirty = true;\n    }\n    if (this._sizeDirty) {\n      this._updateSize();\n    }\n    if (this.isDirty(\"wheelable\")) {\n      const wheelable = this.get(\"wheelable\");\n      if (wheelable) {\n        this.set(\"interactive\", true);\n      }\n      display.wheelable = wheelable ? true : false;\n    }\n    // Accessibility\n    if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n      if (this.get(\"focusable\")) {\n        this._root._registerTabindexOrder(this);\n      } else {\n        this._root._unregisterTabindexOrder(this);\n      }\n    }\n    if (this.isDirty(\"filter\")) {\n      //this.markDirtyBounds();\n      display.filter = this.get(\"filter\");\n    }\n    let filter = this.get(\"filter\", \"\");\n    if (this.isDirty(\"blur\")) {\n      const blur = this.get(\"blur\", 0);\n      if (blur != 0) {\n        filter += \" blur(\" + blur + \"px)\";\n      }\n    }\n    if (this.isDirty(\"saturate\")) {\n      const saturate = this.get(\"saturate\", 1);\n      if (saturate != 1) {\n        filter += \" saturate(\" + saturate + \")\";\n      }\n    }\n    if (this.isDirty(\"brightness\")) {\n      const brightness = this.get(\"brightness\", 1);\n      if (brightness != 1) {\n        filter += \" brightness(\" + brightness + \")\";\n      }\n    }\n    if (this.isDirty(\"contrast\")) {\n      const contrast = this.get(\"contrast\", 1);\n      if (contrast != 1) {\n        filter += \" contrast(\" + contrast + \")\";\n      }\n    }\n    if (this.isDirty(\"sepia\")) {\n      const sepia = this.get(\"sepia\", 0);\n      if (sepia != 0) {\n        filter += \" sepia(\" + sepia + \")\";\n      }\n    }\n    if (this.isDirty(\"hue\")) {\n      const hue = this.get(\"hue\", 0);\n      if (hue != 0) {\n        filter += \" hue-rotate(\" + hue + \"deg)\";\n      }\n    }\n    if (this.isDirty(\"invert\")) {\n      const invert = this.get(\"invert\", 0);\n      if (invert != 0) {\n        filter += \" invert(\" + invert + \")\";\n      }\n    }\n    if (filter) {\n      display.filter = filter;\n    }\n    if (this.isDirty(\"cursorOverStyle\")) {\n      display.cursorOverStyle = this.get(\"cursorOverStyle\");\n    }\n    if (this.isDirty(\"hoverOnFocus\")) {\n      if (this.get(\"hoverOnFocus\")) {\n        this._focusDp = new MultiDisposer([events.on(\"focus\", () => {\n          // TODO: proper hover, not just tooltip\n          this.showTooltip();\n        }), events.on(\"blur\", () => {\n          // TODO: proper hover, not just tooltip\n          this.hideTooltip();\n        })]);\n      } else {\n        if (this._focusDp) {\n          this._focusDp.dispose();\n          this._focusDp = undefined;\n        }\n      }\n    }\n    if (this.isDirty(\"focusable\")) {\n      if (this.get(\"focusable\")) {\n        this._root._registerTabindexOrder(this);\n      } else {\n        this._root._unregisterTabindexOrder(this);\n      }\n      this.markDirtyAccessibility();\n      this._disposers.push(events.on(\"blur\", () => {\n        this.setPrivateRaw(\"touchHovering\", false);\n      }));\n      this._disposers.push(events.once(\"boundschanged\", () => {\n        // We might need to do this to re-evaluate accessibility attributes\n        // once the element gains size (bounds)\n        this.markDirtyAccessibility();\n      }));\n    }\n    if (this.isPrivateDirty(\"focusable\")) {\n      this.markDirtyAccessibility();\n    }\n    if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\n      // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n      // @todo make sure ariaLabel gets populated in Root\n      this.markDirtyAccessibility();\n    }\n    if (this.isDirty(\"exportable\")) {\n      display.exportable = this.get(\"exportable\");\n    }\n    if (this.isDirty(\"interactive\")) {\n      const events = this.events;\n      if (this.get(\"interactive\") && !events.isDisposed()) {\n        this._hoverDp = new MultiDisposer([events.on(\"click\", ev => {\n          if ($utils.isTouchEvent(ev.originalEvent)) {\n            if (!this.getPrivate(\"touchHovering\")) {\n              this.setTimeout(() => {\n                this._handleOver();\n                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n                  this.showTooltip();\n                }\n                this.setPrivateRaw(\"touchHovering\", true);\n                this.events.dispatch(\"pointerover\", {\n                  type: \"pointerover\",\n                  target: ev.target,\n                  originalEvent: ev.originalEvent,\n                  point: ev.point,\n                  simulated: ev.simulated\n                });\n              }, 10);\n            }\n          }\n        }), events.on(\"globalpointerup\", ev => {\n          if ($utils.isTouchEvent(ev.originalEvent)) {\n            if (this.getPrivate(\"touchHovering\")) {\n              this._handleOut();\n              if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n                this.hideTooltip();\n              }\n              this.setPrivateRaw(\"touchHovering\", false);\n              this.events.dispatch(\"pointerout\", {\n                type: \"pointerout\",\n                target: ev.target,\n                originalEvent: ev.originalEvent,\n                point: ev.point,\n                simulated: ev.simulated\n              });\n            }\n          }\n          if (this._isDown) {\n            this._handleUp(ev);\n          }\n          //this._isDown = false;\n        }), events.on(\"pointerover\", () => {\n          this._handleOver();\n        }), events.on(\"pointerout\", () => {\n          this._handleOut();\n        }), events.on(\"pointerdown\", e => {\n          this._handleDown(e);\n        })]);\n      } else {\n        this._display.interactive = false;\n        if (this._hoverDp) {\n          this._hoverDp.dispose();\n          this._hoverDp = undefined;\n        }\n      }\n    }\n    if (this.isDirty(\"forceInactive\")) {\n      this._display.inactive = this.get(\"forceInactive\", null);\n    }\n    if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\n      this.showTooltip();\n    }\n  }\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  dragStart(e) {\n    this._dragEvent = e;\n    this.events.stopParentDispatch();\n  }\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  dragStop(e) {\n    this._dragEvent = undefined;\n    this._dragPoint = undefined;\n    this.events.stopParentDispatch();\n    if (this._isDragging) {\n      this._isDragging = false;\n      const type = \"dragstop\";\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this,\n          originalEvent: e.originalEvent,\n          point: e.point,\n          simulated: e.simulated\n        });\n      }\n    }\n  }\n  _handleOver() {\n    if (!this.isHidden()) {\n      if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n        this.states.applyAnimate(\"hoverActive\");\n      } else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n        this.states.applyAnimate(\"hoverDisabled\");\n      } else {\n        this.states.applyAnimate(\"hover\");\n      }\n      if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n        this.states.applyAnimate(\"down\");\n      }\n    }\n  }\n  _handleOut() {\n    if (!this.isHidden()) {\n      if (this.get(\"active\") && this.states.lookup(\"active\")) {\n        this.states.applyAnimate(\"active\");\n      } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n        this.states.applyAnimate(\"disabled\");\n      } else {\n        if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n          this.states.applyAnimate(\"default\");\n        }\n      }\n      if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n        this.states.applyAnimate(\"down\");\n      }\n    }\n  }\n  _handleUp(e) {\n    if (!this.isHidden()) {\n      if (this.get(\"active\") && this.states.lookup(\"active\")) {\n        this.states.applyAnimate(\"active\");\n      } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n        this.states.applyAnimate(\"disabled\");\n      } else if (this.states.lookup(\"down\")) {\n        if (this.isHover()) {\n          this.states.applyAnimate(\"hover\");\n        } else {\n          this.states.applyAnimate(\"default\");\n        }\n      }\n      // @todo remove this once migrated to _downPoints\n      this._downPoint = undefined;\n      const pointerId = $utils.getPointerId(e.originalEvent);\n      delete this._downPoints[pointerId];\n      if ($object.keys(this._downPoints).length == 0) {\n        this._isDown = false;\n      }\n    }\n  }\n  _hasMoved(e) {\n    // @todo remove this once migrated to _downPoints\n    // if (this._downPoint) {\n    // \tconst x = Math.abs(this._downPoint.x - e.point.x);\n    // \tconst y = Math.abs(this._downPoint.y - e.point.y);\n    // \treturn (x > 5) || (y > 5);\n    // }\n    const pointerId = $utils.getPointerId(e.originalEvent);\n    const downPoint = this._downPoints[pointerId];\n    if (downPoint) {\n      const x = Math.abs(downPoint.x - e.point.x);\n      const y = Math.abs(downPoint.y - e.point.y);\n      return x > 5 || y > 5;\n    }\n    return false;\n  }\n  _hasDown() {\n    return $object.keys(this._downPoints).length > 0;\n  }\n  _handleDown(e) {\n    const parent = this.parent;\n    if (parent && !this.get(\"draggable\")) {\n      parent._handleDown(e);\n    }\n    if (this.get(\"interactive\") && !this.isHidden()) {\n      if (this.states.lookup(\"down\")) {\n        this.states.applyAnimate(\"down\");\n      }\n      this._downPoint = {\n        x: e.point.x,\n        y: e.point.y\n      };\n      // @todo remove this once migrated to _downPoints\n      this._isDown = true;\n      const pointerId = $utils.getPointerId(e.originalEvent);\n      this._downPoints[pointerId] = {\n        x: e.point.x,\n        y: e.point.y\n      };\n    }\n  }\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  dragMove(e) {\n    let dragEvent = this._dragEvent;\n    if (dragEvent) {\n      if (dragEvent.simulated && !e.simulated) {\n        return true;\n      }\n      let angle = 0;\n      let parent = this.parent;\n      let scale = 1;\n      while (parent != null) {\n        angle += parent.get(\"rotation\", 0);\n        parent = parent.parent;\n        if (parent) {\n          scale *= parent.get(\"scale\", 1);\n        }\n      }\n      let x = (e.point.x - dragEvent.point.x) / scale;\n      let y = (e.point.y - dragEvent.point.y) / scale;\n      const events = this.events;\n      if (dragEvent.simulated && !this._isDragging) {\n        this._isDragging = true;\n        this._dragEvent = e;\n        this._dragPoint = {\n          x: this.x(),\n          y: this.y()\n        };\n        const type = \"dragstart\";\n        if (events.isEnabled(type)) {\n          events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: e.originalEvent,\n            point: e.point,\n            simulated: e.simulated\n          });\n        }\n      }\n      if (this._isDragging) {\n        let dragPoint = this._dragPoint;\n        this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\n        this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\n        const type = \"dragged\";\n        if (events.isEnabled(type)) {\n          events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: e.originalEvent,\n            point: e.point,\n            simulated: e.simulated\n          });\n        }\n      } else {\n        if (Math.hypot(x, y) > 5) {\n          this._isDragging = true;\n          this._dragEvent = e;\n          this._dragPoint = {\n            x: this.x(),\n            y: this.y()\n          };\n          const type = \"dragstart\";\n          if (events.isEnabled(type)) {\n            events.dispatch(type, {\n              type: type,\n              target: this,\n              originalEvent: e.originalEvent,\n              point: e.point,\n              simulated: e.simulated\n            });\n          }\n        }\n      }\n    }\n  }\n  _updateSize() {}\n  _getBounds() {\n    this._localBounds = this._display.getLocalBounds();\n  }\n  /**\r\n   * Returns depth (how deep in the hierachy of the content tree) of this\r\n   * element.\r\n   *\r\n   * @return Depth\r\n   */\n  depth() {\n    let self = this.parent;\n    let depth = 0;\n    while (true) {\n      if (self) {\n        ++depth;\n        self = self.parent;\n      } else {\n        return depth;\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtySize() {\n    this._sizeDirty = true;\n    this.markDirty();\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyBounds() {\n    const display = this._display;\n    if (this.get(\"isMeasured\")) {\n      this._root._addDirtyBounds(this);\n      display.isMeasured = true;\n      display.invalidateBounds();\n      const parent = this.parent;\n      if (parent && this.get(\"position\") != \"absolute\") {\n        if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n          parent.markDirtyBounds();\n        }\n      }\n      if (this.get(\"focusable\")) {\n        this.markDirtyAccessibility();\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyAccessibility() {\n    //if (this._root.focused(this)) {\n    this._root._invalidateAccessibility(this);\n    //}\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyLayer() {\n    //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n    this._display.markDirtyLayer(true);\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirty() {\n    super.markDirty();\n    this.markDirtyLayer();\n  }\n  _updateBounds() {\n    const oldBounds = this._adjustedLocalBounds;\n    let newBounds;\n    // if display.visible == false, it still returns bounds\n    if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n      newBounds = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this._localBounds = newBounds;\n      this._adjustedLocalBounds = newBounds;\n    } else {\n      this._getBounds();\n      this._fixMinBounds(this._localBounds);\n      this.updatePivotPoint();\n      this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n      newBounds = this._adjustedLocalBounds;\n    }\n    if (!oldBounds || oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom) {\n      const eventType = \"boundschanged\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this\n        });\n      }\n      if (this.parent) {\n        this.parent.markDirty();\n        this.parent.markDirtyBounds();\n      }\n      // Update tooltip position together with the Sprite\n      if (this.getPrivate(\"showingTooltip\")) {\n        this.showTooltip();\n      }\n    }\n  }\n  _fixMinBounds(bounds) {\n    let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n    let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n    if ($type.isNumber(minWidth)) {\n      if (bounds.right - bounds.left < minWidth) {\n        bounds.right = bounds.left + minWidth;\n      }\n    }\n    if ($type.isNumber(minHeight)) {\n      if (bounds.bottom - bounds.top < minHeight) {\n        bounds.bottom = bounds.top + minHeight;\n      }\n    }\n    let privateWidth = this.getPrivate(\"width\");\n    let privateHeight = this.getPrivate(\"height\");\n    if ($type.isNumber(privateWidth)) {\n      if (privateWidth > 0) {\n        bounds.right = bounds.left + privateWidth;\n      } else {\n        bounds.left = bounds.right + privateWidth;\n      }\n    }\n    if ($type.isNumber(privateHeight)) {\n      if (privateHeight > 0) {\n        bounds.bottom = bounds.top + privateHeight;\n      } else {\n        bounds.top = bounds.bottom + privateHeight;\n      }\n    }\n  }\n  _removeParent(parent) {\n    if (parent) {\n      parent.children.removeValue(this);\n      $array.removeFirst(parent._percentageSizeChildren, this);\n      $array.removeFirst(parent._percentagePositionChildren, this);\n    }\n  }\n  _clearDirty() {\n    super._clearDirty();\n    this._sizeDirty = false;\n    this._statesHandled = false;\n  }\n  /**\r\n   * Simulate hover over element.\r\n   */\n  hover() {\n    if (!this.isDisposed()) {\n      this.showTooltip();\n      this._handleOver();\n    }\n  }\n  /**\r\n   * Simulate unhover over element.\r\n   */\n  unhover() {\n    if (!this.isDisposed()) {\n      this.hideTooltip();\n      this._handleOut();\n    }\n  }\n  /**\r\n   * Shows element's [[Tooltip]].\r\n   */\n  showTooltip(point) {\n    if (!this.isDisposed()) {\n      const tooltip = this.getTooltip();\n      const tooltipText = this.get(\"tooltipText\");\n      const tooltipHTML = this.get(\"tooltipHTML\");\n      if ((tooltipText || tooltipHTML) && tooltip) {\n        const tooltipPosition = this.get(\"tooltipPosition\");\n        const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n        if (tooltipPosition == \"fixed\" || !point) {\n          this._display._setMatrix();\n          point = this.toGlobal(tooltipTarget._getTooltipPoint());\n        }\n        if (tooltipPosition == \"pointer\") {\n          const lastTooltipCoords = this.getPrivate(\"lastTooltipCoords\");\n          if (lastTooltipCoords && lastTooltipCoords.x == point.x && lastTooltipCoords.y == point.y) {\n            return;\n          } else {\n            this.setPrivate(\"lastTooltipCoords\", point);\n          }\n        }\n        tooltip.set(\"pointTo\", point);\n        tooltip.set(\"tooltipTarget\", tooltipTarget);\n        if (!tooltip.get(\"x\")) {\n          tooltip.set(\"x\", point.x);\n        }\n        if (!tooltip.get(\"y\")) {\n          tooltip.set(\"y\", point.y);\n        }\n        if (tooltipText) {\n          tooltip.label.set(\"text\", tooltipText);\n        }\n        if (tooltipHTML) {\n          tooltip.label.set(\"html\", tooltipHTML);\n        }\n        const dataItem = this.dataItem;\n        if (dataItem) {\n          tooltip.label._setDataItem(dataItem);\n        }\n        if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n          this.hideTooltip();\n          return;\n        }\n        tooltip.label.text.markDirtyText();\n        const promise = tooltip.show();\n        this.setPrivateRaw(\"showingTooltip\", true);\n        return promise;\n      }\n    }\n  }\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   */\n  hideTooltip() {\n    const tooltip = this.getTooltip();\n    if (tooltip) {\n      this.removePrivate(\"lastTooltipCoords\");\n      if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\n        let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n        const promise = tooltip.hide(timeout);\n        this.setPrivateRaw(\"showingTooltip\", false);\n        return promise;\n      }\n    }\n  }\n  _getTooltipPoint() {\n    const bounds = this._localBounds;\n    if (bounds) {\n      let x = 0;\n      let y = 0;\n      if (!this.get(\"isMeasured\")) {\n        x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n        y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n      } else {\n        x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n        y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n      }\n      return {\n        x,\n        y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\r\n   * Returns [[Tooltip]] used for this element.\r\n   *\r\n   * @return Tooltip\r\n   */\n  getTooltip() {\n    let tooltip = this.get(\"tooltip\");\n    if (!tooltip) {\n      let parent = this.parent;\n      if (parent) {\n        return parent.getTooltip();\n      }\n    } else {\n      return tooltip;\n    }\n  }\n  _updatePosition() {\n    const parent = this.parent;\n    let dx = this.get(\"dx\", 0);\n    let dy = this.get(\"dy\", 0);\n    let x = this.get(\"x\");\n    let _x = this.getPrivate(\"x\");\n    let xx = 0;\n    let yy = 0;\n    const position = this.get(\"position\");\n    if (x instanceof Percent) {\n      if (parent) {\n        x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n      } else {\n        x = 0;\n      }\n    }\n    if ($type.isNumber(x)) {\n      xx = x + dx;\n    } else {\n      if (_x != null) {\n        xx = _x;\n      } else if (parent) {\n        if (position == \"relative\") {\n          xx = parent.get(\"paddingLeft\", 0) + dx;\n        }\n      }\n    }\n    let y = this.get(\"y\");\n    let _y = this.getPrivate(\"y\");\n    if (y instanceof Percent) {\n      if (parent) {\n        y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n      } else {\n        y = 0;\n      }\n    }\n    if ($type.isNumber(y)) {\n      yy = y + dy;\n    } else {\n      if (_y != null) {\n        yy = _y;\n      } else if (parent) {\n        if (position == \"relative\") {\n          yy = parent.get(\"paddingTop\", 0) + dy;\n        }\n      }\n    }\n    const display = this._display;\n    if (display.x != xx || display.y != yy) {\n      display.invalidateBounds();\n      display.x = xx;\n      display.y = yy;\n      const eventType = \"positionchanged\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this\n        });\n      }\n    }\n    // Update tooltip position together with the Sprite\n    if (this.getPrivate(\"showingTooltip\")) {\n      this.showTooltip();\n    }\n  }\n  /**\r\n   * Returns element's actual X position in pixels.\r\n   *\r\n   * @return X (px)\r\n   */\n  x() {\n    let x = this.get(\"x\");\n    let _x = this.getPrivate(\"x\");\n    const parent = this.parent;\n    if (parent) {\n      if (x instanceof Percent) {\n        return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n      } else {\n        if (!$type.isNumber(x)) {\n          if (_x != null) {\n            return _x;\n          } else {\n            return parent.get(\"paddingLeft\", this._display.x);\n          }\n        } else {\n          return x;\n        }\n      }\n    }\n    return this._display.x;\n  }\n  /**\r\n   * Returns element's actual Y position in pixels.\r\n   *\r\n   * @return Y (px)\r\n   */\n  y() {\n    let _y = this.getPrivate(\"y\");\n    if (_y != null) {\n      return _y;\n    }\n    let y = this.get(\"y\");\n    const parent = this.parent;\n    if (parent) {\n      if (y instanceof Percent) {\n        return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n      } else {\n        if (!$type.isNumber(y)) {\n          if (_y != null) {\n            return _y;\n          } else {\n            return parent.get(\"paddingTop\", this._display.y);\n          }\n        } else {\n          return y;\n        }\n      }\n    }\n    return this._display.y;\n  }\n  _dispose() {\n    super._dispose();\n    this._display.dispose();\n    this._removeTemplateField();\n    this._removeParent(this.parent);\n    this._root._removeFocusElement(this);\n    const tooltip = this.get(\"tooltip\");\n    if (tooltip) {\n      tooltip.dispose();\n    }\n    this.markDirty();\n  }\n  /**\r\n   * @ignore\r\n   */\n  adjustedLocalBounds() {\n    this._fixMinBounds(this._adjustedLocalBounds);\n    return this._adjustedLocalBounds;\n  }\n  /**\r\n   * Returns local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  localBounds() {\n    return this._localBounds;\n  }\n  /**\r\n   * Returns adjusted local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  bounds() {\n    const bounds = this._adjustedLocalBounds;\n    const x = this.x();\n    const y = this.y();\n    return {\n      left: bounds.left + x,\n      right: bounds.right + x,\n      top: bounds.top + y,\n      bottom: bounds.bottom + y\n    };\n  }\n  /**\r\n   * Returns global coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  globalBounds() {\n    const bounds = this.localBounds();\n    const p0 = this.toGlobal({\n      x: bounds.left,\n      y: bounds.top\n    });\n    const p1 = this.toGlobal({\n      x: bounds.right,\n      y: bounds.top\n    });\n    const p2 = this.toGlobal({\n      x: bounds.right,\n      y: bounds.bottom\n    });\n    const p3 = this.toGlobal({\n      x: bounds.left,\n      y: bounds.bottom\n    });\n    return {\n      left: Math.min(p0.x, p1.x, p2.x, p3.x),\n      top: Math.min(p0.y, p1.y, p2.y, p3.y),\n      right: Math.max(p0.x, p1.x, p2.x, p3.x),\n      bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n    };\n  }\n  _onShow(_duration) {}\n  _onHide(_duration) {}\n  /**\r\n   * Plays initial reveal animation regardless if element is currently hidden\r\n   * or visible.\r\n   *\r\n   * @param   duration  Duration of the animation in milliseconds\r\n   * @param   delay     Delay showing of the element by X milliseconds\r\n   * @return            Promise\r\n   */\n  appear(duration, delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.hide(0);\n      if (delay) {\n        return new Promise((success, _error) => {\n          this.setTimeout(() => {\n            success(this.show(duration));\n          }, delay);\n        });\n      } else {\n        return this.show(duration);\n      }\n    });\n  }\n  /**\r\n   * Shows currently hidden element and returns a `Promise` which completes\r\n   * when all showing animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n  show(duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._isShowing) {\n        this._isHidden = false;\n        this._isShowing = true;\n        this._isHiding = false;\n        if (this.states.lookup(\"default\").get(\"visible\")) {\n          this.set(\"visible\", true);\n        }\n        this._onShow(duration);\n        const animations = this.states.applyAnimate(\"default\", duration);\n        yield waitForAnimations(animations);\n        this._isShowing = false;\n      }\n    });\n  }\n  /**\r\n   * Hides the element and returns a `Promise` which completes when all hiding\r\n   * animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n  hide(duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._isHiding && !this._isHidden) {\n        this._isHiding = true;\n        this._isShowing = false;\n        let state = this.states.lookup(\"hidden\");\n        if (!state) {\n          state = this.states.create(\"hidden\", {\n            \"opacity\": 0,\n            \"visible\": false\n          });\n        }\n        this._isHidden = true;\n        this._onHide(duration);\n        const animations = this.states.applyAnimate(\"hidden\", duration);\n        yield waitForAnimations(animations);\n        this._isHiding = false;\n      }\n    });\n  }\n  /**\r\n   * Returns `true` if this element is currently hidden.\r\n   *\r\n   * @return Is hidden?\r\n   */\n  isHidden() {\n    return this._isHidden;\n  }\n  /**\r\n   * Returns `true` if this element is currently animating to a default state.\r\n   *\r\n   * @return Is showing?\r\n   */\n  isShowing() {\n    return this._isShowing;\n  }\n  /**\r\n   * Returns `true` if this element is currently animating to a hidden state.\r\n   *\r\n   * @return Is hiding?\r\n   */\n  isHiding() {\n    return this._isHiding;\n  }\n  /**\r\n   * Returns `true` if this element is currently hovered by a pointer.\r\n   *\r\n   * @return Is hovered?\r\n   */\n  isHover() {\n    return this._display.hovering();\n  }\n  /**\r\n   * Returns `true` if this element does currently have focus.\r\n   *\r\n   * @return Is focused?\r\n   */\n  isFocus() {\n    return this._root.focused(this);\n  }\n  /**\r\n   * Returns `true` if this element is currently being dragged.\r\n   *\r\n   * @return Is dragged?\r\n   */\n  isDragging() {\n    return this._isDragging;\n  }\n  /**\r\n   * Returns `false` if if either public or private setting `visible` is set\r\n   * to `false`, or `forceHidden` is set to `true`.\r\n   *\r\n   * @return Visible?\r\n   */\n  isVisible() {\n    if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\n      return true;\n    }\n    return false;\n  }\n  /**\r\n   * Same as `isVisible()`, except it checks all ascendants, too.\r\n   *\r\n   * @since 5.2.7\r\n   * @return Visible?\r\n   */\n  isVisibleDeep() {\n    return this._parent ? this._parent.isVisibleDeep() && this.isVisible() : this.isVisible();\n  }\n  /**\r\n   * Returns an actual opacity of the element, taking into account all parents.\r\n   *\r\n   * @return Opacity\r\n   * @since 5.2.11\r\n   */\n  compositeOpacity() {\n    const opacity = this.get(\"opacity\", 1);\n    return this._parent ? this._parent.compositeOpacity() * opacity : opacity;\n  }\n  /**\r\n   * Returns an actual scale of the element, taking into account all parents.\r\n   *\r\n   * @return Opacity\r\n   * @since 5.9.2\r\n   */\n  compositeScale() {\n    const scale = this.get(\"scale\", 1);\n    return this._parent ? this._parent.compositeScale() * scale : scale;\n  }\n  /**\r\n   * Returns an actual roation of the element, taking into account all parents.\r\n   *\r\n   * @return Opacity\r\n   * @since 5.9.2\r\n   */\n  compositeRotation() {\n    const rotation = this.get(\"rotation\", 0);\n    return this._parent ? this._parent.compositeRotation() + rotation : rotation;\n  }\n  /**\r\n   * Returns width of this element in pixels.\r\n   *\r\n   * @return Width (px)\r\n   */\n  width() {\n    let width = this.get(\"width\");\n    let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n    let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n    let privateWidth = this.getPrivate(\"width\");\n    let w = 0;\n    if ($type.isNumber(privateWidth)) {\n      w = privateWidth;\n    } else {\n      if (width == null) {\n        if (this._adjustedLocalBounds) {\n          w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n        }\n      } else {\n        if (width instanceof Percent) {\n          const parent = this.parent;\n          if (parent) {\n            w = parent.innerWidth() * width.value;\n          } else {\n            w = this._root.width() * width.value;\n          }\n        } else if ($type.isNumber(width)) {\n          w = width;\n        }\n      }\n    }\n    if ($type.isNumber(minWidth)) {\n      w = Math.max(minWidth, w);\n    }\n    if ($type.isNumber(maxWidth)) {\n      w = Math.min(maxWidth, w);\n    }\n    return w;\n  }\n  /**\r\n   * Returns maximum allowed width of this element in pixels.\r\n   *\r\n   * @return Maximum width (px)\r\n   */\n  maxWidth() {\n    let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n    if ($type.isNumber(maxWidth)) {\n      return maxWidth;\n    } else {\n      let width = this.get(\"width\");\n      if ($type.isNumber(width)) {\n        return width;\n      }\n    }\n    const parent = this.parent;\n    if (parent) {\n      return parent.innerWidth();\n    }\n    return this._root.width();\n  }\n  /**\r\n   * Returns maximum allowed height of this element in pixels.\r\n   *\r\n   * @return Maximum height (px)\r\n   */\n  maxHeight() {\n    let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n    if ($type.isNumber(maxHeight)) {\n      return maxHeight;\n    } else {\n      let height = this.get(\"height\");\n      if ($type.isNumber(height)) {\n        return height;\n      }\n    }\n    const parent = this.parent;\n    if (parent) {\n      return parent.innerHeight();\n    }\n    return this._root.height();\n  }\n  /**\r\n   * Returns height of this element in pixels.\r\n   *\r\n   * @return Height (px)\r\n   */\n  height() {\n    let height = this.get(\"height\");\n    let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n    let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n    let privateHeight = this.getPrivate(\"height\");\n    let h = 0;\n    if ($type.isNumber(privateHeight)) {\n      h = privateHeight;\n    } else {\n      if (height == null) {\n        if (this._adjustedLocalBounds) {\n          h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n        }\n      } else {\n        if (height instanceof Percent) {\n          const parent = this.parent;\n          if (parent) {\n            h = parent.innerHeight() * height.value;\n          } else {\n            h = this._root.height() * height.value;\n          }\n        } else if ($type.isNumber(height)) {\n          h = height;\n        }\n      }\n    }\n    if ($type.isNumber(minHeight)) {\n      h = Math.max(minHeight, h);\n    }\n    if ($type.isNumber(maxHeight)) {\n      h = Math.min(maxHeight, h);\n    }\n    return h;\n  }\n  _findStaticTemplate(f) {\n    // templateField overrides template\n    if (this._templateField && f(this._templateField)) {\n      return this._templateField;\n    }\n    return super._findStaticTemplate(f);\n  }\n  _walkParents(f) {\n    if (this._parent) {\n      this._walkParent(f);\n    }\n  }\n  _walkParent(f) {\n    if (this._parent) {\n      this._parent._walkParent(f);\n    }\n    f(this);\n  }\n  /**\r\n   * Parent [[Container]] of this element.\r\n   *\r\n   * @return Parent container\r\n   */\n  get parent() {\n    return this._parent;\n  }\n  _setParent(parent, updateChildren = false) {\n    const prevParent = this._parent;\n    if (parent !== prevParent) {\n      this.markDirtyBounds();\n      parent.markDirty();\n      this._parent = parent;\n      if (updateChildren) {\n        this._removeParent(prevParent);\n        if (parent) {\n          this._addPercentageSizeChildren();\n          this._addPercentagePositionChildren();\n        }\n      }\n      this.markDirtyPosition();\n      this._applyThemes();\n    }\n  }\n  /**\r\n   * Returns an instance of [[NumberFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return NumberFormatter instace\r\n   */\n  getNumberFormatter() {\n    return this.get(\"numberFormatter\", this._root.numberFormatter);\n  }\n  /**\r\n   * Returns an instance of [[DateFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DateFormatter instace\r\n   */\n  getDateFormatter() {\n    return this.get(\"dateFormatter\", this._root.dateFormatter);\n  }\n  /**\r\n   * Returns an instance of [[DurationFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DurationFormatter instace\r\n   */\n  getDurationFormatter() {\n    return this.get(\"durationFormatter\", this._root.durationFormatter);\n  }\n  /**\r\n   * Converts X/Y coordinate within this element to a global coordinate.\r\n   *\r\n   * @param  point  Local coordinate\r\n   * @return        Global coordinate\r\n   */\n  toGlobal(point) {\n    return this._display.toGlobal(point);\n  }\n  /**\r\n   * Converts global X/Y coordinate to a coordinate within this element.\r\n   *\r\n   * @param  point  Global coordinate\r\n   * @return        Local coordinate\r\n   */\n  toLocal(point) {\n    return this._display.toLocal(point);\n  }\n  _getDownPoint() {\n    const id = this._getDownPointId();\n    if (id) {\n      return this._downPoints[id];\n    }\n  }\n  _getDownPointId() {\n    if (this._downPoints) {\n      return $object.keysOrdered(this._downPoints, (a, b) => {\n        if (a > b) {\n          return 1;\n        }\n        if (a < b) {\n          return -1;\n        }\n        return 0;\n      })[0];\n    }\n  }\n  /**\r\n   * Moves sprite to the end of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n  toFront() {\n    const parent = this.parent;\n    if (parent) {\n      parent.children.moveValue(this, parent.children.length - 1);\n    }\n  }\n  /**\r\n   * Moves sprite to the beginning of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n  toBack() {\n    const parent = this.parent;\n    if (parent) {\n      parent.children.moveValue(this, 0);\n    }\n  }\n}\nObject.defineProperty(Sprite, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Sprite\"\n});\nObject.defineProperty(Sprite, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Sprite.className])\n});\n", "import { Entity } from \"../../util/Entity\";\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\nexport class Pattern extends Entity {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeGraphics()\n    });\n    Object.defineProperty(this, \"_backgroundDisplay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeGraphics()\n    });\n    Object.defineProperty(this, \"_clear\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_pattern\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    // Applying themes because pattern will not have parent\n    super._afterNewApplyThemes();\n  }\n  get pattern() {\n    return this._pattern;\n  }\n  _draw() {}\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\n      this._clear = true;\n    }\n    this._checkDirtyFill();\n  }\n  _checkDirtyFill() {\n    if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      const repetition = this.get(\"repetition\", \"\");\n      const width = this.get(\"width\", 100);\n      const height = this.get(\"height\", 100);\n      const fill = this.get(\"fill\");\n      const fillOpacity = this.get(\"fillOpacity\", 1);\n      const backgroundDisplay = this._backgroundDisplay;\n      const display = this._display;\n      display.clear();\n      backgroundDisplay.clear();\n      if (fill && fillOpacity > 0) {\n        backgroundDisplay.beginFill(fill, fillOpacity);\n        backgroundDisplay.drawRect(0, 0, width, height);\n        backgroundDisplay.endFill();\n      }\n      display.angle = this.get(\"rotation\", 0);\n      //display.pivot = { x: width / 2, y: height / 2 };\n      this._draw();\n      this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\n    }\n    this._clear = false;\n  }\n}\nObject.defineProperty(Pattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Pattern\"\n});\nObject.defineProperty(Pattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Pattern.className])\n});\n", "import { Pattern } from \"./Pattern\";\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\nexport class PicturePattern extends Pattern {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    this._clear = true;\n    if (this.isDirty(\"src\")) {\n      this._load();\n    }\n    const canvas = this.get(\"canvas\");\n    if (canvas) {\n      this.set(\"width\", canvas.width);\n      this.set(\"height\", canvas.height);\n    }\n  }\n  _draw() {\n    super._draw();\n    const colorOpacity = this.get(\"colorOpacity\");\n    if (colorOpacity !== undefined) {\n      this._display.alpha = Math.max(0, colorOpacity);\n    }\n    const image = this._image;\n    if (image) {\n      const patternWidth = this.get(\"width\", 100);\n      const patternHeight = this.get(\"height\", 100);\n      // Fit\n      const fit = this.get(\"fit\", \"image\");\n      let width = 0;\n      let height = 0;\n      if (fit == \"pattern\") {\n        width = patternWidth;\n        height = patternHeight;\n        this.markDirty();\n      } else {\n        width = image.width;\n        height = image.height;\n        if (fit == \"image\") {\n          this.set(\"width\", width);\n          this.set(\"height\", height);\n        }\n      }\n      // Position\n      const centered = this.get(\"centered\", true);\n      let x = 0;\n      let y = 0;\n      if (centered) {\n        x = patternWidth / 2 - width / 2;\n        y = patternHeight / 2 - height / 2;\n      }\n      this._display.image(image, width, height, x, y);\n    }\n    const canvas = this.get(\"canvas\");\n    if (canvas) {\n      this._display.image(canvas, canvas.width, canvas.height, 0, 0);\n    }\n  }\n  _load() {\n    const src = this.get(\"src\");\n    if (src) {\n      const image = new Image();\n      //image.crossOrigin = \"Anonymous\";\n      image.src = src;\n      image.decode().then(() => {\n        this._image = image;\n        this._draw();\n        if (this.events.isEnabled(\"loaded\")) {\n          this.events.dispatch(\"loaded\", {\n            type: \"loaded\",\n            target: this\n          });\n        }\n      }).catch(_error => {\n        // TODO: maybe raise error?\n      });\n    }\n  }\n}\nObject.defineProperty(PicturePattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"PicturePattern\"\n});\nObject.defineProperty(PicturePattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Pattern.classNames.concat([PicturePattern.className])\n});\n", "/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\nexport var BlendMode;\n(function (BlendMode) {\n  BlendMode[\"ADD\"] = \"lighter\";\n  BlendMode[\"COLOR\"] = \"color\";\n  BlendMode[\"COLOR_BURN\"] = \"color-burn\";\n  BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\n  BlendMode[\"DARKEN\"] = \"darken\";\n  BlendMode[\"DIFFERENCE\"] = \"difference\";\n  BlendMode[\"DST_OVER\"] = \"destination-over\";\n  BlendMode[\"EXCLUSION\"] = \"exclusion\";\n  BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\n  BlendMode[\"HUE\"] = \"hue\";\n  BlendMode[\"LIGHTEN\"] = \"lighten\";\n  BlendMode[\"LUMINOSITY\"] = \"luminosity\";\n  BlendMode[\"MULTIPLY\"] = \"multiply\";\n  BlendMode[\"NORMAL\"] = \"source-over\";\n  BlendMode[\"OVERLAY\"] = \"overlay\";\n  BlendMode[\"SATURATION\"] = \"saturation\";\n  BlendMode[\"SCREEN\"] = \"screen\";\n  BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\n  BlendMode[\"SRC_ATOP\"] = \"source-atop\";\n  BlendMode[\"XOR\"] = \"xor\";\n})(BlendMode || (BlendMode = {}));\n", "import { PicturePattern } from \"../render/patterns/PicturePattern\";\nimport { Sprite } from \"./Sprite\";\nimport { BlendMode } from \"./backend/Renderer\";\nimport * as $type from \"../util/Type\";\nimport * as $array from \"../util/Array\";\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Graphics extends Sprite {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeGraphics()\n    });\n    Object.defineProperty(this, \"_clear\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\n      this._clear = true;\n    }\n    this._display.crisp = this.get(\"crisp\", false);\n    if (this.isDirty(\"fillGradient\")) {\n      const gradient = this.get(\"fillGradient\");\n      if (gradient) {\n        this._display.isMeasured = true;\n        const gradientTarget = gradient.get(\"target\");\n        if (gradientTarget) {\n          this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\n            this._markDirtyKey(\"fill\");\n          }));\n          this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\n            this._markDirtyKey(\"fill\");\n          }));\n        }\n      }\n    }\n    if (this.isDirty(\"strokeGradient\")) {\n      const gradient = this.get(\"strokeGradient\");\n      if (gradient) {\n        this._display.isMeasured = true;\n        const gradientTarget = gradient.get(\"target\");\n        if (gradientTarget) {\n          this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\n            this._markDirtyKey(\"stroke\");\n          }));\n          this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\n            this._markDirtyKey(\"stroke\");\n          }));\n        }\n      }\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      this.markDirtyBounds();\n      this.markDirtyLayer();\n      this._display.clear();\n      let strokeDasharray = this.get(\"strokeDasharray\");\n      if ($type.isNumber(strokeDasharray)) {\n        if (strokeDasharray < 0.5) {\n          strokeDasharray = [0];\n        } else {\n          strokeDasharray = [strokeDasharray];\n        }\n      }\n      this._display.setLineDash(strokeDasharray);\n      const strokeDashoffset = this.get(\"strokeDashoffset\");\n      if (strokeDashoffset) {\n        this._display.setLineDashOffset(strokeDashoffset);\n      }\n      const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\n      this._display.blendMode = blendMode;\n      const draw = this.get(\"draw\");\n      if (draw && typeof draw === \"function\") {\n        draw(this._display, this);\n      }\n      const svgPath = this.get(\"svgPath\");\n      if (svgPath != null) {\n        this._display.svgPath(svgPath);\n      }\n    }\n  }\n  _afterChanged() {\n    super._afterChanged();\n    if (this._clear) {\n      const fill = this.get(\"fill\");\n      const fillGradient = this.get(\"fillGradient\");\n      const fillPattern = this.get(\"fillPattern\");\n      const fillOpacity = this.get(\"fillOpacity\");\n      const stroke = this.get(\"stroke\");\n      const strokeGradient = this.get(\"strokeGradient\");\n      const strokePattern = this.get(\"strokePattern\");\n      const shadowColor = this.get(\"shadowColor\");\n      const shadowBlur = this.get(\"shadowBlur\");\n      const shadowOffsetX = this.get(\"shadowOffsetX\");\n      const shadowOffsetY = this.get(\"shadowOffsetY\");\n      const shadowOpacity = this.get(\"shadowOpacity\");\n      if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\n        this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\n      }\n      if (fill && !fillGradient) {\n        this._display.beginFill(fill, fillOpacity);\n        this._display.endFill();\n      }\n      if (fillGradient) {\n        if (fill) {\n          const stops = fillGradient.get(\"stops\", []);\n          if (stops.length) {\n            $array.each(stops, stop => {\n              if ((!stop.color || stop.colorInherited) && fill) {\n                stop.color = fill;\n                stop.colorInherited = true;\n              }\n              if (stop.opacity == null || stop.opacityInherited) {\n                stop.opacity = fillOpacity;\n                stop.opacityInherited = true;\n              }\n            });\n          }\n        }\n        const gradient = fillGradient.getFill(this);\n        if (gradient) {\n          this._display.beginFill(gradient, fillOpacity);\n          this._display.endFill();\n        }\n      }\n      if (fillPattern) {\n        const pattern = fillPattern.pattern;\n        if (pattern) {\n          this._display.beginFill(pattern, fillOpacity);\n          this._display.endFill();\n          if (fillPattern instanceof PicturePattern) {\n            fillPattern.events.once(\"loaded\", () => {\n              this._clear = true;\n              this.markDirty();\n            });\n          }\n        }\n      }\n      if (stroke || strokeGradient || strokePattern) {\n        const strokeOpacity = this.get(\"strokeOpacity\");\n        let strokeWidth = this.get(\"strokeWidth\", 1);\n        if (this.get(\"nonScalingStroke\")) {\n          strokeWidth = strokeWidth / this.get(\"scale\", 1);\n        }\n        if (this.get(\"crisp\")) {\n          strokeWidth /= this._root._renderer.resolution;\n        }\n        const lineJoin = this.get(\"lineJoin\");\n        const lineCap = this.get(\"lineCap\");\n        if (stroke && !strokeGradient) {\n          this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\n          this._display.endStroke();\n        }\n        if (strokeGradient) {\n          const stops = strokeGradient.get(\"stops\", []);\n          if (stops.length) {\n            $array.each(stops, stop => {\n              if ((!stop.color || stop.colorInherited) && stroke) {\n                stop.color = stroke;\n                stop.colorInherited = true;\n              }\n              if (stop.opacity == null || stop.opacityInherited) {\n                stop.opacity = strokeOpacity;\n                stop.opacityInherited = true;\n              }\n            });\n          }\n          const gradient = strokeGradient.getFill(this);\n          if (gradient) {\n            this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\n            this._display.endStroke();\n          }\n        }\n        if (strokePattern) {\n          /*\r\n          let changed = false;\r\n          \r\n          if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n              strokePattern.set(\"color\", stroke);\r\n              strokePattern.set(\"colorInherited\", true);\r\n              changed = true;\r\n          }\r\n          if (changed) {\r\n              // @todo: is this OK?\r\n              strokePattern._changed();\r\n          }\r\n          */\n          let pattern = strokePattern.pattern;\n          if (pattern) {\n            this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\n            this._display.endStroke();\n            if (strokePattern instanceof PicturePattern) {\n              strokePattern.events.once(\"loaded\", () => {\n                this._clear = true;\n                this.markDirty();\n              });\n            }\n          }\n        }\n      }\n      if (this.getPrivate(\"showingTooltip\")) {\n        this.showTooltip();\n      }\n    }\n    this._clear = false;\n  }\n}\nObject.defineProperty(Graphics, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Graphics\"\n});\nObject.defineProperty(Graphics, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Sprite.classNames.concat([Graphics.className])\n});\n", "import { Graphics } from \"./Graphics\";\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Rectangle extends Graphics {\n  _afterNew() {\n    super._afterNew();\n    this._display.isMeasured = true;\n    this.setPrivateRaw(\"trustBounds\", true);\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear && !this.get(\"draw\")) {\n      this._draw();\n    }\n  }\n  _draw() {\n    let w = this.width();\n    let h = this.height();\n    let x = 0;\n    let y = 0;\n    let wSign = w / Math.abs(w);\n    let hSign = h / Math.abs(h);\n    if (this.get(\"containStroke\", false)) {\n      const strokeWidth = this.get(\"strokeWidth\", 0);\n      w -= strokeWidth * wSign;\n      h -= strokeWidth * hSign;\n      x += strokeWidth / 2 * wSign;\n      y += strokeWidth / 2 * hSign;\n    }\n    this._display.drawRect(x, y, w, h);\n  }\n  _updateSize() {\n    this.markDirty();\n    this._clear = true;\n  }\n}\nObject.defineProperty(Rectangle, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Rectangle\"\n});\nObject.defineProperty(Rectangle, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Rectangle.className])\n});\n", "import { Entity } from \"../util/Entity\";\nexport function eachChildren(container, f) {\n  if (container.get(\"reverseChildren\", false)) {\n    container.children.eachReverse(f);\n  } else {\n    container.children.each(f);\n  }\n}\n/**\r\n * Base class for [[Container]] layouts.\r\n */\nexport class Layout extends Entity {}\nObject.defineProperty(Layout, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Layout\"\n});\nObject.defineProperty(Layout, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Layout.className])\n});\n", "import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\nexport class HorizontalLayout extends Layout {\n  /**\r\n   * @ignore\r\n   */\n  updateContainer(container) {\n    let paddingLeft = container.get(\"paddingLeft\", 0);\n    let availableWidth = container.innerWidth();\n    let totalPercent = 0;\n    eachChildren(container, child => {\n      if (child.isVisible()) {\n        if (child.get(\"position\") == \"relative\") {\n          let childWidth = child.get(\"width\");\n          if (childWidth instanceof Percent) {\n            totalPercent += childWidth.value;\n            let w = availableWidth * childWidth.value;\n            let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n            if (minWidth > w) {\n              availableWidth -= minWidth;\n              totalPercent -= childWidth.value;\n            }\n            let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n            if (w > maxWidth) {\n              availableWidth -= maxWidth;\n              totalPercent -= childWidth.value;\n            }\n          } else {\n            if (!$type.isNumber(childWidth)) {\n              childWidth = child.width();\n            }\n            availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\n          }\n        }\n      }\n    });\n    if (availableWidth <= 0 || availableWidth == Infinity) {\n      availableWidth = .1;\n    }\n    //if (availableWidth > 0) {\n    eachChildren(container, child => {\n      if (child.isVisible()) {\n        if (child.get(\"position\") == \"relative\") {\n          let childWidth = child.get(\"width\");\n          if (childWidth instanceof Percent) {\n            let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\n            let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n            let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n            privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\n            child.setPrivate(\"width\", privateWidth);\n          } else {\n            if (child._prevSettings.width instanceof Percent) {\n              child.setPrivate(\"width\", undefined);\n            }\n          }\n        }\n      }\n    });\n    //}\n    let prevX = paddingLeft;\n    eachChildren(container, child => {\n      if (child.get(\"position\") == \"relative\") {\n        if (child.isVisible()) {\n          let bounds = child.adjustedLocalBounds();\n          let marginLeft = child.get(\"marginLeft\", 0);\n          let marginRight = child.get(\"marginRight\", 0);\n          let maxWidth = child.get(\"maxWidth\");\n          let left = bounds.left;\n          let right = bounds.right;\n          if (maxWidth) {\n            if (right - left > maxWidth) {\n              right = left + maxWidth;\n            }\n          }\n          let x = prevX + marginLeft - left;\n          child.setPrivate(\"x\", x);\n          prevX = x + right + marginRight;\n        } else {\n          child.setPrivate(\"x\", undefined);\n        }\n      }\n    });\n  }\n}\nObject.defineProperty(HorizontalLayout, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"HorizontalLayout\"\n});\nObject.defineProperty(HorizontalLayout, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Layout.classNames.concat([HorizontalLayout.className])\n});\n", "import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\nexport class VerticalLayout extends Layout {\n  /**\r\n   * @ignore\r\n   */\n  updateContainer(container) {\n    let paddingTop = container.get(\"paddingTop\", 0);\n    let availableHeight = container.innerHeight();\n    let totalPercent = 0;\n    eachChildren(container, child => {\n      if (child.isVisible()) {\n        if (child.get(\"position\") == \"relative\") {\n          let childHeight = child.get(\"height\");\n          if (childHeight instanceof Percent) {\n            totalPercent += childHeight.value;\n            let h = availableHeight * childHeight.value;\n            let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n            if (minHeight > h) {\n              availableHeight -= minHeight;\n              totalPercent -= childHeight.value;\n            }\n            let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n            if (h > maxHeight) {\n              availableHeight -= maxHeight;\n              totalPercent -= childHeight.value;\n            }\n          } else {\n            if (!$type.isNumber(childHeight)) {\n              childHeight = child.height();\n            }\n            availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n          }\n        }\n      }\n    });\n    if (availableHeight <= 0 || availableHeight == Infinity) {\n      availableHeight = .1;\n    }\n    //if (availableHeight > 0) {\n    eachChildren(container, child => {\n      if (child.isVisible()) {\n        if (child.get(\"position\") == \"relative\") {\n          let childHeight = child.get(\"height\");\n          if (childHeight instanceof Percent) {\n            let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n            let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n            let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n            privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\n            child.setPrivate(\"height\", privateHeight);\n          } else {\n            if (child._prevSettings.height instanceof Percent) {\n              child.setPrivate(\"height\", undefined);\n            }\n          }\n        }\n      }\n    });\n    //}\n    let prevY = paddingTop;\n    eachChildren(container, child => {\n      if (child.get(\"position\") == \"relative\") {\n        if (child.isVisible()) {\n          let bounds = child.adjustedLocalBounds();\n          let marginTop = child.get(\"marginTop\", 0);\n          let top = bounds.top;\n          let bottom = bounds.bottom;\n          let maxHeight = child.get(\"maxHeight\");\n          if (maxHeight) {\n            if (bottom - top > maxHeight) {\n              bottom = top + maxHeight;\n            }\n          }\n          let marginBottom = child.get(\"marginBottom\", 0);\n          let y = prevY + marginTop - top;\n          child.setPrivate(\"y\", y);\n          prevY = y + bottom + marginBottom;\n        } else {\n          child.setPrivate(\"y\", undefined);\n        }\n      }\n    });\n  }\n}\nObject.defineProperty(VerticalLayout, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"VerticalLayout\"\n});\nObject.defineProperty(VerticalLayout, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Layout.classNames.concat([VerticalLayout.className])\n});\n", "import { Layout, eachChildren } from \"./Layout\";\nimport * as $array from \"../util/Array\";\nimport * as $math from \"../util/Math\";\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\nexport class GridLayout extends Layout {\n  _afterNew() {\n    this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\n    super._afterNew();\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateContainer(container) {\n    let paddingLeft = container.get(\"paddingLeft\", 0);\n    let paddingRight = container.get(\"paddingRight\", 0);\n    let paddingTop = container.get(\"paddingTop\", 0);\n    let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\n    let minCellWidth = availableWidth;\n    let maxCellWidth = 1;\n    eachChildren(container, child => {\n      if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\n        if (child.get(\"position\") != \"absolute\") {\n          let childWidth = child.width();\n          if (childWidth < minCellWidth) {\n            minCellWidth = childWidth;\n          }\n          if (childWidth > maxCellWidth) {\n            maxCellWidth = childWidth;\n          }\n        }\n      }\n    });\n    minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\n    maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\n    let columnCount = 1;\n    if (this.get(\"fixedWidthGrid\")) {\n      columnCount = availableWidth / maxCellWidth;\n    } else {\n      columnCount = availableWidth / minCellWidth;\n    }\n    columnCount = Math.max(1, Math.floor(columnCount));\n    columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\n    let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n    let prevY = paddingTop;\n    let column = 0;\n    let maxColumnHeight = 0;\n    columnCount = columnWidths.length;\n    let prevX = paddingLeft;\n    eachChildren(container, child => {\n      if (child.get(\"position\") == \"relative\" && child.isVisible()) {\n        const marginTop = child.get(\"marginTop\", 0);\n        const marginBottom = child.get(\"marginBottom\", 0);\n        let bounds = child.adjustedLocalBounds();\n        let marginLeft = child.get(\"marginLeft\", 0);\n        let marginRight = child.get(\"marginRight\", 0);\n        let x = prevX + marginLeft - bounds.left;\n        let y = prevY + marginTop - bounds.top;\n        child.setPrivate(\"x\", x);\n        child.setPrivate(\"y\", y);\n        prevX += columnWidths[column] + marginRight;\n        maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\n        column++;\n        if (column >= columnCount) {\n          column = 0;\n          prevX = paddingLeft;\n          prevY += maxColumnHeight;\n        }\n      }\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\n    let totalWidth = 0;\n    let columnWidths = [];\n    let column = 0;\n    eachChildren(container, child => {\n      let bounds = child.adjustedLocalBounds();\n      if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\n        if (this.get(\"fixedWidthGrid\")) {\n          columnWidths[column] = maxCellWidth;\n        } else {\n          columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\n        }\n        if (column < container.children.length - 1) {\n          column++;\n          if (column == columnCount) {\n            column = 0;\n          }\n        }\n      }\n    });\n    $array.each(columnWidths, w => {\n      totalWidth += w;\n    });\n    if (totalWidth > availableWidth) {\n      if (columnCount > 2) {\n        columnCount -= 1;\n        return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n      } else {\n        return [availableWidth];\n      }\n    }\n    return columnWidths;\n  }\n}\nObject.defineProperty(GridLayout, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"GridLayout\"\n});\nObject.defineProperty(GridLayout, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Layout.classNames.concat([GridLayout.className])\n});\n", "import { Color } from \"./Color\";\nimport * as $type from \"./Type\";\nexport class TextFormatter {\n  /**\r\n   * Replaces brackets with temporary placeholders.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text  Input text\r\n   * @return Escaped text\r\n   */\n  static escape(text) {\n    return text.replace(/\\[\\[/g, this.prefix + \"1\").replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").replace(/\\]\\]/g, this.prefix + \"2\").replace(/\\{\\{/g, this.prefix + \"3\").replace(/\\}\\}/g, this.prefix + \"4\").replace(/\\'\\'/g, this.prefix + \"5\");\n  }\n  /**\r\n   * Replaces placeholders back to brackets.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text  Escaped text\r\n   * @return Unescaped text\r\n   */\n  static unescape(text) {\n    return text.replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\n  }\n  /**\r\n   * Cleans up the text text for leftover double square brackets.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text  Input text\r\n   * @return Cleaned up text\r\n   */\n  static cleanUp(text) {\n    return text.replace(/\\[\\[/g, \"[\").replace(/\\]\\]/g, \"]\").replace(/\\{\\{/g, \"{\").replace(/\\}\\}/g, \"}\").replace(/\\'\\'/g, \"'\");\n  }\n  /**\r\n   * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n   *\r\n   * If the second parameter `quotedBlocks` is set to `true` this method will\r\n   * also single out text blocks enclosed within single quotes that no\r\n   * formatting should be applied to, and they should be displayed as is.\r\n   *\r\n   * Default for the above is `false`, so that you can use single quote in text\r\n   * without escaping it.\r\n   *\r\n   * If enabled, single quotes can be escaped by doubling it - adding two\r\n   * single quotes, which will be replaced by a one single quote in the final\r\n   * output.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text          Text to chunk\r\n   * @param quotedBlocks  Use quoted blocks\r\n   * @param noFormatting  Formatting blocks will be treated as regular text\r\n   * @return Array of string chunks\r\n   */\n  static chunk(text, quotedBlocks = false, noFormatting = false) {\n    // Init result\n    let res = [];\n    // Replace double (escaped) square spaces and quotes with temporary codes\n    text = this.escape(text);\n    // Deal with style blocks\n    let chunks = quotedBlocks ? text.split(\"'\") : [text];\n    for (let i = 0; i < chunks.length; i++) {\n      let chunk = chunks[i];\n      // Empty?\n      if (chunk === \"\") {\n        continue;\n      }\n      if (i % 2 === 0) {\n        // Text outside quotes\n        // Parse for style blocks which are \"text\" chunks, the rest chunks are\n        // \"value\"\n        chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\n        chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\n        let chunks2 = chunk.split(/[\\[\\]]+/);\n        for (let i2 = 0; i2 < chunks2.length; i2++) {\n          let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n          // Placeholder?\n          if (chunk2 === $type.PLACEHOLDER) {\n            continue;\n          }\n          // Empty?\n          if (chunk2 === \"\") {\n            continue;\n          }\n          // Block or value\n          if (i2 % 2 === 0) {\n            res.push({\n              \"type\": \"value\",\n              \"text\": chunk2\n            });\n          } else {\n            res.push({\n              \"type\": noFormatting ? \"value\" : \"format\",\n              \"text\": \"[\" + chunk2 + \"]\"\n            });\n          }\n        }\n      } else {\n        // A text within doublequotes\n        // All chunks are \"text\"\n        let chunks2 = chunk.split(/[\\[\\]]+/);\n        for (let i2 = 0; i2 < chunks2.length; i2++) {\n          let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n          // Empty?\n          if (chunk2 === \"\") {\n            continue;\n          }\n          // Block or text\n          if (i2 % 2 === 0) {\n            res.push({\n              \"type\": \"text\",\n              \"text\": chunk2\n            });\n          } else if (this.isImage(chunk2)) {\n            res.push({\n              \"type\": \"image\",\n              \"text\": \"[\" + chunk2 + \"]\"\n            });\n          } else {\n            res.push({\n              \"type\": \"format\",\n              \"text\": \"[\" + chunk2 + \"]\"\n            });\n          }\n        }\n      }\n    }\n    return res;\n  }\n  /**\r\n   * Checks if supplied format contains image information and should be\r\n   * formatted as such.\r\n   * I.e.: `[img: myImage.png]`\r\n   *\r\n   * @ignore\r\n   * @param  text  Format\r\n   * @return true if it is an image\r\n   */\n  static isImage(text) {\n    return text.match(/img[ ]?:/) ? true : false;\n  }\n  static getTextStyle(style) {\n    // let textStyle: string[] = [];\n    // let textFill: string | undefined;\n    let format = {};\n    if (style == \"\" || style == \"[ ]\") {\n      return {};\n    }\n    // Pre-process quoted text\n    const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\n    if (q) {\n      for (let i = 0; i < q.length; i++) {\n        style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\n      }\n    }\n    // Get style parts\n    let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\n    // Empty?\n    if (!b) {\n      return {};\n    }\n    // Check each part\n    for (let i = 0; i < b.length; i++) {\n      if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\n        format.fontWeight = b[i];\n      } else if (b[i].match(/^(underline|line-through)$/i)) {\n        format.textDecoration = b[i];\n      } else if (b[i] == \"/\") {\n        // Just closing tag\n        // Do nothing\n      } else if (!b[i].match(/:/)) {\n        // Color\n        format.fill = Color.fromString(b[i]);\n      } else {\n        const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\n        format[p[0]] = p[1];\n        //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\n        //b[i] = b[i].replace(/\\+/g, \" \");\n      }\n    }\n    return format;\n  }\n}\nObject.defineProperty(TextFormatter, \"prefix\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"__amcharts__\"\n});\n", "import { List } from \"./List\";\nimport * as $array from \"./Array\";\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\nexport class Children extends List {\n  constructor(container) {\n    super();\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_container\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._container = container;\n    this._events = this.events.onAll(change => {\n      if (change.type === \"clear\") {\n        $array.each(change.oldValues, x => {\n          this._onRemoved(x);\n        });\n      } else if (change.type === \"push\") {\n        this._onInserted(change.newValue);\n      } else if (change.type === \"setIndex\") {\n        this._onRemoved(change.oldValue);\n        this._onInserted(change.newValue, change.index);\n      } else if (change.type === \"insertIndex\") {\n        this._onInserted(change.newValue, change.index);\n      } else if (change.type === \"removeIndex\") {\n        this._onRemoved(change.oldValue);\n      } else if (change.type === \"moveIndex\") {\n        this._onRemoved(change.value);\n        this._onInserted(change.value, change.newIndex);\n      } else {\n        throw new Error(\"Unknown IListEvent type\");\n      }\n    });\n  }\n  _onInserted(child, index) {\n    child._setParent(this._container, true);\n    const childrenDisplay = this._container._childrenDisplay;\n    if (index === undefined) {\n      childrenDisplay.addChild(child._display);\n    } else {\n      childrenDisplay.addChildAt(child._display, index);\n    }\n  }\n  _onRemoved(child) {\n    this._container._childrenDisplay.removeChild(child._display);\n    this._container.markDirtyBounds();\n    this._container.markDirty();\n  }\n  /**\r\n   * Returns `true` if obejct is disposed.\r\n   */\n  isDisposed() {\n    return this._disposed;\n  }\n  /**\r\n   * Permanently dispose this object.\r\n   */\n  dispose() {\n    if (!this._disposed) {\n      this._disposed = true;\n      this._events.dispose();\n      $array.each(this.values, child => {\n        child.dispose();\n      });\n    }\n  }\n}\n", "/** @ignore */ /** */\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport { Sprite } from \"../render/Sprite\";\nimport { TextFormatter } from \"./TextFormatter\";\n/**\r\n * @ignore\r\n */\nexport function populateString(target, string) {\n  if (string != null) {\n    string = \"\" + string;\n    string = TextFormatter.escape(string);\n    let tags = string.match(/\\{([^}]+)\\}/g);\n    let i;\n    if (tags) {\n      for (i = 0; i < tags.length; i++) {\n        let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\n        let value = getTagValue(target, tag, \"\");\n        if (value == null) {\n          value = \"\";\n        }\n        string = string.split(tags[i]).join(value);\n      }\n    }\n    string = TextFormatter.unescape(string);\n  } else {\n    string = \"\";\n  }\n  // TODO: apply adapter?\n  return string;\n}\n/**\r\n * @ignore\r\n */\nfunction getTagValue(target, tagName, format) {\n  let value;\n  const dataItem = target.dataItem;\n  // Parse parts\n  let parts = [];\n  let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\n  let matches;\n  while (true) {\n    matches = reg.exec(tagName);\n    if (matches === null) {\n      break;\n    }\n    if (matches[3]) {\n      // Simple property\n      parts.push({\n        prop: matches[3]\n      });\n      // Check if maybe we should force a formatter on this value\n      const dateFields = target.getDateFormatter().get(\"dateFields\", []);\n      const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\n      const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\n      if (dateFields.indexOf(matches[3]) !== -1) {\n        parts.push({\n          method: \"formatDate\",\n          params: []\n        });\n      } else if (numericFields.indexOf(matches[3]) !== -1) {\n        parts.push({\n          method: \"formatNumber\",\n          params: []\n        });\n      } else if (durationFields.indexOf(matches[3]) !== -1) {\n        parts.push({\n          method: \"formatDuration\",\n          params: []\n        });\n      }\n    } else {\n      // Method\n      // Parse parameters\n      let params = [];\n      if ($utils.trim(matches[2]) != \"\") {\n        let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\n        let matches2;\n        while (true) {\n          matches2 = reg2.exec(matches[2]);\n          if (matches2 === null) {\n            break;\n          }\n          params.push(matches2[1] || matches2[2] || matches2[3]);\n        }\n      }\n      parts.push({\n        method: matches[1],\n        params: params\n      });\n    }\n  }\n  // Check if we can retrieve the value from data item\n  if (dataItem) {\n    // Check values\n    value = getTagValueFromObject(target, parts, dataItem._settings);\n    // Check properties\n    if (value == null || $type.isObject(value)) {\n      // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\n      value = getTagValueFromObject(target, parts, dataItem);\n    }\n    // Check data context\n    let dataContext = dataItem.dataContext;\n    if (value == null && dataContext) {\n      value = getTagValueFromObject(target, parts, dataContext);\n      // Maybe it's a literal dot-separated name of the key in dataContext?\n      if (value == null) {\n        value = getTagValueFromObject(target, [{\n          prop: tagName\n        }], dataContext);\n      }\n      // scond data context level sometimes exist (tree map)\n      if (value == null && dataContext.dataContext) {\n        value = getTagValueFromObject(target, parts, dataContext.dataContext);\n      }\n    }\n    // Check component's data item\n    if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\n      value = getTagValue(dataItem.component, tagName, format);\n    }\n  }\n  // Check sprite's properties\n  if (value == null) {\n    value = getTagValueFromObject(target, parts, target);\n  }\n  // Finally, check the parent\n  if (value == null && target.parent) {\n    value = getTagValue(target.parent, tagName, format);\n  }\n  return value;\n}\n/**\r\n * @ignore\r\n */\nfunction getCustomDataValue(target, prop) {\n  const customData = target.getPrivate(\"customData\");\n  if ($type.isObject(customData)) {\n    return customData[prop];\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function getTagValueFromObject(target, parts, object, format) {\n  let current = object;\n  let formatApplied = false;\n  for (let i = 0, len = parts.length; i < len; i++) {\n    let part = parts[i];\n    if (part.prop) {\n      // Regular property\n      if (current instanceof Sprite) {\n        let tmp = current.get(part.prop);\n        if (tmp == null) tmp = current.getPrivate(part.prop);\n        if (tmp == null) tmp = getCustomDataValue(current, part.prop);\n        if (tmp == null) tmp = current[part.prop];\n        current = tmp;\n      } else if (current.get) {\n        let tmp = current.get(part.prop);\n        if (tmp == null) tmp = current[part.prop];\n        current = tmp;\n      } else {\n        current = current[part.prop];\n      }\n      if (current == null) {\n        // Not set, return undefined\n        return;\n      }\n    } else {\n      // Method\n      switch (part.method) {\n        case \"formatNumber\":\n          let numberValue = $type.toNumber(current);\n          if (numberValue != null) {\n            current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\n            formatApplied = true;\n          }\n          break;\n        case \"formatDate\":\n          let dateValue = $type.toDate(current);\n          if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\n            // Was not able to get date out of value, quitting and letting\n            // calling method try another value\n            return;\n          }\n          if (dateValue != null) {\n            current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\n            formatApplied = true;\n          }\n          break;\n        case \"formatDuration\":\n          let durationValue = $type.toNumber(current);\n          if (durationValue != null) {\n            current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\n            formatApplied = true;\n          }\n          break;\n        case \"urlEncode\":\n        case \"encodeURIComponent\":\n          current = encodeURIComponent(current);\n          break;\n        default:\n          if (current[part.method]) {\n            current[part.method].apply(object, part.params);\n          }\n          break;\n      }\n    }\n  }\n  // Apply default format if it wasn't applied explicitly\n  if (!formatApplied) {\n    let formatParts = [{\n      method: \"\",\n      params: format\n    }];\n    if (format == null) {\n      // Format is not set\n      // Determine from the type of the value\n      if ($type.isNumber(current)) {\n        formatParts[0].method = \"formatNumber\";\n        formatParts[0].params = \"\";\n      } else if ($type.isDate(current)) {\n        formatParts[0].method = \"formatDate\";\n        formatParts[0].params = \"\";\n      }\n    } else {\n      // Format set\n      // Try to determine formatter based on the format\n      let formatterType = $utils.getFormat(format);\n      // format\n      if (formatterType === \"number\") {\n        formatParts[0].method = \"formatNumber\";\n      } else if (formatterType === \"date\") {\n        formatParts[0].method = \"formatDate\";\n      } else if (formatterType === \"duration\") {\n        formatParts[0].method = \"formatDuration\";\n      }\n    }\n    // Apply format\n    if (formatParts[0].method) {\n      current = getTagValueFromObject(target, formatParts, current);\n    }\n  }\n  return current;\n}\n", "import { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\nexport class Container extends Sprite {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeContainer()\n    });\n    Object.defineProperty(this, \"_childrenDisplay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeContainer()\n    });\n    /**\r\n     * List of Container's child elements.\r\n     */\n    Object.defineProperty(this, \"children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Children(this)\n    });\n    Object.defineProperty(this, \"_percentageSizeChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_percentagePositionChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_prevWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_prevHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_contentWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_contentHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_contentMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_vsbd0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_vsbd1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    this._display.addChild(this._childrenDisplay);\n  }\n  _dispose() {\n    $array.eachReverse(this.allChildren(), child => {\n      child.dispose();\n    });\n    if (this.getPrivate(\"htmlElement\")) {\n      this._root._removeHTMLContent(this);\n    }\n    super._dispose();\n  }\n  _changed() {\n    super._changed();\n    if (this.isDirty(\"interactiveChildren\")) {\n      this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n    }\n    if (this.isDirty(\"layout\")) {\n      this._prevWidth = 0;\n      this._prevHeight = 0;\n      this.markDirtyBounds();\n      if (this._prevSettings.layout) {\n        this.children.each(child => {\n          child.removePrivate(\"x\");\n          child.removePrivate(\"y\");\n        });\n      }\n    }\n    if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n      this.children.each(child => {\n        child.markDirtyPosition();\n      });\n    }\n    if (this.isDirty(\"maskContent\")) {\n      const childrenDisplay = this._childrenDisplay;\n      let contentMask = this._contentMask;\n      if (this.get(\"maskContent\")) {\n        if (!contentMask) {\n          contentMask = Rectangle.new(this._root, {\n            x: -.5,\n            y: -.5,\n            width: this.width() + 1,\n            height: this.height() + 1\n          });\n          this._contentMask = contentMask;\n          childrenDisplay.addChildAt(contentMask._display, 0);\n          childrenDisplay.mask = contentMask._display;\n        }\n      } else {\n        if (contentMask) {\n          childrenDisplay.removeChild(contentMask._display);\n          childrenDisplay.mask = null;\n          contentMask.dispose();\n          this._contentMask = undefined;\n        }\n      }\n    }\n  }\n  _updateSize() {\n    super._updateSize();\n    $array.each(this._percentageSizeChildren, child => {\n      child._updateSize();\n    });\n    $array.each(this._percentagePositionChildren, child => {\n      child.markDirtyPosition();\n      child._updateSize();\n    });\n    this.updateBackground();\n  }\n  updateBackground() {\n    const background = this.get(\"background\");\n    let bounds = this._localBounds;\n    if (bounds && !this.isHidden()) {\n      let x = bounds.left;\n      let y = bounds.top;\n      let w = bounds.right - x;\n      let h = bounds.bottom - y;\n      let maxWidth = this.get(\"maxWidth\");\n      let maxHeight = this.get(\"maxHeight\");\n      if (maxHeight) {\n        if (h > maxHeight) {\n          h = maxHeight;\n        }\n      }\n      if (maxWidth) {\n        if (w > maxWidth) {\n          w = maxWidth;\n        }\n      }\n      let width = this.width();\n      let height = this.height();\n      if (background) {\n        background.setAll({\n          width: w,\n          height: h,\n          x: x,\n          y: y\n        });\n        if (this._display.interactive) {\n          background._display.interactive = true;\n        }\n      }\n      const contentMask = this._contentMask;\n      if (contentMask) {\n        contentMask.setAll({\n          width: width + 1,\n          height: height + 1\n        });\n      }\n      const verticalScrollbar = this.get(\"verticalScrollbar\");\n      if (verticalScrollbar) {\n        verticalScrollbar.set(\"height\", height);\n        verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n        verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n        const bg = verticalScrollbar.get(\"background\");\n        if (bg) {\n          bg.setAll({\n            width: verticalScrollbar.width(),\n            height: height\n          });\n        }\n        let visible = true;\n        if (this._contentHeight <= height) {\n          visible = false;\n        }\n        verticalScrollbar.setPrivate(\"visible\", visible);\n      }\n    }\n  }\n  _applyThemes(force = false) {\n    if (super._applyThemes(force)) {\n      this.eachChildren(child => {\n        child._applyThemes(force);\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n  _applyState(name) {\n    super._applyState(name);\n    if (this.get(\"setStateOnChildren\")) {\n      this.eachChildren(child => {\n        child.states.apply(name);\n      });\n    }\n  }\n  _applyStateAnimated(name, duration) {\n    super._applyStateAnimated(name, duration);\n    if (this.get(\"setStateOnChildren\")) {\n      this.eachChildren(child => {\n        child.states.applyAnimate(name, duration);\n      });\n    }\n  }\n  /**\r\n   * Returns container's inner width (width without padding) in pixels.\r\n   *\r\n   * @return Inner width (px)\r\n   */\n  innerWidth() {\n    return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n  }\n  /**\r\n   * Returns container's inner height (height without padding) in pixels.\r\n   *\r\n   * @return Inner height (px)\r\n   */\n  innerHeight() {\n    return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n  }\n  _getBounds() {\n    if (!this.get(\"html\")) {\n      let width = this.get(\"width\");\n      let height = this.get(\"height\");\n      let pWidth = this.getPrivate(\"width\");\n      let pHeight = this.getPrivate(\"height\");\n      let bounds = {\n        left: 0,\n        top: 0,\n        right: this.width(),\n        bottom: this.height()\n      };\n      let layout = this.get(\"layout\");\n      let horizontal = false;\n      let vertical = false;\n      if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n        horizontal = true;\n      }\n      if (layout instanceof VerticalLayout) {\n        vertical = true;\n      }\n      if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n        // void\n      } else {\n        let m = Number.MAX_VALUE;\n        let l = m;\n        let r = -m;\n        let t = m;\n        let b = -m;\n        const paddingLeft = this.get(\"paddingLeft\", 0);\n        const paddingTop = this.get(\"paddingTop\", 0);\n        const paddingRight = this.get(\"paddingRight\", 0);\n        const paddingBottom = this.get(\"paddingBottom\", 0);\n        this.children.each(child => {\n          if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n            let childBounds = child.adjustedLocalBounds();\n            let childX = child.x();\n            let childY = child.y();\n            let cl = childX + childBounds.left;\n            let cr = childX + childBounds.right;\n            let ct = childY + childBounds.top;\n            let cb = childY + childBounds.bottom;\n            if (horizontal) {\n              cl -= child.get(\"marginLeft\", 0);\n              cr += child.get(\"marginRight\", 0);\n            }\n            if (vertical) {\n              ct -= child.get(\"marginTop\", 0);\n              cb += child.get(\"marginBottom\", 0);\n            }\n            if (cl < l) {\n              l = cl;\n            }\n            if (cr > r) {\n              r = cr;\n            }\n            if (ct < t) {\n              t = ct;\n            }\n            if (cb > b) {\n              b = cb;\n            }\n          }\n        });\n        if (l == m) {\n          l = 0;\n        }\n        if (r == -m) {\n          r = 0;\n        }\n        if (t == m) {\n          t = 0;\n        }\n        if (b == -m) {\n          b = 0;\n        }\n        bounds.left = l - paddingLeft;\n        bounds.top = t - paddingTop;\n        bounds.right = r + paddingRight;\n        bounds.bottom = b + paddingBottom;\n        const minWidth = this.get(\"minWidth\");\n        if ($type.isNumber(minWidth) && minWidth > 0) {\n          if (bounds.right - bounds.left < minWidth) {\n            if (bounds.right >= minWidth) {\n              bounds.left = bounds.right - minWidth;\n            } else {\n              bounds.right = bounds.left + minWidth;\n            }\n          }\n        }\n        const minHeight = this.get(\"minHeight\");\n        if ($type.isNumber(minHeight) && minHeight > 0) {\n          if (bounds.bottom - bounds.top < minHeight) {\n            if (bounds.bottom >= minHeight) {\n              bounds.top = bounds.bottom - minHeight;\n            } else {\n              bounds.bottom = bounds.top + minHeight;\n            }\n          }\n        }\n      }\n      this._contentWidth = bounds.right - bounds.left;\n      this._contentHeight = bounds.bottom - bounds.top;\n      if ($type.isNumber(width)) {\n        bounds.left = 0;\n        bounds.right = width;\n      }\n      if ($type.isNumber(pWidth)) {\n        bounds.left = 0;\n        bounds.right = pWidth;\n      }\n      if ($type.isNumber(height)) {\n        bounds.top = 0;\n        bounds.bottom = height;\n      }\n      if ($type.isNumber(pHeight)) {\n        bounds.top = 0;\n        bounds.bottom = pHeight;\n      }\n      this._localBounds = bounds;\n    } else {\n      let bounds = this._localBounds;\n      if (bounds) {\n        this._contentWidth = bounds.right - bounds.left;\n        this._contentHeight = bounds.bottom - bounds.top;\n      }\n    }\n  }\n  _updateBounds() {\n    const layout = this.get(\"layout\");\n    if (layout) {\n      layout.updateContainer(this);\n    }\n    super._updateBounds();\n    this.updateBackground();\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirty() {\n    super.markDirty();\n    this._root._addDirtyParent(this);\n  }\n  _prepareChildren() {\n    const innerWidth = this.innerWidth();\n    const innerHeight = this.innerHeight();\n    if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n      let layout = this.get(\"layout\");\n      let horizontal = false;\n      let vertical = false;\n      if (layout) {\n        if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n          horizontal = true;\n        }\n        if (layout instanceof VerticalLayout) {\n          vertical = true;\n        }\n      }\n      $array.each(this._percentageSizeChildren, child => {\n        if (!horizontal) {\n          let width = child.get(\"width\");\n          if (width instanceof Percent) {\n            child.setPrivate(\"width\", width.value * innerWidth);\n          }\n        }\n        if (!vertical) {\n          let height = child.get(\"height\");\n          if (height instanceof Percent) {\n            child.setPrivate(\"height\", height.value * innerHeight);\n          }\n        }\n      });\n      $array.each(this._percentagePositionChildren, child => {\n        child.markDirtyPosition();\n        child.markDirtyBounds();\n      });\n      this._prevWidth = innerWidth;\n      this._prevHeight = innerHeight;\n      this._sizeDirty = true;\n      this.updateBackground();\n    }\n    this._handleStates();\n  }\n  _updateHTMLContent() {\n    const html = this.get(\"html\", \"\");\n    if (html && html !== \"\") {\n      this._root._setHTMLContent(this, populateString(this, html));\n    } else {\n      this._root._removeHTMLContent(this);\n    }\n    this._root._positionHTMLElement(this);\n  }\n  /**\r\n   * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n   * the Container will scroll in such way so that target element becomes\r\n   * visible if its currently outside of view.\r\n   *\r\n   * @param  child  Target child\r\n   * @since 5.10.5\r\n   */\n  scrollToChild(child) {\n    const verticalScrollbar = this.get(\"verticalScrollbar\");\n    if (verticalScrollbar) {\n      let y = child.y();\n      let h = this.innerHeight();\n      let ch = child.height();\n      let contentH = this._contentHeight;\n      let max = 1 - (h - ch / 2) / contentH;\n      if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\n        let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\n        verticalScrollbar.animate({\n          key: \"start\",\n          to: pos,\n          duration: verticalScrollbar.get(\"animationDuration\", 0),\n          easing: verticalScrollbar.get(\"animationEasing\")\n        });\n      }\n    }\n  }\n  _updateChildren() {\n    if (this.isDirty(\"html\")) {\n      this._updateHTMLContent();\n    }\n    if (this.isDirty(\"verticalScrollbar\")) {\n      const verticalScrollbar = this.get(\"verticalScrollbar\");\n      if (verticalScrollbar) {\n        verticalScrollbar._setParent(this);\n        verticalScrollbar.startGrip.setPrivate(\"visible\", false);\n        verticalScrollbar.endGrip.setPrivate(\"visible\", false);\n        this.set(\"maskContent\", true);\n        this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n        let background = this.get(\"background\");\n        if (!background) {\n          background = this.set(\"background\", Rectangle.new(this._root, {\n            themeTags: [\"background\"],\n            fillOpacity: 0,\n            fill: this._root.interfaceColors.get(\"alternativeBackground\")\n          }));\n        }\n        this._vsbd0 = this.events.on(\"wheel\", event => {\n          const wheelEvent = event.originalEvent;\n          // Ignore wheel event if it is happening on a non-chart element, e.g. if\n          // some page element is over the chart.\n          if ($utils.isLocalEvent(wheelEvent, this)) {\n            wheelEvent.preventDefault();\n          } else {\n            return;\n          }\n          let shiftY = wheelEvent.deltaY / 5000;\n          const start = verticalScrollbar.get(\"start\", 0);\n          const end = verticalScrollbar.get(\"end\", 1);\n          if (start + shiftY <= 0) {\n            shiftY = -start;\n          }\n          if (end + shiftY >= 1) {\n            shiftY = 1 - end;\n          }\n          if (start + shiftY >= 0 && end + shiftY <= 1) {\n            verticalScrollbar.set(\"start\", start + shiftY);\n            verticalScrollbar.set(\"end\", end + shiftY);\n          }\n        });\n        this._disposers.push(this._vsbd0);\n        this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\n          let h = this._contentHeight;\n          const childrenDisplay = this._childrenDisplay;\n          const contentMask = this._contentMask;\n          childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\n          childrenDisplay.markDirtyLayer();\n          if (contentMask) {\n            contentMask._display.y = -childrenDisplay.y;\n            childrenDisplay.mask = contentMask._display;\n          }\n        });\n        this._disposers.push(this._vsbd1);\n        this._display.addChild(verticalScrollbar._display);\n      } else {\n        const previous = this._prevSettings.verticalScrollbar;\n        if (previous) {\n          this._display.removeChild(previous._display);\n          if (this._vsbd0) {\n            this._vsbd0.dispose();\n          }\n          if (this._vsbd1) {\n            this._vsbd1.dispose();\n          }\n          const childrenDisplay = this._childrenDisplay;\n          childrenDisplay.y = 0;\n          this.setPrivate(\"height\", undefined);\n          this.set(\"maskContent\", false);\n          this.set(\"paddingRight\", undefined);\n        }\n      }\n    }\n    if (this.isDirty(\"background\")) {\n      // TODO maybe this should dispose ?\n      const previous = this._prevSettings[\"background\"];\n      if (previous) {\n        this._display.removeChild(previous._display);\n      }\n      const background = this.get(\"background\");\n      if (background instanceof Sprite) {\n        background.set(\"isMeasured\", false);\n        background._setParent(this);\n        this._display.addChildAt(background._display, 0);\n      }\n    }\n    if (this.isDirty(\"mask\")) {\n      const mask = this.get(\"mask\");\n      const previous = this._prevSettings[\"mask\"];\n      if (previous) {\n        this._display.removeChild(previous._display);\n        if (previous != mask) {\n          previous.dispose();\n        }\n      }\n      if (mask) {\n        const parent = mask.parent;\n        if (parent) {\n          parent.children.removeValue(mask);\n        }\n        mask._setParent(this);\n        this._display.addChildAt(mask._display, 0);\n        this._childrenDisplay.mask = mask._display;\n      }\n    }\n  }\n  _processTemplateField() {\n    super._processTemplateField();\n    this.children.each(child => {\n      child._processTemplateField();\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  walkChildren(f) {\n    this.children.each(child => {\n      if (child instanceof Container) {\n        child.walkChildren(f);\n      }\n      f(child);\n    });\n  }\n  eachChildren(f) {\n    const background = this.get(\"background\");\n    if (background) {\n      f(background);\n    }\n    const verticalScrollbar = this.get(\"verticalScrollbar\");\n    if (verticalScrollbar) {\n      f(verticalScrollbar);\n    }\n    const mask = this.get(\"mask\");\n    if (mask) {\n      f(mask);\n    }\n    this.children.values.forEach(child => {\n      f(child);\n    });\n  }\n  allChildren() {\n    const output = [];\n    this.eachChildren(x => {\n      output.push(x);\n    });\n    return output;\n  }\n  _setDataItem(dataItem) {\n    const updated = dataItem !== this._dataItem;\n    super._setDataItem(dataItem);\n    const html = this.get(\"html\", \"\");\n    if (html && html !== \"\" && updated) {\n      this._root._setHTMLContent(this, populateString(this, html));\n    }\n  }\n}\nObject.defineProperty(Container, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Container\"\n});\nObject.defineProperty(Container, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Sprite.classNames.concat([Container.className])\n});\n", "import { Sprite } from \"./Sprite\";\nimport { populateString } from \"../util/PopulateString\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\nimport { Disposer } from \"../util/Disposer\";\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\nexport class Text extends Sprite {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"textStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeTextStyle()\n    });\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeText(\"\", this.textStyle)\n    });\n    Object.defineProperty(this, \"_textStyles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"textAlign\", \"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"fontStyle\", \"fontVariant\", \"textDecoration\", \"shadowColor\", \"shadowBlur\", \"shadowOffsetX\", \"shadowOffsetY\", \"shadowOpacity\",\n      // \"leading\",\n      // \"letterSpacing\",\n      \"lineHeight\", \"baselineRatio\",\n      //\"padding\",\n      // \"stroke\",\n      // \"strokeThickness\",\n      // \"trim\",\n      // \"wordWrap\",\n      \"direction\", \"textBaseline\", \"oversizedBehavior\", \"breakWords\", \"ellipsis\", \"minScale\", \"maxChars\"]\n    });\n    Object.defineProperty(this, \"_originalScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _updateBounds() {\n    if (!this.get(\"text\")) {\n      let newBounds = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this._adjustedLocalBounds = newBounds;\n    } else {\n      super._updateBounds();\n      let fillGradient = this.get(\"fillGradient\");\n      if (fillGradient) {\n        this._display.style.fill = fillGradient.getFill(this);\n      }\n    }\n  }\n  _changed() {\n    super._changed();\n    this._display.clear();\n    let textStyle = this.textStyle;\n    if (this.isDirty(\"opacity\")) {\n      let opacity = this.get(\"opacity\", 1);\n      this._display.alpha = opacity;\n    }\n    if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\n      this._display.text = this._getText();\n      this.markDirtyBounds();\n      if (this.get(\"role\") == \"tooltip\") {\n        this._root.updateTooltip(this);\n      }\n    }\n    if (this.isPrivateDirty(\"tooltipElement\")) {\n      const tooltipElement = this.getPrivate(\"tooltipElement\");\n      if (tooltipElement) {\n        this._disposers.push(new Disposer(() => {\n          this._root._removeTooltipElement(this);\n        }));\n      }\n    }\n    if (this.isDirty(\"width\")) {\n      textStyle.wordWrapWidth = this.width();\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"oversizedBehavior\")) {\n      textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"breakWords\")) {\n      textStyle.breakWords = this.get(\"breakWords\", false);\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"ellipsis\")) {\n      textStyle.ellipsis = this.get(\"ellipsis\");\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"ignoreFormatting\")) {\n      textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"minScale\")) {\n      textStyle.minScale = this.get(\"minScale\", 0);\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n      const fill = this.get(\"fill\");\n      const fillGradient = this.get(\"fillGradient\");\n      const fillOpacity = this.get(\"fillOpacity\");\n      if (fillGradient) {\n        if (fill) {\n          const stops = fillGradient.get(\"stops\", []);\n          if (stops.length) {\n            $array.each(stops, stop => {\n              if ((!stop.color || stop.colorInherited) && fill) {\n                stop.color = fill;\n                stop.colorInherited = true;\n              }\n              if (stop.opacity == null || stop.opacityInherited) {\n                stop.opacity = fillOpacity;\n                stop.opacityInherited = true;\n              }\n            });\n          }\n        }\n        textStyle.fill = fillGradient.getFill(this);\n      } else if (fill) {\n        textStyle.fill = fill;\n      }\n    }\n    if (this.isDirty(\"fillOpacity\")) {\n      let fillOpacity = this.get(\"fillOpacity\", 1);\n      if (fillOpacity) {\n        textStyle.fillOpacity = fillOpacity;\n      }\n    }\n    if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\n      textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\n      textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n      this.markDirtyBounds();\n    }\n    $array.each(this._textStyles, styleName => {\n      if (this._dirty[styleName]) {\n        textStyle[styleName] = this.get(styleName);\n        this.markDirtyBounds();\n      }\n    });\n    textStyle[\"fontSize\"] = this.get(\"fontSize\");\n    textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\n    this._display.style = textStyle;\n    if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\n      this._root.updateTooltip(this);\n    }\n  }\n  _getText() {\n    let text = this.get(\"text\", \"\");\n    if (this.get(\"maxChars\")) {\n      text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\n    }\n    return this.get(\"populateText\") ? populateString(this, text) : text;\n  }\n  _getAccessibleText() {\n    const ariaLabel = this.get(\"ariaLabel\");\n    if (ariaLabel !== undefined) {\n      return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\n    }\n    return this._getText();\n  }\n  /**\r\n   * Forces the text to be re-evaluated and re-populated.\r\n   */\n  markDirtyText() {\n    this._display.text = this._getText();\n    if (this.get(\"role\") == \"tooltip\") {\n      this._root.updateTooltip(this);\n    }\n    this.markDirtyBounds();\n    this.markDirty();\n  }\n  _setDataItem(dataItem) {\n    super._setDataItem(dataItem);\n    if (this.get(\"populateText\")) {\n      this.markDirtyText();\n    }\n  }\n  getNumberFormatter() {\n    if (this.parent) {\n      return this.parent.getNumberFormatter();\n    } else {\n      return super.getNumberFormatter();\n    }\n  }\n  getDateFormatter() {\n    if (this.parent) {\n      return this.parent.getDateFormatter();\n    } else {\n      return super.getDateFormatter();\n    }\n  }\n  getDurationFormatter() {\n    if (this.parent) {\n      return this.parent.getDurationFormatter();\n    } else {\n      return super.getDurationFormatter();\n    }\n  }\n}\nObject.defineProperty(Text, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Text\"\n});\nObject.defineProperty(Text, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Sprite.classNames.concat([Text.className])\n});\n", "import { Text } from \"../render/Text\";\nimport { p50, p100 } from \"../util/Percent\";\nimport { Container } from \"./Container\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\nexport class Label extends Container {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_text\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_textKeys\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"text\", \"fill\", \"fillGradient\", \"fillOpacity\", \"textAlign\", \"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"fontStyle\", \"fontVariant\", \"textDecoration\", \"shadowColor\", \"shadowBlur\", \"shadowOffsetX\", \"shadowOffsetY\", \"shadowOpacity\",\n      // \"leading\",\n      // \"letterSpacing\",\n      \"lineHeight\", \"baselineRatio\",\n      //\"padding\",\n      // \"stroke\",\n      // \"strokeThickness\",\n      // \"trim\",\n      // \"wordWrap\",\n      \"direction\", \"textBaseline\", \"oversizedBehavior\", \"breakWords\", \"ellipsis\", \"minScale\", \"populateText\", \"role\", \"ignoreFormatting\", \"maxChars\", \"ariaLabel\"]\n    });\n  }\n  /**\r\n   * @ignore Text is not to be used directly\r\n   */\n  get text() {\n    return this._text;\n  }\n  _afterNew() {\n    super._afterNew();\n    this._makeText();\n    $array.each(this._textKeys, property => {\n      const propValue = this.get(property);\n      if (propValue != undefined) {\n        this._text.set(property, propValue);\n      }\n    });\n    if (this.get(\"html\", \"\") !== \"\") {\n      this._text.set(\"text\", \"\");\n    }\n    this.onPrivate(\"maxWidth\", () => {\n      this._setMaxDimentions();\n    });\n    this.onPrivate(\"maxHeight\", () => {\n      this._setMaxDimentions();\n    });\n  }\n  _makeText() {\n    this._text = this.children.push(Text.new(this._root, {}));\n  }\n  _updateChildren() {\n    super._updateChildren();\n    const text = this._text;\n    $array.each(this._textKeys, property => {\n      this._text.set(property, this.get(property));\n    });\n    if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\n      this._setMaxDimentions();\n    }\n    // Do not show regular text if HTML is used\n    if (this.get(\"html\", \"\") !== \"\") {\n      text.set(\"text\", \"\");\n    } else {\n      text.set(\"text\", this.get(\"text\"));\n      this._maybeUpdateHTMLColor();\n    }\n    if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n      this._maybeUpdateHTMLColor();\n    }\n    if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\n      const textAlign = this.get(\"textAlign\");\n      let x;\n      if (this.get(\"width\") != null) {\n        if (textAlign == \"right\") {\n          x = p100;\n        } else if (textAlign == \"center\") {\n          x = p50;\n        } else {\n          x = 0;\n        }\n      } else {\n        if (textAlign == \"left\" || textAlign == \"start\") {\n          x = this.get(\"paddingLeft\", 0);\n        } else if (textAlign == \"right\" || textAlign == \"end\") {\n          x = -this.get(\"paddingRight\", 0);\n        }\n      }\n      text.set(\"x\", x);\n    }\n    const background = this.get(\"background\");\n    if (background) {\n      background.setPrivate(\"visible\", text._display.textVisible);\n    }\n  }\n  _maybeUpdateHTMLColor() {\n    const htmlElement = this.getPrivate(\"htmlElement\");\n    if (htmlElement && this.get(\"fill\")) {\n      htmlElement.style.color = this.get(\"fill\").toCSSHex();\n      //@todo support gradient\n    }\n  }\n  _setMaxDimentions() {\n    const rotation = this.get(\"rotation\");\n    const vertical = rotation == 90 || rotation == 270 || rotation == -90;\n    const text = this._text;\n    const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\n    if ($type.isNumber(maxWidth)) {\n      text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\n    } else {\n      text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\n    }\n    const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\n    if ($type.isNumber(maxHeight)) {\n      text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\n    } else {\n      text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\n    }\n    this.root.events.once(\"frameended\", () => {\n      text.markDirtyBounds();\n    });\n  }\n  _setDataItem(dataItem) {\n    super._setDataItem(dataItem);\n    this._markDirtyKey(\"text\");\n    this._markDirtyKey(\"html\");\n    const text = this._text;\n    if (text.get(\"populateText\")) {\n      text.markDirtyText();\n    }\n    const html = this.get(\"html\");\n    if (html && html !== \"\") {\n      this._updateHTMLContent();\n    }\n  }\n  /**\r\n   * Returns text with populated placeholders and formatting if `populateText` is\r\n   * set to `true`.\r\n   *\r\n   * @return Populated text\r\n   */\n  getText() {\n    return this._text._getText();\n  }\n  /**\r\n   * Returns \"aria-label\" text with populated placeholders and formatting\r\n   * if `populateText` is set to `true`.\r\n   *\r\n   * @return Populated text\r\n   */\n  getAccessibleText() {\n    return this._text._getAccessibleText();\n  }\n}\nObject.defineProperty(Label, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Label\"\n});\nObject.defineProperty(Label, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Label.className])\n});\n", "import * as $type from \"../util/Type\";\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\nimport { Rectangle } from \"./Rectangle\";\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class RoundedRectangle extends Rectangle {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\n      this._clear = true;\n    }\n  }\n  _draw() {\n    let width = this.width();\n    let height = this.height();\n    let wSign = width / Math.abs(width);\n    let hSign = height / Math.abs(height);\n    let x = 0;\n    let y = 0;\n    const strokeWidth = this.get(\"strokeWidth\", 0);\n    if (this.get(\"containStroke\", false)) {\n      width -= wSign * strokeWidth;\n      height -= hSign * strokeWidth;\n      x += wSign * strokeWidth / 2;\n      y += hSign * strokeWidth / 2;\n    }\n    let w = width;\n    let h = height;\n    if ($type.isNumber(w) && $type.isNumber(h)) {\n      let minSide = Math.min(w, h) / 2;\n      let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\n      let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\n      let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\n      let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\n      let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\n      crtl = $math.fitToRange(crtl, 0, maxcr);\n      crtr = $math.fitToRange(crtr, 0, maxcr);\n      crbr = $math.fitToRange(crbr, 0, maxcr);\n      crbl = $math.fitToRange(crbl, 0, maxcr);\n      const display = this._display;\n      display.moveTo(x + crtl * wSign, y);\n      display.lineTo(x + w - crtr * wSign, y);\n      if (crtr > 0) {\n        display.arcTo(x + w, y, x + w, y + crtr * hSign, crtr);\n      }\n      display.lineTo(x + w, y + h - crbr * hSign);\n      if (crbr > 0) {\n        display.arcTo(x + w, y + h, x + w - crbr * wSign, y + h, crbr);\n      }\n      display.lineTo(x + crbl * wSign, y + h);\n      if (crbl > 0) {\n        display.arcTo(x, y + h, x, y + h - crbl * hSign, crbl);\n      }\n      display.lineTo(x, y + crtl * hSign);\n      if (crtl > 0) {\n        display.arcTo(x, y, x + crtl * wSign, y, crtl);\n      }\n      display.closePath();\n    }\n  }\n}\nObject.defineProperty(RoundedRectangle, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"RoundedRectangle\"\n});\nObject.defineProperty(RoundedRectangle, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Rectangle.classNames.concat([RoundedRectangle.className])\n});\n", "import { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container } from \"./Container\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\nexport class Button extends Container {\n  _afterNew() {\n    this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n    super._afterNew();\n    if (!this._settings.background) {\n      this.set(\"background\", RoundedRectangle.new(this._root, {\n        themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n      }));\n    }\n    this.setPrivate(\"trustBounds\", true);\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    if (this.isDirty(\"icon\")) {\n      const previous = this._prevSettings.icon;\n      const icon = this.get(\"icon\");\n      if (icon !== previous) {\n        this._disposeProperty(\"icon\");\n        if (previous) {\n          previous.dispose();\n        }\n        if (icon) {\n          this.children.push(icon);\n        }\n        this._prevSettings.icon = icon;\n      }\n    }\n    if (this.isDirty(\"label\")) {\n      const previous = this._prevSettings.label;\n      const label = this.get(\"label\");\n      if (label !== previous) {\n        this._disposeProperty(\"label\");\n        if (previous) {\n          previous.dispose();\n        }\n        if (label) {\n          this.children.push(label);\n        }\n        this._prevSettings.label = label;\n      }\n    }\n  }\n}\nObject.defineProperty(Button, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Button\"\n});\nObject.defineProperty(Button, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Button.className])\n});\n", "import { List } from \"./List\";\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\nexport class ListData extends List {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * An optional processor for data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n     */\n    Object.defineProperty(this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  incrementRef() {}\n  /**\r\n   * @ignore\r\n   */\n  decrementRef() {}\n  _onPush(newValue) {\n    if (this.processor) {\n      this.processor.processRow(newValue);\n    }\n    super._onPush(newValue);\n  }\n  _onInsertIndex(index, newValue) {\n    if (this.processor) {\n      this.processor.processRow(newValue);\n    }\n    super._onInsertIndex(index, newValue);\n  }\n  _onSetIndex(index, oldValue, newValue) {\n    if (this.processor) {\n      this.processor.processRow(newValue);\n    }\n    super._onSetIndex(index, oldValue, newValue);\n  }\n}\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\nexport class JsonData {\n  constructor(value) {\n    Object.defineProperty(this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_value\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._value = value;\n  }\n  incrementRef() {}\n  decrementRef() {}\n}\n", "import { __awaiter } from \"tslib\";\nimport { Settings } from \"../util/Entity\";\nimport { Container } from \"./Container\";\nimport { ListData } from \"../util/Data\";\nimport * as $array from \"../util/Array\";\nimport * as $object from \"../util/Object\";\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\nexport class DataItem extends Settings {\n  constructor(component, dataContext, settings) {\n    super(settings);\n    /**\r\n     * A data item's owener [[Component]].\r\n     */\n    Object.defineProperty(this, \"component\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A reference to actual item in source data this item is based on.\r\n     */\n    Object.defineProperty(this, \"dataContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * @todo requires description\r\n     */\n    Object.defineProperty(this, \"bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A set of \"open\" values.\r\n     */\n    Object.defineProperty(this, \"open\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A set of \"close\" values.\r\n     */\n    Object.defineProperty(this, \"close\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.dataContext = dataContext;\n    this.component = component;\n    this._settings.visible = true;\n    this._checkDirty();\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirty() {\n    this.component.markDirtyValues(this);\n  }\n  _startAnimation() {\n    this.component._root._addAnimation(this);\n  }\n  _animationTime() {\n    return this.component._root.animationTime;\n  }\n  _dispose() {\n    if (this.component) {\n      this.component.disposeDataItem(this);\n    }\n    super._dispose();\n  }\n  /**\r\n   * Shows a data item that's currently hidden.\r\n   */\n  show(duration) {\n    this.setRaw(\"visible\", true);\n    if (this.component) {\n      this.component.showDataItem(this, duration);\n    }\n  }\n  /**\r\n   * Hides a data item that's currently visible.\r\n   */\n  hide(duration) {\n    this.setRaw(\"visible\", false);\n    if (this.component) {\n      this.component.hideDataItem(this, duration);\n    }\n  }\n  isHidden() {\n    return !this.get(\"visible\");\n  }\n}\n/**\r\n * A base class for elements that make use of data.\r\n */\nexport class Component extends Container {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_data\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListData()\n    });\n    Object.defineProperty(this, \"_dataItems\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_mainDataItems\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._dataItems\n    });\n    Object.defineProperty(this, \"valueFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"fields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"id\"]\n    });\n    Object.defineProperty(this, \"_valueFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_valueFieldsF\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_fields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_fieldsF\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_valuesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_dataChanged\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_dataGrouped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * Indicates if the component has already been initialized.\r\n     */\n    Object.defineProperty(this, \"inited\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  /**\r\n   * Component's data.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n   */\n  set data(data) {\n    data.incrementRef();\n    this._data.decrementRef();\n    this._data = data;\n  }\n  /**\r\n   * @return  Data\r\n   */\n  get data() {\n    return this._data;\n  }\n  _dispose() {\n    super._dispose();\n    this._data.decrementRef();\n  }\n  _onDataClear() {}\n  _afterNew() {\n    super._afterNew();\n    this._data.incrementRef();\n    this._updateFields();\n    this._disposers.push(this.data.events.onAll(change => {\n      const dataItems = this._mainDataItems;\n      this.markDirtyValues();\n      this._markDirtyGroup();\n      this._dataChanged = true;\n      if (change.type === \"clear\") {\n        $array.each(dataItems, dataItem => {\n          dataItem.dispose();\n        });\n        dataItems.length = 0;\n        this._onDataClear();\n      } else if (change.type === \"push\") {\n        const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n        dataItems.push(dataItem);\n        this.processDataItem(dataItem);\n      } else if (change.type === \"setIndex\") {\n        const dataItem = dataItems[change.index];\n        const properties = this._makeDataItem(change.newValue);\n        if (dataItem.bullets && dataItem.bullets.length == 0) {\n          dataItem.bullets = undefined;\n        }\n        $object.keys(properties).forEach(key => {\n          dataItem.animate({\n            key: key,\n            to: properties[key],\n            duration: this.get(\"interpolationDuration\", 0),\n            easing: this.get(\"interpolationEasing\")\n          });\n        });\n        dataItem.dataContext = change.newValue;\n      } else if (change.type === \"insertIndex\") {\n        const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n        dataItems.splice(change.index, 0, dataItem);\n        this.processDataItem(dataItem);\n      } else if (change.type === \"removeIndex\") {\n        const dataItem = dataItems[change.index];\n        dataItem.dispose();\n        dataItems.splice(change.index, 1);\n      } else if (change.type === \"moveIndex\") {\n        const dataItem = dataItems[change.oldIndex];\n        dataItems.splice(change.oldIndex, 1);\n        dataItems.splice(change.newIndex, 0, dataItem);\n      } else {\n        throw new Error(\"Unknown IStreamEvent type\");\n      }\n      this._afterDataChange();\n    }));\n  }\n  _updateFields() {\n    if (this.valueFields) {\n      this._valueFields = [];\n      this._valueFieldsF = {};\n      $array.each(this.valueFields, key => {\n        const field = this.get(key + \"Field\");\n        if (field) {\n          this._valueFields.push(key);\n          this._valueFieldsF[key] = {\n            fieldKey: key + \"Field\",\n            workingKey: key + \"Working\"\n          };\n        }\n      });\n    }\n    if (this.fields) {\n      this._fields = [];\n      this._fieldsF = {};\n      $array.each(this.fields, key => {\n        const field = this.get(key + \"Field\");\n        if (field) {\n          this._fields.push(key);\n          this._fieldsF[key] = key + \"Field\";\n        }\n      });\n    }\n  }\n  /**\r\n   * A list of component's data items.\r\n   *\r\n   * @return  Data items\r\n   */\n  get dataItems() {\n    return this._dataItems;\n  }\n  processDataItem(_dataItem) {}\n  _makeDataItem(data) {\n    //const output: this[\"_dataItemSettings\"] = {};\n    const output = {}; // temporary to solve error\n    if (this._valueFields) {\n      $array.each(this._valueFields, key => {\n        const field = this.get(this._valueFieldsF[key].fieldKey);\n        output[key] = data[field];\n        output[this._valueFieldsF[key].workingKey] = output[key];\n      });\n    }\n    if (this._fields) {\n      $array.each(this._fields, key => {\n        const field = this.get(this._fieldsF[key]);\n        output[key] = data[field];\n      });\n    }\n    return output;\n  }\n  /**\r\n   * Creates a new data item and processes it.\r\n   *\r\n   * @param   data         Data item settings\r\n   * @param   dataContext  Data context\r\n   * @return               New data item\r\n   */\n  makeDataItem(data, dataContext) {\n    let dataItem = new DataItem(this, dataContext, data);\n    this.processDataItem(dataItem);\n    return dataItem;\n  }\n  /**\r\n   * Adds new explicit data item to series.\r\n   *\r\n   * @param   data         Data item settings\r\n   * @param   dataContext  Data context\r\n   * @return               New data item\r\n   */\n  pushDataItem(data, dataContext) {\n    const dataItem = this.makeDataItem(data, dataContext);\n    this._mainDataItems.push(dataItem);\n    return dataItem;\n  }\n  /**\r\n   * @ignore\r\n   */\n  disposeDataItem(_dataItem) {}\n  /**\r\n   * Shows component's data item.\r\n   *\r\n   * @param   dataItem   Data item\r\n   * @param   _duration  Animation duration in milliseconds\r\n   * @return             Promise\r\n   */\n  showDataItem(dataItem, _duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      dataItem.set(\"visible\", true);\n    });\n  }\n  /**\r\n   * Hides component's data item.\r\n   *\r\n   * @param   dataItem   Data item\r\n   * @param   _duration  Animation duration in milliseconds\r\n   * @return             Promise\r\n   */\n  hideDataItem(dataItem, _duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      dataItem.set(\"visible\", false);\n    });\n  }\n  _clearDirty() {\n    super._clearDirty();\n    this._valuesDirty = false;\n  }\n  _afterDataChange() {}\n  _afterChanged() {\n    super._afterChanged();\n    if (this._dataChanged) {\n      const type = \"datavalidated\";\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this\n        });\n      }\n      this._dataChanged = false;\n    }\n    this.inited = true;\n  }\n  /**\r\n   * Forces a repaint of the element which relies on data.\r\n   *\r\n   * @since 5.0.21\r\n   */\n  markDirtyValues(_dataItem) {\n    this.markDirty();\n    this._valuesDirty = true;\n  }\n  _markDirtyGroup() {\n    this._dataGrouped = false;\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtySize() {\n    this._sizeDirty = true;\n    this.markDirty();\n  }\n}\nObject.defineProperty(Component, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Component\"\n});\nObject.defineProperty(Component, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Component.className])\n});\n", "/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\nexport function sleep(ms) {\n  return new Promise((resolve, _reject) => {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\nexport let timeUnitDurations = {\n  millisecond: 1,\n  second: 1000,\n  minute: 60000,\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n  month: 365.242 / 12 * 86400000,\n  year: 31536000000\n};\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\nexport function getNextUnit(unit) {\n  switch (unit) {\n    case \"year\":\n      return;\n    case \"month\":\n      return \"year\";\n    case \"week\":\n      return \"month\";\n    case \"day\":\n      return \"month\";\n    // not a mistake\n    case \"hour\":\n      return \"day\";\n    case \"minute\":\n      return \"hour\";\n    case \"second\":\n      return \"minute\";\n    case \"millisecond\":\n      return \"second\";\n  }\n}\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\nexport function getDuration(unit, count) {\n  if (count == null) {\n    count = 1;\n  }\n  return timeUnitDurations[unit] * count;\n}\n/**\r\n * @ignore\r\n */\nexport function getIntervalDuration(interval) {\n  if (interval) {\n    return timeUnitDurations[interval.timeUnit] * interval.count;\n  }\n  return 0;\n}\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\n  const unit = interval.timeUnit;\n  const count = interval.count;\n  if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\n    return timeUnitDurations[interval.timeUnit] * interval.count;\n  } else {\n    const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\n    let lastTime = firstTime + count * getDuration(unit) * 1.05;\n    lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\n    return lastTime - firstTime;\n  }\n}\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\nexport function now() {\n  return new Date();\n}\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\nexport function getTime() {\n  return now().getTime();\n}\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\nexport function copy(date) {\n  return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\n}\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\n  // quick\n  if (timeTwo - timeOne > getDuration(unit, 1.2)) {\n    return true;\n  }\n  let dateOne = new Date(timeOne);\n  let dateTwo = new Date(timeTwo);\n  if (timezone) {\n    dateOne = timezone.convertLocal(dateOne);\n    dateTwo = timezone.convertLocal(dateTwo);\n  }\n  let timeZoneOffset1 = 0;\n  let timeZoneOffset2 = 0;\n  if (!utc && unit != \"millisecond\") {\n    timeZoneOffset1 = dateOne.getTimezoneOffset();\n    dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\n    timeZoneOffset2 = dateTwo.getTimezoneOffset();\n    dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\n  }\n  let changed = false;\n  switch (unit) {\n    case \"year\":\n      if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n        changed = true;\n      }\n      break;\n    case \"month\":\n      if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n        changed = true;\n      } else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n        changed = true;\n      }\n      break;\n    case \"day\":\n      if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n        changed = true;\n      } else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\n        changed = true;\n      }\n      break;\n    case \"hour\":\n      if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\n        changed = true;\n      }\n      break;\n    case \"minute\":\n      if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\n        changed = true;\n      }\n      break;\n    case \"second\":\n      if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\n        changed = true;\n      }\n      break;\n    case \"millisecond\":\n      if (dateOne.getTime() != dateTwo.getTime()) {\n        changed = true;\n      }\n      break;\n  }\n  if (changed) {\n    return changed;\n  }\n  let nextUnit = getNextUnit(unit);\n  if (nextUnit) {\n    return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\n  } else {\n    return false;\n  }\n}\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\nexport function add(date, unit, count, utc, timezone) {\n  let timeZoneOffset = 0;\n  if (!utc && unit != \"millisecond\") {\n    timeZoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n      timeZoneOffset -= timezone.offsetUTC(date);\n    }\n    date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n  }\n  switch (unit) {\n    case \"day\":\n      let day = date.getUTCDate();\n      date.setUTCDate(day + count);\n      break;\n    case \"second\":\n      let seconds = date.getUTCSeconds();\n      date.setUTCSeconds(seconds + count);\n      break;\n    case \"millisecond\":\n      let milliseconds = date.getUTCMilliseconds();\n      date.setUTCMilliseconds(milliseconds + count);\n      break;\n    case \"hour\":\n      let hours = date.getUTCHours();\n      date.setUTCHours(hours + count);\n      break;\n    case \"minute\":\n      let minutes = date.getUTCMinutes();\n      date.setUTCMinutes(minutes + count);\n      break;\n    case \"year\":\n      let year = date.getUTCFullYear();\n      date.setUTCFullYear(year + count);\n      break;\n    case \"month\":\n      const endDays = date.getUTCDate();\n      const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\n      let month = date.getUTCMonth();\n      if (endDays > startDays) {\n        date.setUTCMonth(month + count, startDays);\n      } else {\n        date.setUTCMonth(month + count);\n      }\n      break;\n    case \"week\":\n      let wday = date.getUTCDate();\n      date.setUTCDate(wday + count * 7);\n      break;\n  }\n  if (!utc && unit != \"millisecond\") {\n    date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n    if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n      let newTimeZoneOffset = date.getTimezoneOffset();\n      if (timezone) {\n        newTimeZoneOffset += timezone.offsetUTC(date);\n      }\n      if (newTimeZoneOffset != timeZoneOffset) {\n        let diff = newTimeZoneOffset - timeZoneOffset;\n        date.setUTCMinutes(date.getUTCMinutes() + diff);\n        // solves issues if new time falls back to old time zone\n        if (date.getTimezoneOffset() != newTimeZoneOffset) {\n          date.setUTCMinutes(date.getUTCMinutes() - diff);\n        }\n      }\n    }\n  }\n  return date;\n}\n/**\r\n * @ignore\r\n */\nexport function roun(time, unit, count, root, firstTime) {\n  let firstDate;\n  if (firstTime != null) {\n    firstDate = new Date(firstTime);\n  }\n  return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\n}\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\n  if (!timezone || utc) {\n    let timeZoneOffset = 0;\n    if (!utc && unit != \"millisecond\") {\n      timeZoneOffset = date.getTimezoneOffset();\n      date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n    }\n    switch (unit) {\n      case \"day\":\n        let day = date.getUTCDate();\n        if (count > 1) {\n          //\tday = Math.floor(day / count) * count;\n          if (firstDate) {\n            firstDate = round(firstDate, \"day\", 1);\n            let difference = date.getTime() - firstDate.getTime();\n            let unitCount = Math.floor(difference / getDuration(\"day\") / count);\n            let duration = getDuration(\"day\", unitCount * count);\n            date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n          }\n        } else {\n          date.setUTCDate(day);\n        }\n        date.setUTCHours(0, 0, 0, 0);\n        break;\n      case \"second\":\n        let seconds = date.getUTCSeconds();\n        if (count > 1) {\n          seconds = Math.floor(seconds / count) * count;\n        }\n        date.setUTCSeconds(seconds, 0);\n        break;\n      case \"millisecond\":\n        if (count == 1) {\n          return date; // much better for perf!\n        }\n        let milliseconds = date.getUTCMilliseconds();\n        milliseconds = Math.floor(milliseconds / count) * count;\n        date.setUTCMilliseconds(milliseconds);\n        break;\n      case \"hour\":\n        let hours = date.getUTCHours();\n        if (count > 1) {\n          hours = Math.floor(hours / count) * count;\n        }\n        date.setUTCHours(hours, 0, 0, 0);\n        break;\n      case \"minute\":\n        let minutes = date.getUTCMinutes();\n        if (count > 1) {\n          minutes = Math.floor(minutes / count) * count;\n        }\n        date.setUTCMinutes(minutes, 0, 0);\n        break;\n      case \"month\":\n        let month = date.getUTCMonth();\n        if (count > 1) {\n          month = Math.floor(month / count) * count;\n        }\n        date.setUTCMonth(month, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        break;\n      case \"year\":\n        let year = date.getUTCFullYear();\n        if (count > 1) {\n          year = Math.floor(year / count) * count;\n        }\n        date.setUTCFullYear(year, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        break;\n      case \"week\":\n        if (count > 1) {\n          if (firstDate) {\n            firstDate = round(firstDate, \"week\", 1);\n            let difference = date.getTime() - firstDate.getTime();\n            let unitCount = Math.floor(difference / getDuration(\"week\") / count);\n            let duration = getDuration(\"week\", unitCount * count);\n            date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n          }\n        }\n        let wday = date.getUTCDate();\n        let weekDay = date.getUTCDay();\n        if (!$type.isNumber(firstDateOfWeek)) {\n          firstDateOfWeek = 1;\n        }\n        if (weekDay >= firstDateOfWeek) {\n          wday = wday - weekDay + firstDateOfWeek;\n        } else {\n          wday = wday - (7 + weekDay) + firstDateOfWeek;\n        }\n        date.setUTCDate(wday);\n        date.setUTCHours(0, 0, 0, 0);\n        break;\n    }\n    if (!utc && unit != \"millisecond\") {\n      date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n      if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n        let newTimeZoneOffset = date.getTimezoneOffset();\n        if (newTimeZoneOffset != timeZoneOffset) {\n          let diff = newTimeZoneOffset - timeZoneOffset;\n          date.setUTCMinutes(date.getUTCMinutes() + diff);\n        }\n      }\n    }\n    return date;\n  } else {\n    if (isNaN(date.getTime())) {\n      return date;\n    }\n    let initialTime = date.getTime();\n    let tzoffset = timezone.offsetUTC(date);\n    let timeZoneOffset = date.getTimezoneOffset();\n    let parsedDate = timezone.parseDate(date);\n    let year = parsedDate.year;\n    let month = parsedDate.month;\n    let day = parsedDate.day;\n    let hour = parsedDate.hour;\n    let minute = parsedDate.minute;\n    let second = parsedDate.second;\n    let millisecond = parsedDate.millisecond;\n    let weekday = parsedDate.weekday;\n    let offsetDif = tzoffset - timeZoneOffset;\n    switch (unit) {\n      case \"day\":\n        if (count > 1 && firstDate) {\n          firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\n          let difference = date.getTime() - firstDate.getTime();\n          let unitCount = Math.floor(difference / getDuration(\"day\") / count);\n          let duration = getDuration(\"day\", unitCount * count);\n          date.setTime(firstDate.getTime() + duration);\n          parsedDate = timezone.parseDate(date);\n          year = parsedDate.year;\n          month = parsedDate.month;\n          day = parsedDate.day;\n        }\n        hour = 0;\n        minute = offsetDif;\n        second = 0;\n        millisecond = 0;\n        break;\n      case \"second\":\n        minute += offsetDif;\n        if (count > 1) {\n          second = Math.floor(second / count) * count;\n        }\n        millisecond = 0;\n        break;\n      case \"millisecond\":\n        minute += offsetDif;\n        if (count > 1) {\n          millisecond = Math.floor(millisecond / count) * count;\n        }\n        break;\n      case \"hour\":\n        if (count > 1) {\n          hour = Math.floor(hour / count) * count;\n        }\n        minute = offsetDif;\n        second = 0;\n        millisecond = 0;\n        break;\n      case \"minute\":\n        if (count > 1) {\n          minute = Math.floor(minute / count) * count;\n        }\n        minute += offsetDif;\n        second = 0;\n        millisecond = 0;\n        break;\n      case \"month\":\n        if (count > 1) {\n          month = Math.floor(month / count) * count;\n        }\n        day = 1;\n        hour = 0;\n        minute = offsetDif;\n        second = 0;\n        millisecond = 0;\n        break;\n      case \"year\":\n        if (count > 1) {\n          year = Math.floor(year / count) * count;\n        }\n        month = 0;\n        day = 1;\n        hour = 0;\n        minute = offsetDif;\n        second = 0;\n        millisecond = 0;\n        break;\n      case \"week\":\n        if (!$type.isNumber(firstDateOfWeek)) {\n          firstDateOfWeek = 1;\n        }\n        if (weekday >= firstDateOfWeek) {\n          day = day - weekday + firstDateOfWeek;\n        } else {\n          day = day - (7 + weekday) + firstDateOfWeek;\n        }\n        hour = 0;\n        minute = offsetDif;\n        second = 0;\n        millisecond = 0;\n        break;\n    }\n    date = new Date(year, month, day, hour, minute, second, millisecond);\n    // fix to solve #101989\n    const newTime = date.getTime();\n    let hDuration = 3600000;\n    if (unit == \"hour\") {\n      hDuration = 3600000 * count;\n    }\n    if (newTime + hDuration <= initialTime) {\n      if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\n        date = new Date(newTime + hDuration);\n      }\n    }\n    // end of fix\n    let newTimeZoneOffset = date.getTimezoneOffset();\n    let newTzoffset = timezone.offsetUTC(date);\n    let newDiff = newTzoffset - newTimeZoneOffset;\n    if (newDiff != offsetDif) {\n      date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\n    }\n    return date;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function chooseInterval(index, duration, gridCount, intervals) {\n  let gridInterval = intervals[index];\n  let intervalDuration = getIntervalDuration(gridInterval);\n  let lastIndex = intervals.length - 1;\n  if (index >= lastIndex) {\n    return Object.assign({}, intervals[lastIndex]);\n  }\n  let count = Math.ceil(duration / intervalDuration);\n  if (duration < intervalDuration && index > 0) {\n    return Object.assign({}, intervals[index - 1]);\n  }\n  if (count <= gridCount) {\n    return Object.assign({}, intervals[index]);\n  } else {\n    if (index + 1 < intervals.length) {\n      return chooseInterval(index + 1, duration, gridCount, intervals);\n    } else {\n      return Object.assign({}, intervals[index]);\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function getUnitValue(date, unit) {\n  switch (unit) {\n    case \"day\":\n      return date.getDate();\n    case \"second\":\n      return date.getSeconds();\n    case \"millisecond\":\n      return date.getMilliseconds();\n    case \"hour\":\n      return date.getHours();\n    case \"minute\":\n      return date.getMinutes();\n    case \"month\":\n      return date.getMonth();\n    case \"year\":\n      return date.getFullYear();\n    case \"week\":\n      return $utils.getWeek(date);\n  }\n}\n", "import { __awaiter } from \"tslib\";\nimport { Component } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\n/**\r\n * A base class for all series.\r\n */\nexport class Series extends Component {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_aggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_dataProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_psi\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_pei\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_baseSeriesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A chart series belongs to.\r\n     */\n    Object.defineProperty(this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * List of bullets to use for the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n     */\n    Object.defineProperty(this, \"bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    /**\r\n     * A [[Container]] series' bullets are stored in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(this._root, {\n        width: p100,\n        height: p100,\n        position: \"absolute\"\n      })\n    });\n  }\n  _afterNew() {\n    this.valueFields.push(\"value\", \"customValue\");\n    super._afterNew();\n    this.setPrivate(\"customData\", {});\n    this._disposers.push(this.bullets.events.onAll(change => {\n      if (change.type === \"clear\") {\n        this._handleBullets(this.dataItems);\n      } else if (change.type === \"push\") {\n        this._handleBullets(this.dataItems);\n      } else if (change.type === \"setIndex\") {\n        this._handleBullets(this.dataItems);\n      } else if (change.type === \"insertIndex\") {\n        this._handleBullets(this.dataItems);\n      } else if (change.type === \"removeIndex\") {\n        this._handleBullets(this.dataItems);\n      } else if (change.type === \"moveIndex\") {\n        this._handleBullets(this.dataItems);\n      } else {\n        throw new Error(\"Unknown IListEvent type\");\n      }\n    }));\n  }\n  _dispose() {\n    this.bulletsContainer.dispose(); // can be in a different parent\n    super._dispose();\n  }\n  startIndex() {\n    let len = this.dataItems.length;\n    return Math.min(this.getPrivate(\"startIndex\", 0), len);\n  }\n  endIndex() {\n    let len = this.dataItems.length;\n    return Math.min(this.getPrivate(\"endIndex\", len), len);\n  }\n  _handleBullets(dataItems) {\n    $array.each(dataItems, dataItem => {\n      const bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, bullet => {\n          bullet.dispose();\n        });\n        dataItem.bullets = undefined;\n      }\n    });\n    this.markDirtyValues();\n  }\n  /**\r\n   * Looks up and returns a data item by its ID.\r\n   *\r\n   * @param   id  ID\r\n   * @return      Data item\r\n   */\n  getDataItemById(id) {\n    return $array.find(this.dataItems, dataItem => {\n      return dataItem.get(\"id\") == id;\n    });\n  }\n  _makeBullets(dataItem) {\n    if (this._shouldMakeBullet(dataItem)) {\n      dataItem.bullets = [];\n      this.bullets.each(bulletFunction => {\n        this._makeBullet(dataItem, bulletFunction);\n      });\n    }\n  }\n  _shouldMakeBullet(_dataItem) {\n    return true;\n  }\n  _makeBullet(dataItem, bulletFunction, index) {\n    const bullet = bulletFunction(this._root, this, dataItem);\n    if (bullet) {\n      bullet._index = index;\n      this._makeBulletReal(dataItem, bullet);\n    }\n    return bullet;\n  }\n  _makeBulletReal(dataItem, bullet) {\n    let sprite = bullet.get(\"sprite\");\n    if (sprite) {\n      sprite._setDataItem(dataItem);\n      sprite.setRaw(\"position\", \"absolute\");\n      this.bulletsContainer.children.push(sprite);\n    }\n    bullet.series = this;\n    dataItem.bullets.push(bullet);\n  }\n  /**\r\n   * Adds bullet directly to a data item.\r\n   *\r\n   * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n   * reference to a function.\r\n   *\r\n   * You should add Bullet instance, not a method like you do it on series.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n   * @since 5.6.0\r\n   *\r\n   * @param  dataItem  Target data item\r\n   * @param  bullet    Bullet instance\r\n   */\n  addBullet(dataItem, bullet) {\n    if (!dataItem.bullets) {\n      dataItem.bullets = [];\n    }\n    if (bullet) {\n      this._makeBulletReal(dataItem, bullet);\n    }\n  }\n  _clearDirty() {\n    super._clearDirty();\n    this._aggregatesCalculated = false;\n    this._baseSeriesDirty = false;\n    this._selectionAggregatesCalculated = false;\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    let startIndex = this.startIndex();\n    let endIndex = this.endIndex();\n    if (this.isDirty(\"name\")) {\n      this.updateLegendValue();\n    }\n    if (this.isDirty(\"heatRules\")) {\n      this._valuesDirty = true;\n    }\n    if (this.isPrivateDirty(\"baseValueSeries\")) {\n      const baseValueSeries = this.getPrivate(\"baseValueSeries\");\n      if (baseValueSeries) {\n        this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\n          this._baseSeriesDirty = true;\n          this.markDirtyValues();\n        }));\n      }\n    }\n    const calculateAggregates = this.get(\"calculateAggregates\");\n    if (calculateAggregates) {\n      if (this._valuesDirty && !this._dataProcessed) {\n        if (!this._aggregatesCalculated) {\n          this._calculateAggregates(0, this.dataItems.length);\n          this._aggregatesCalculated = true;\n          if (startIndex != 0) {\n            this._psi = undefined;\n          }\n        }\n      }\n      if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\n        if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n          // void\n        } else {\n          this._calculateAggregates(startIndex, endIndex);\n        }\n        this._selectionAggregatesCalculated = true;\n      }\n    }\n    if (this.isDirty(\"tooltip\")) {\n      let tooltip = this.get(\"tooltip\");\n      if (tooltip) {\n        tooltip.hide(0);\n        tooltip.set(\"tooltipTarget\", this);\n      }\n    }\n    if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n      let markerRectangle;\n      const legendDataItem = this.get(\"legendDataItem\");\n      if (legendDataItem) {\n        markerRectangle = legendDataItem.get(\"markerRectangle\");\n        if (markerRectangle) {\n          if (this.isVisible()) {\n            if (this.isDirty(\"stroke\")) {\n              let stroke = this.get(\"stroke\");\n              markerRectangle.set(\"stroke\", stroke);\n            }\n            if (this.isDirty(\"fill\")) {\n              let fill = this.get(\"fill\");\n              markerRectangle.set(\"fill\", fill);\n            }\n          }\n        }\n      }\n      this.updateLegendMarker(undefined);\n    }\n    if (this.bullets.length > 0) {\n      let startIndex = this.startIndex();\n      let endIndex = this.endIndex();\n      if (endIndex < this.dataItems.length) {\n        endIndex++;\n      }\n      for (let i = startIndex; i < endIndex; i++) {\n        let dataItem = this.dataItems[i];\n        if (!dataItem.bullets) {\n          this._makeBullets(dataItem);\n        }\n      }\n    }\n  }\n  _handleRemoved() {}\n  /**\r\n   * @ignore\r\n   */\n  _adjustStartIndex(index) {\n    return index;\n  }\n  _calculateAggregates(startIndex, endIndex) {\n    let fields = this._valueFields;\n    if (!fields) {\n      throw new Error(\"No value fields are set for the series.\");\n    }\n    const sum = {};\n    const absSum = {};\n    const count = {};\n    const low = {};\n    const high = {};\n    const open = {};\n    const close = {};\n    const average = {};\n    const previous = {};\n    $array.each(fields, key => {\n      sum[key] = 0;\n      absSum[key] = 0;\n      count[key] = 0;\n    });\n    $array.each(fields, key => {\n      let change = key + \"Change\";\n      let changePercent = key + \"ChangePercent\";\n      let changePrevious = key + \"ChangePrevious\";\n      let changePreviousPercent = key + \"ChangePreviousPercent\";\n      let changeSelection = key + \"ChangeSelection\";\n      let changeSelectionPercent = key + \"ChangeSelectionPercent\";\n      let openKey = \"valueY\";\n      if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\n        openKey = \"valueX\";\n      }\n      const baseValueSeries = this.getPrivate(\"baseValueSeries\");\n      const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\n      for (let i = adjustedStartIndex; i < endIndex; i++) {\n        const dataItem = this.dataItems[i];\n        if (dataItem) {\n          let value = dataItem.get(key);\n          if (value != null) {\n            count[key]++;\n            sum[key] += value;\n            absSum[key] += Math.abs(value);\n            average[key] = sum[key] / count[key];\n            if (low[key] > value || low[key] == null) {\n              low[key] = value;\n            }\n            if (high[key] < value || high[key] == null) {\n              high[key] = value;\n            }\n            close[key] = value;\n            if (open[key] == null) {\n              open[key] = value;\n              previous[key] = value;\n              if (baseValueSeries) {\n                open[openKey] = baseValueSeries._getBase(openKey);\n              }\n            }\n            if (startIndex === 0) {\n              dataItem.setRaw(change, value - open[openKey]);\n              dataItem.setRaw(changePercent, (value - open[openKey]) / open[openKey] * 100);\n            }\n            dataItem.setRaw(changePrevious, value - previous[openKey]);\n            dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n            dataItem.setRaw(changeSelection, value - open[openKey]);\n            dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n            previous[key] = value;\n          }\n        }\n      }\n      if (endIndex < this.dataItems.length - 1) {\n        const dataItem = this.dataItems[endIndex];\n        if (dataItem) {\n          let value = dataItem.get(key);\n          dataItem.setRaw(changePrevious, value - previous[openKey]);\n          dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n          dataItem.setRaw(changeSelection, value - open[openKey]);\n          dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n        }\n      }\n      if (startIndex > 0) {\n        startIndex--;\n      }\n      delete previous[key];\n      for (let i = startIndex; i < adjustedStartIndex; i++) {\n        const dataItem = this.dataItems[i];\n        if (dataItem) {\n          let value = dataItem.get(key);\n          if (previous[key] == null) {\n            previous[key] = value;\n          }\n          if (value != null) {\n            dataItem.setRaw(changePrevious, value - previous[openKey]);\n            dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n            dataItem.setRaw(changeSelection, value - open[openKey]);\n            dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n            previous[key] = value;\n          }\n        }\n      }\n    });\n    $array.each(fields, key => {\n      this.setPrivate(key + \"AverageSelection\", average[key]);\n      this.setPrivate(key + \"CountSelection\", count[key]);\n      this.setPrivate(key + \"SumSelection\", sum[key]);\n      this.setPrivate(key + \"AbsoluteSumSelection\", absSum[key]);\n      this.setPrivate(key + \"LowSelection\", low[key]);\n      this.setPrivate(key + \"HighSelection\", high[key]);\n      this.setPrivate(key + \"OpenSelection\", open[key]);\n      this.setPrivate(key + \"CloseSelection\", close[key]);\n    });\n    if (startIndex === 0 && endIndex === this.dataItems.length) {\n      $array.each(fields, key => {\n        this.setPrivate(key + \"Average\", average[key]);\n        this.setPrivate(key + \"Count\", count[key]);\n        this.setPrivate(key + \"Sum\", sum[key]);\n        this.setPrivate(key + \"AbsoluteSum\", absSum[key]);\n        this.setPrivate(key + \"Low\", low[key]);\n        this.setPrivate(key + \"High\", high[key]);\n        this.setPrivate(key + \"Open\", open[key]);\n        this.setPrivate(key + \"Close\", close[key]);\n      });\n    }\n  }\n  _updateChildren() {\n    super._updateChildren();\n    this._psi = this.startIndex();\n    this._pei = this.endIndex();\n    if (this.isDirty(\"visible\")) {\n      this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n    }\n    // Apply heat rules\n    const rules = this.get(\"heatRules\");\n    if (this._valuesDirty && rules && rules.length > 0) {\n      $array.each(rules, rule => {\n        const minValue = rule.minValue || this.getPrivate(rule.dataField + \"Low\") || 0;\n        const maxValue = rule.maxValue || this.getPrivate(rule.dataField + \"High\") || 0;\n        $array.each(rule.target._entities, target => {\n          const value = target.dataItem.get(rule.dataField);\n          if (!$type.isNumber(value)) {\n            if (rule.neutral) {\n              target.set(rule.key, rule.neutral);\n            }\n            const states = target.states;\n            if (states) {\n              const defaultState = states.lookup(\"default\");\n              if (defaultState && rule.neutral) {\n                defaultState.set(rule.key, rule.neutral);\n              }\n            }\n            if (!rule.customFunction) {\n              return;\n            }\n          }\n          if (rule.customFunction) {\n            rule.customFunction.call(this, target, minValue, maxValue, value);\n          } else {\n            let percent;\n            if (rule.logarithmic) {\n              percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / (Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E);\n            } else {\n              percent = (value - minValue) / (maxValue - minValue);\n            }\n            if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n              percent = 0.5;\n            }\n            // fixes problems if all values are the same\n            let propertyValue;\n            if ($type.isNumber(rule.min)) {\n              propertyValue = rule.min + (rule.max - rule.min) * percent;\n            } else if (rule.min instanceof Color) {\n              propertyValue = Color.interpolate(percent, rule.min, rule.max);\n            } else if (rule.min instanceof Percent) {\n              propertyValue = percentInterpolate(percent, rule.min, rule.max);\n            }\n            target.set(rule.key, propertyValue);\n            const states = target.states;\n            if (states) {\n              const defaultState = states.lookup(\"default\");\n              if (defaultState) {\n                defaultState.set(rule.key, propertyValue);\n              }\n            }\n          }\n        });\n      });\n    }\n    if (this.get(\"visible\")) {\n      let count = this.dataItems.length;\n      let startIndex = this.startIndex();\n      let endIndex = this.endIndex();\n      if (endIndex < count) {\n        endIndex++;\n      }\n      if (startIndex > 0) {\n        startIndex--;\n      }\n      for (let i = 0; i < startIndex; i++) {\n        this._hideBullets(this.dataItems[i]);\n      }\n      for (let i = startIndex; i < endIndex; i++) {\n        this._positionBullets(this.dataItems[i]);\n      }\n      for (let i = endIndex; i < count; i++) {\n        this._hideBullets(this.dataItems[i]);\n      }\n    }\n  }\n  _positionBullets(dataItem) {\n    if (dataItem.bullets) {\n      $array.each(dataItem.bullets, bullet => {\n        this._positionBullet(bullet);\n        const sprite = bullet.get(\"sprite\");\n        if (bullet.get(\"dynamic\")) {\n          if (sprite) {\n            sprite._markDirtyKey(\"fill\");\n            sprite.markDirtySize();\n          }\n          if (sprite instanceof Container) {\n            sprite.walkChildren(child => {\n              child._markDirtyKey(\"fill\");\n              child.markDirtySize();\n              if (child instanceof Label) {\n                child.text.markDirtyText();\n              }\n            });\n          }\n        }\n        if (sprite instanceof Label && sprite.get(\"populateText\")) {\n          sprite.text.markDirtyText();\n        }\n      });\n    }\n  }\n  _hideBullets(dataItem) {\n    if (dataItem.bullets) {\n      $array.each(dataItem.bullets, bullet => {\n        let sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite.setPrivate(\"visible\", false);\n        }\n      });\n    }\n  }\n  _positionBullet(_bullet) {}\n  _placeBulletsContainer(chart) {\n    chart.bulletsContainer.children.moveValue(this.bulletsContainer);\n  }\n  _removeBulletsContainer() {\n    const bulletsContainer = this.bulletsContainer;\n    if (bulletsContainer.parent) {\n      bulletsContainer.parent.children.removeValue(bulletsContainer);\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  disposeDataItem(dataItem) {\n    //super.disposeDataItem(dataItem); // does nothing\n    const bullets = dataItem.bullets;\n    if (bullets) {\n      $array.each(bullets, bullet => {\n        bullet.dispose();\n      });\n      dataItem.bullets = undefined;\n    }\n  }\n  _getItemReaderLabel() {\n    return \"\";\n  }\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  showDataItem(dataItem, duration) {\n    const _super = Object.create(null, {\n      showDataItem: {\n        get: () => super.showDataItem\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const promises = [_super.showDataItem.call(this, dataItem, duration)];\n      const bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, bullet => {\n          const sprite = bullet.get(\"sprite\");\n          if (sprite) {\n            promises.push(sprite.show(duration));\n          }\n        });\n      }\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  hideDataItem(dataItem, duration) {\n    const _super = Object.create(null, {\n      hideDataItem: {\n        get: () => super.hideDataItem\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const promises = [_super.hideDataItem.call(this, dataItem, duration)];\n      const bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, bullet => {\n          const sprite = bullet.get(\"sprite\");\n          if (sprite) {\n            promises.push(sprite.hide(duration));\n          }\n        });\n      }\n      yield Promise.all(promises);\n    });\n  }\n  _sequencedShowHide(show, duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.get(\"sequencedInterpolation\")) {\n        if (!$type.isNumber(duration)) {\n          duration = this.get(\"interpolationDuration\", 0);\n        }\n        if (duration > 0) {\n          const startIndex = this.startIndex();\n          const endIndex = this.endIndex();\n          yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\n            let realDuration = duration || 0;\n            if (i < startIndex - 10 || i > endIndex + 10) {\n              realDuration = 0;\n            }\n            //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n            let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n            yield $time.sleep(delay * (i - startIndex));\n            if (show) {\n              yield this.showDataItem(dataItem, realDuration);\n            } else {\n              yield this.hideDataItem(dataItem, realDuration);\n            }\n          })));\n        } else {\n          yield Promise.all($array.map(this.dataItems, dataItem => {\n            if (show) {\n              return this.showDataItem(dataItem, 0);\n            } else {\n              return this.hideDataItem(dataItem, 0);\n            }\n          }));\n        }\n      }\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateLegendValue(dataItem) {\n    if (dataItem) {\n      const legendDataItem = dataItem.get(\"legendDataItem\");\n      if (legendDataItem) {\n        const valueLabel = legendDataItem.get(\"valueLabel\");\n        if (valueLabel) {\n          const text = valueLabel.text;\n          let txt = \"\";\n          valueLabel._setDataItem(dataItem);\n          txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n          valueLabel.set(\"text\", txt);\n          text.markDirtyText();\n        }\n        const label = legendDataItem.get(\"label\");\n        if (label) {\n          const text = label.text;\n          let txt = \"\";\n          label._setDataItem(dataItem);\n          txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n          label.set(\"text\", txt);\n          text.markDirtyText();\n        }\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateLegendMarker(_dataItem) {}\n  _onHide() {\n    super._onHide();\n    const tooltip = this.getTooltip();\n    if (tooltip) {\n      tooltip.hide();\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  hoverDataItem(_dataItem) {}\n  /**\r\n   * @ignore\r\n   */\n  unhoverDataItem(_dataItem) {}\n  /**\r\n   * @ignore\r\n   */\n  _getBase(key) {\n    const dataItem = this.dataItems[this.startIndex()];\n    if (dataItem) {\n      return dataItem.get(key);\n    }\n    return 0;\n  }\n}\nObject.defineProperty(Series, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Series\"\n});\nObject.defineProperty(Series, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Component.classNames.concat([Series.className])\n});\n", "/** @ignore */ /** */\nimport * as $math from \"./Math\";\n/**\r\n * @ignore\r\n */\nexport function segmentedLine(display, segments) {\n  for (let s = 0, len = segments.length; s < len; s++) {\n    const groups = segments[s];\n    if (groups.length > 0) {\n      let firstGroup = groups[0];\n      if (firstGroup.length > 0) {\n        let firstPoint = firstGroup[0];\n        display.moveTo(firstPoint.x, firstPoint.y);\n        for (let g = 0, len = groups.length; g < len; g++) {\n          line(display, groups[g]);\n        }\n      }\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function line(display, points) {\n  for (let p = 0, len = points.length; p < len; p++) {\n    const point = points[p];\n    display.lineTo(point.x, point.y);\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function moveTo(display, point) {\n  display.moveTo(point.x, point.y);\n}\n/**\r\n * @ignore\r\n */\nexport function clear(display) {\n  display.clear();\n}\n/**\r\n * @ignore\r\n */\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\n  for (let s = 0, len = segments.length; s < len; s++) {\n    const groups = segments[s];\n    if (groups.length > 0) {\n      let firstGroup = groups[0];\n      if (firstGroup.length > 0) {\n        let firstPoint = firstGroup[0];\n        display.moveTo(firstPoint.x, firstPoint.y);\n        for (let g = 0, len = groups.length; g < len; g++) {\n          const points = groups[g];\n          if (points.length > 0) {\n            display.lineTo(points[0].x, points[0].y);\n          }\n          smoothedLine(display, points, tensionX, tensionY);\n        }\n      }\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function smoothedLine(display, points, tensionX, tensionY) {\n  for (let i = points.length - 1; i > 0; i--) {\n    let p0 = points[i];\n    let p1 = points[i - 1];\n    if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\n      points.splice(i - 1, 1);\n    }\n  }\n  if (points.length < 3 || tensionX >= 1 && tensionY >= 1) {\n    line(display, points);\n    return;\n  }\n  tensionX = 1 - tensionX + 0.00001;\n  tensionY = 1 - tensionY + 0.00001;\n  let first = points[0];\n  let last = points[points.length - 1];\n  let closed = false;\n  if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\n    closed = true;\n  }\n  // Can't moveTo here, as it wont be possible to have fill then.\n  let path = \"\";\n  for (let i = 0, len = points.length - 1; i < len; i++) {\n    let p0 = points[i - 1];\n    let p1 = points[i];\n    let p2 = points[i + 1];\n    let p3 = points[i + 2];\n    if (i === 0) {\n      if (closed) {\n        p0 = points[len - 2];\n      } else {\n        p0 = points[0];\n      }\n    } else if (i == len - 1) {\n      if (closed) {\n        p3 = points[1];\n      } else {\n        p3 = p2;\n      }\n    }\n    let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\n    let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\n    display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\n  }\n  return path;\n}\n", "import { Graphics } from \"./Graphics\";\nimport * as $draw from \"../util/Draw\";\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Line extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      const points = this.get(\"points\");\n      const segments = this.get(\"segments\");\n      if (points && points.length > 0) {\n        let point = points[0];\n        this._display.moveTo(point.x, point.y);\n        $draw.segmentedLine(this._display, [[points]]);\n      } else if (segments) {\n        $draw.segmentedLine(this._display, segments);\n      } else if (!this.get(\"draw\")) {\n        let w = this.width();\n        let h = this.height();\n        this._display.moveTo(0, 0);\n        this._display.lineTo(w, h);\n      }\n    }\n  }\n}\nObject.defineProperty(Line, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Line\"\n});\nObject.defineProperty(Line, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Line.className])\n});\n", "import { Text } from \"./Text\";\nimport * as $math from \"../util/Math\";\n/**\r\n * @ignore\r\n */\nexport class RadialText extends Text {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makeRadialText(\"\", this.textStyle)\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    this._display.clear();\n    if (this.isDirty(\"textType\")) {\n      this._display.textType = this.get(\"textType\");\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"radius\")) {\n      this._display.radius = this.get(\"radius\");\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"startAngle\")) {\n      this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"inside\")) {\n      this._display.inside = this.get(\"inside\");\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"orientation\")) {\n      this._display.orientation = this.get(\"orientation\");\n      this.markDirtyBounds();\n    }\n    if (this.isDirty(\"kerning\")) {\n      this._display.kerning = this.get(\"kerning\");\n      this.markDirtyBounds();\n    }\n  }\n}\nObject.defineProperty(RadialText, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"RadialText\"\n});\nObject.defineProperty(RadialText, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Text.classNames.concat([RadialText.className])\n});\n", "// import * as $object from \"../util/Object\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { Label } from \"./Label\";\nimport { RadialText } from \"./RadialText\";\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\nexport class RadialLabel extends Label {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_flipped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    this._textKeys.push(\"textType\", \"kerning\");\n    super._afterNew();\n  }\n  _makeText() {\n    this._text = this.children.push(RadialText.new(this._root, {}));\n  }\n  /**\r\n   * Returns base radius in pixels.\r\n   *\r\n   * @return Base radius\r\n   */\n  baseRadius() {\n    const radiusPrivate = this.getPrivate(\"radius\", 0);\n    const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\n    const baseRadius = this.get(\"baseRadius\", 0);\n    return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\n  }\n  /**\r\n   * Returns radius adjustment in pixels.\r\n   *\r\n   * @return Radius\r\n   */\n  radius() {\n    const inside = this.get(\"inside\", false);\n    return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\n  }\n  _updateChildren() {\n    super._updateChildren();\n    if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\n      const textType = this.get(\"textType\", \"adjusted\");\n      const inside = this.get(\"inside\", false);\n      const orientation = this.get(\"orientation\");\n      let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\n      this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\n      this._text.set(\"inside\", inside);\n      const sin = $math.sin(labelAngle);\n      const cos = $math.cos(labelAngle);\n      let baseRadius = this.baseRadius();\n      let radius = this.radius();\n      this._display.angle = 0;\n      if (textType == \"circular\") {\n        this.setAll({\n          paddingTop: 0,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0\n        });\n        this.setRaw(\"x\", undefined);\n        this.setRaw(\"y\", undefined);\n        // Circular labels are handled and positioned differently\n        this._text.set(\"orientation\", orientation);\n        this._text.set(\"radius\", radius);\n      } else {\n        if (baseRadius == 0) {\n          labelAngle = 0;\n          radius = 0;\n        }\n        // Positioning of radial/regular labels are teh same\n        let x = radius * cos;\n        let y = radius * sin;\n        if (textType == \"radial\") {\n          this.setRaw(\"x\", x);\n          this.setRaw(\"y\", y);\n          if (labelAngle < 90 || labelAngle > 270 || orientation != \"auto\") {\n            this._display.angle = labelAngle; // + 90;\n            this._flipped = false;\n          } else {\n            this._display.angle = labelAngle + 180;\n            this._flipped = true;\n          }\n          this._dirty.rotation = false;\n        } else if (textType == \"adjusted\") {\n          this.setRaw(\"centerX\", p50);\n          this.setRaw(\"centerY\", p50);\n          this.setRaw(\"x\", x);\n          this.setRaw(\"y\", y);\n        } else if (textType == \"regular\") {\n          this.setRaw(\"x\", x);\n          this.setRaw(\"y\", y);\n        }\n      }\n      this.markDirtyPosition();\n      this.markDirtyBounds();\n    }\n  }\n  _updatePosition() {\n    const textType = this.get(\"textType\", \"regular\");\n    const inside = this.get(\"inside\", false);\n    let dx = 0;\n    let dy = 0;\n    let labelAngle = this.get(\"labelAngle\", 0);\n    let bounds = this.localBounds();\n    let w = bounds.right - bounds.left;\n    let h = bounds.bottom - bounds.top;\n    if (textType == \"radial\") {\n      if (this._flipped) {\n        let centerX = this.get(\"centerX\");\n        if (centerX instanceof Percent) {\n          w = w * (1 - centerX.value * 2);\n        }\n        dx = w * $math.cos(labelAngle);\n        dy = w * $math.sin(labelAngle);\n      }\n    } else if (!inside && textType == \"adjusted\") {\n      dx = w / 2 * $math.cos(labelAngle);\n      dy = h / 2 * $math.sin(labelAngle);\n    }\n    this.setRaw(\"dx\", dx);\n    this.setRaw(\"dy\", dy);\n    super._updatePosition();\n  }\n  /**\r\n   * @ignore\r\n   */\n  get text() {\n    return this._text;\n  }\n}\nObject.defineProperty(RadialLabel, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"RadialLabel\"\n});\nObject.defineProperty(RadialLabel, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Label.classNames.concat([RadialLabel.className])\n});\n", "import { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container } from \"./Container\";\nimport { Graphics } from \"./Graphics\";\nimport { Button } from \"./Button\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\r\n */\nexport class Scrollbar extends Container {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * A thumb elment - a draggable square between the grips, used for panning\r\n     * the selection.\r\n     */\n    Object.defineProperty(this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._makeThumb()\n    });\n    /**\r\n     * Start grip button.\r\n     */\n    Object.defineProperty(this, \"startGrip\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._makeButton()\n    });\n    /**\r\n     * End grip button.\r\n     */\n    Object.defineProperty(this, \"endGrip\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._makeButton()\n    });\n    Object.defineProperty(this, \"_thumbBusy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_startDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_endDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_thumbDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_gripDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _addOrientationClass() {\n    this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", this._settings.orientation]);\n    if (!this._settings.background) {\n      this._settings.background = RoundedRectangle.new(this._root, {\n        themeTags: $utils.mergeTags(this._settings.themeTags, [\"main\", \"background\"])\n      });\n    }\n  }\n  _makeButton() {\n    return this.children.push(Button.new(this._root, {\n      themeTags: [\"resize\", \"button\", this.get(\"orientation\")],\n      icon: Graphics.new(this._root, {\n        themeTags: [\"icon\"]\n      })\n    }));\n  }\n  _makeThumb() {\n    return this.children.push(RoundedRectangle.new(this._root, {\n      themeTags: [\"thumb\", this.get(\"orientation\")]\n    }));\n  }\n  _handleAnimation(animation) {\n    if (animation) {\n      this._disposers.push(animation.events.on(\"stopped\", () => {\n        this.setPrivateRaw(\"isBusy\", false);\n        this._thumbBusy = false;\n      }));\n    }\n  }\n  _afterNew() {\n    this._addOrientationClass();\n    super._afterNew();\n    const startGrip = this.startGrip;\n    const endGrip = this.endGrip;\n    const thumb = this.thumb;\n    const background = this.get(\"background\");\n    if (background) {\n      this._disposers.push(background.events.on(\"click\", event => {\n        this.setPrivateRaw(\"isBusy\", true);\n        const point = this._display.toLocal(event.point);\n        const w = this.width();\n        const h = this.height();\n        const orientation = this.get(\"orientation\");\n        let newMiddle;\n        if (orientation == \"vertical\") {\n          newMiddle = (point.y - thumb.height() / 2) / h;\n        } else {\n          newMiddle = (point.x - thumb.width() / 2) / w;\n        }\n        let newCoordinate;\n        let key;\n        if (orientation == \"vertical\") {\n          newCoordinate = newMiddle * h;\n          key = \"y\";\n        } else {\n          newCoordinate = newMiddle * w;\n          key = \"x\";\n        }\n        const duration = this.get(\"animationDuration\", 0);\n        if (duration > 0) {\n          this._thumbBusy = true;\n          this._handleAnimation(this.thumb.animate({\n            key: key,\n            to: newCoordinate,\n            duration: duration,\n            easing: this.get(\"animationEasing\")\n          }));\n        } else {\n          this.thumb.set(key, newCoordinate);\n          this._root.events.once(\"frameended\", () => {\n            this.setPrivateRaw(\"isBusy\", false);\n          });\n        }\n      }));\n    }\n    this._disposers.push(thumb.events.on(\"dblclick\", event => {\n      if (!$utils.isLocalEvent(event.originalEvent, this)) {\n        return;\n      }\n      const duration = this.get(\"animationDuration\", 0);\n      const easing = this.get(\"animationEasing\");\n      this.animate({\n        key: \"start\",\n        to: 0,\n        duration: duration,\n        easing: easing\n      });\n      this.animate({\n        key: \"end\",\n        to: 1,\n        duration: duration,\n        easing: easing\n      });\n    }));\n    this._disposers.push(startGrip.events.on(\"pointerdown\", () => {\n      this.setPrivateRaw(\"isBusy\", true);\n      this._startDown = true;\n      this._gripDown = \"start\";\n    }));\n    this._disposers.push(endGrip.events.on(\"pointerdown\", () => {\n      this.setPrivateRaw(\"isBusy\", true);\n      this._endDown = true;\n      this._gripDown = \"end\";\n    }));\n    this._disposers.push(thumb.events.on(\"pointerdown\", () => {\n      this.setPrivateRaw(\"isBusy\", true);\n      this._thumbDown = true;\n      this._gripDown = undefined;\n    }));\n    this._disposers.push(startGrip.events.on(\"globalpointerup\", () => {\n      if (this._startDown) {\n        this.setPrivateRaw(\"isBusy\", false);\n        this._released();\n      }\n      this._startDown = false;\n    }));\n    this._disposers.push(endGrip.events.on(\"globalpointerup\", () => {\n      if (this._endDown) {\n        this.setPrivateRaw(\"isBusy\", false);\n        this._released();\n      }\n      this._endDown = false;\n    }));\n    this._disposers.push(thumb.events.on(\"globalpointerup\", () => {\n      if (this._thumbDown) {\n        this.setPrivateRaw(\"isBusy\", false);\n        this._released();\n      }\n      this._thumbDown = false;\n    }));\n    this._disposers.push(startGrip.on(\"x\", () => {\n      this._updateThumb();\n    }));\n    this._disposers.push(endGrip.on(\"x\", () => {\n      this._updateThumb();\n    }));\n    this._disposers.push(startGrip.on(\"y\", () => {\n      this._updateThumb();\n    }));\n    this._disposers.push(endGrip.on(\"y\", () => {\n      this._updateThumb();\n    }));\n    this._disposers.push(thumb.events.on(\"positionchanged\", () => {\n      this._updateGripsByThumb();\n    }));\n    if (this.get(\"orientation\") == \"vertical\") {\n      startGrip.set(\"x\", 0);\n      endGrip.set(\"x\", 0);\n      this._disposers.push(thumb.adapters.add(\"y\", value => {\n        return Math.max(Math.min(Number(value), this.height() - thumb.height()), 0);\n      }));\n      this._disposers.push(thumb.adapters.add(\"x\", _value => {\n        return this.width() / 2;\n      }));\n      this._disposers.push(startGrip.adapters.add(\"x\", _value => {\n        return this.width() / 2;\n      }));\n      this._disposers.push(endGrip.adapters.add(\"x\", _value => {\n        return this.width() / 2;\n      }));\n      this._disposers.push(startGrip.adapters.add(\"y\", value => {\n        return Math.max(Math.min(Number(value), this.height()), 0);\n      }));\n      this._disposers.push(endGrip.adapters.add(\"y\", value => {\n        return Math.max(Math.min(Number(value), this.height()), 0);\n      }));\n    } else {\n      startGrip.set(\"y\", 0);\n      endGrip.set(\"y\", 0);\n      this._disposers.push(thumb.adapters.add(\"x\", value => {\n        return Math.max(Math.min(Number(value), this.width() - thumb.width()), 0);\n      }));\n      this._disposers.push(thumb.adapters.add(\"y\", _value => {\n        return this.height() / 2;\n      }));\n      this._disposers.push(startGrip.adapters.add(\"y\", _value => {\n        return this.height() / 2;\n      }));\n      this._disposers.push(endGrip.adapters.add(\"y\", _value => {\n        return this.height() / 2;\n      }));\n      this._disposers.push(startGrip.adapters.add(\"x\", value => {\n        return Math.max(Math.min(Number(value), this.width()), 0);\n      }));\n      this._disposers.push(endGrip.adapters.add(\"x\", value => {\n        return Math.max(Math.min(Number(value), this.width()), 0);\n      }));\n    }\n  }\n  _updateChildren() {\n    super._updateChildren();\n    if (this.isDirty(\"end\") || this.isDirty(\"start\") || this._sizeDirty) {\n      this.updateGrips();\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n      const eventType = \"rangechanged\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this,\n          start: this.get(\"start\", 0),\n          end: this.get(\"end\", 1),\n          grip: this._gripDown\n        });\n      }\n    }\n  }\n  _released() {\n    const eventType = \"released\";\n    if (this.events.isEnabled(eventType)) {\n      this.events.dispatch(eventType, {\n        type: eventType,\n        target: this\n      });\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateGrips() {\n    const startGrip = this.startGrip;\n    const endGrip = this.endGrip;\n    const orientation = this.get(\"orientation\");\n    const height = this.height();\n    const width = this.width();\n    if (orientation == \"vertical\") {\n      startGrip.set(\"y\", height * this.get(\"start\", 0));\n      endGrip.set(\"y\", height * this.get(\"end\", 1));\n    } else {\n      startGrip.set(\"x\", width * this.get(\"start\", 0));\n      endGrip.set(\"x\", width * this.get(\"end\", 1));\n    }\n    const valueFunction = this.getPrivate(\"positionTextFunction\");\n    const from = Math.round(this.get(\"start\", 0) * 100);\n    const to = Math.round(this.get(\"end\", 0) * 100);\n    let fromValue;\n    let toValue;\n    if (valueFunction) {\n      fromValue = valueFunction.call(this, this.get(\"start\", 0));\n      toValue = valueFunction.call(this, this.get(\"end\", 0));\n    } else {\n      fromValue = from + \"%\";\n      toValue = to + \"%\";\n    }\n    startGrip.set(\"ariaLabel\", this._t(\"From %1\", undefined, fromValue));\n    startGrip.set(\"ariaValueNow\", \"\" + from);\n    startGrip.set(\"ariaValueText\", from + \"%\");\n    startGrip.set(\"ariaValueMin\", \"0\");\n    startGrip.set(\"ariaValueMax\", \"100\");\n    endGrip.set(\"ariaLabel\", this._t(\"To %1\", undefined, toValue));\n    endGrip.set(\"ariaValueNow\", \"\" + to);\n    endGrip.set(\"ariaValueText\", to + \"%\");\n    endGrip.set(\"ariaValueMin\", \"0\");\n    endGrip.set(\"ariaValueMax\", \"100\");\n  }\n  _updateThumb() {\n    const thumb = this.thumb;\n    const startGrip = this.startGrip;\n    const endGrip = this.endGrip;\n    const height = this.height();\n    const width = this.width();\n    let x0 = startGrip.x();\n    let x1 = endGrip.x();\n    let y0 = startGrip.y();\n    let y1 = endGrip.y();\n    let start = 0;\n    let end = 1;\n    if (this.get(\"orientation\") == \"vertical\") {\n      if ($type.isNumber(y0) && $type.isNumber(y1)) {\n        if (!this._thumbBusy && !thumb.isDragging()) {\n          thumb.set(\"height\", y1 - y0);\n          thumb.set(\"y\", y0);\n        }\n        start = y0 / height;\n        end = y1 / height;\n      }\n    } else {\n      if ($type.isNumber(x0) && $type.isNumber(x1)) {\n        if (!this._thumbBusy && !thumb.isDragging()) {\n          thumb.set(\"width\", x1 - x0);\n          thumb.set(\"x\", x0);\n        }\n        start = x0 / width;\n        end = x1 / width;\n      }\n    }\n    if (this.getPrivate(\"isBusy\") && (this.get(\"start\") != start || this.get(\"end\") != end)) {\n      this.set(\"start\", start);\n      this.set(\"end\", end);\n    }\n    const valueFunction = this.getPrivate(\"positionTextFunction\");\n    const from = Math.round(this.get(\"start\", 0) * 100);\n    const to = Math.round(this.get(\"end\", 0) * 100);\n    let fromValue;\n    let toValue;\n    if (valueFunction) {\n      fromValue = valueFunction.call(this, this.get(\"start\", 0));\n      toValue = valueFunction.call(this, this.get(\"end\", 0));\n    } else {\n      fromValue = from + \"%\";\n      toValue = to + \"%\";\n    }\n    thumb.set(\"ariaLabel\", this._t(\"From %1 to %2\", undefined, fromValue, toValue));\n    thumb.set(\"ariaValueNow\", \"\" + from);\n    thumb.set(\"ariaValueText\", from + \"%\");\n  }\n  _updateGripsByThumb() {\n    const thumb = this.thumb;\n    const startGrip = this.startGrip;\n    const endGrip = this.endGrip;\n    if (this.get(\"orientation\") == \"vertical\") {\n      const thumbSize = thumb.height();\n      startGrip.set(\"y\", thumb.y());\n      endGrip.set(\"y\", thumb.y() + thumbSize);\n    } else {\n      const thumbSize = thumb.width();\n      startGrip.set(\"x\", thumb.x());\n      endGrip.set(\"x\", thumb.x() + thumbSize);\n    }\n  }\n}\nObject.defineProperty(Scrollbar, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Scrollbar\"\n});\nObject.defineProperty(Scrollbar, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Scrollbar.className])\n});\n", "import { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n/**\r\n * A base class for all charts.\r\n */\nexport class Chart extends Container {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * A [[Container]] chart places its elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"chartContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {\n        width: p100,\n        height: p100,\n        interactiveChildren: false\n      }))\n    });\n    /**\r\n     * A [[Container]] chart places its bullets in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(this._root, {\n        interactiveChildren: false,\n        isMeasured: false,\n        position: \"absolute\",\n        width: p100,\n        height: p100\n      })\n    });\n  }\n}\nObject.defineProperty(Chart, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Chart\"\n});\nObject.defineProperty(Chart, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Chart.className])\n});\n", "import { Chart } from \"./Chart\";\nimport { Container } from \"../../core/render/Container\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\n/**\r\n * A base class for all series-based charts.\r\n */\nexport class SerialChart extends Chart {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * A [[Container]] where chart will store all series.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"seriesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(this._root, {\n        width: p100,\n        height: p100,\n        isMeasured: false\n      })\n    });\n    /**\r\n     * A list of chart's series.\r\n     */\n    Object.defineProperty(this, \"series\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListAutoDispose()\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    this._disposers.push(this.series);\n    const children = this.seriesContainer.children;\n    this._disposers.push(this.series.events.onAll(change => {\n      if (change.type === \"clear\") {\n        $array.each(change.oldValues, series => {\n          this._removeSeries(series);\n        });\n        const colors = this.get(\"colors\");\n        if (colors) {\n          colors.reset();\n        }\n        const patterns = this.get(\"patterns\");\n        if (patterns) {\n          patterns.reset();\n        }\n      } else if (change.type === \"push\") {\n        children.moveValue(change.newValue);\n        this._processSeries(change.newValue);\n      } else if (change.type === \"setIndex\") {\n        children.setIndex(change.index, change.newValue);\n        this._processSeries(change.newValue);\n      } else if (change.type === \"insertIndex\") {\n        children.insertIndex(change.index, change.newValue);\n        this._processSeries(change.newValue);\n      } else if (change.type === \"removeIndex\") {\n        this._removeSeries(change.oldValue);\n      } else if (change.type === \"moveIndex\") {\n        children.moveValue(change.value, change.newIndex);\n        this._processSeries(change.value);\n      } else if (change.type === \"swap\") {\n        const a = change.a;\n        const b = change.b;\n        const aIndex = this.series.indexOf(a);\n        const bIndex = this.series.indexOf(b);\n        children.moveValue(a, bIndex);\n        children.moveValue(b, aIndex);\n        this.series.each(series => {\n          this._processSeries(series);\n          series.markDirtyValues();\n        });\n      } else {\n        throw new Error(\"Unknown IListEvent type\");\n      }\n    }));\n  }\n  _processSeries(series) {\n    series.chart = this;\n    series._placeBulletsContainer(this);\n  }\n  _removeSeries(series) {\n    series._handleRemoved();\n    if (!series.isDisposed()) {\n      this.seriesContainer.children.removeValue(series);\n      series._removeBulletsContainer();\n    }\n  }\n}\nObject.defineProperty(SerialChart, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"SerialChart\"\n});\nObject.defineProperty(SerialChart, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Chart.classNames.concat([SerialChart.className])\n});\n", "import { Line } from \"./Line\";\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\nexport class Tick extends Line {}\nObject.defineProperty(Tick, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Tick\"\n});\nObject.defineProperty(Tick, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Line.classNames.concat([Tick.className])\n});\n", "import { Entity } from \"./Entity\";\nimport { Color } from \"./Color\";\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\nexport class ColorSet extends Entity {\n  //protected _currentPass: number = 0;\n  _afterNew() {\n    // Applying themes because color set will not have parent\n    super._afterNewApplyThemes();\n    this._dirty[\"colors\"] = false;\n  }\n  _beforeChanged() {\n    if (this.isDirty(\"colors\")) {\n      this.reset();\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  generateColors() {\n    this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\n    const pass = this.getPrivate(\"currentPass\");\n    const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\n    if (!this.getPrivate(\"numColors\")) {\n      this.setPrivate(\"numColors\", colors.length);\n    }\n    //const len = colors.length;\n    const len = this.getPrivate(\"numColors\");\n    //const start = len - this.getPrivate(\"numColors\")!;\n    const start = 0;\n    const passOptions = this.get(\"passOptions\");\n    const reuse = this.get(\"reuse\");\n    for (let i = start; i < len; i++) {\n      if (reuse) {\n        colors.push(colors[i]);\n      } else {\n        const hsl = colors[i].toHSL();\n        let h = hsl.h + (passOptions.hue || 0) * pass;\n        while (h > 1) h -= 1;\n        let s = hsl.s + (passOptions.saturation || 0) * pass;\n        //if (s > 1) s -= Math.floor(s);\n        if (s > 1) s = 1;\n        if (s < 0) s = 0;\n        let l = hsl.l + (passOptions.lightness || 0) * pass;\n        //if (l > 1) l -= Math.floor(l);\n        while (l > 1) l -= 1;\n        colors.push(Color.fromHSL(h, s, l));\n      }\n    }\n  }\n  /**\r\n   * Returns a [[Color]] at specific index.\r\n   *\r\n   * If there's no color at this index, a new color is generated.\r\n   *\r\n   * @param   index  Index\r\n   * @return         Color\r\n   */\n  getIndex(index) {\n    const colors = this.get(\"colors\", []);\n    const saturation = this.get(\"saturation\");\n    if (index >= colors.length) {\n      this.generateColors();\n      return this.getIndex(index);\n    }\n    return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\n  }\n  /**\r\n   * Returns next [[Color]] in the list.\r\n   *\r\n   * If the list is out of colors, new ones are generated dynamically.\r\n   */\n  next() {\n    let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n    this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n    return this.getIndex(currentStep);\n  }\n  /**\r\n   * Resets counter to the start of the list, so the next call for `next()` will\r\n   * return the first color.\r\n   */\n  reset() {\n    this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n    this.setPrivate(\"currentPass\", 0);\n  }\n}\nObject.defineProperty(ColorSet, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"ColorSet\"\n});\nObject.defineProperty(ColorSet, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([ColorSet.className])\n});\n", "import { Theme } from \"../core/Theme\";\nimport { p100, p50 } from \"../core/util/Percent\";\nimport { Color } from \"../core/util/Color\";\nimport { GridLayout } from \"../core/render/GridLayout\";\nimport * as $ease from \"../core/util/Ease\";\n/**\r\n * @ignore\r\n */\nexport function setColor(rule, key, ic, name) {\n  // TODO this shouldn't use get, figure out a better way\n  rule.set(key, ic.get(name));\n  ic.on(name, value => {\n    rule.set(key, value);\n  });\n}\n/**\r\n * @ignore\r\n */\nexport class DefaultTheme extends Theme {\n  setupDefaultRules() {\n    super.setupDefaultRules();\n    const language = this._root.language;\n    const ic = this._root.interfaceColors;\n    const horizontalLayout = this._root.horizontalLayout;\n    const verticalLayout = this._root.verticalLayout;\n    const r = this.rule.bind(this);\n    /**\r\n     * ========================================================================\r\n     * core\r\n     * ========================================================================\r\n     */\n    r(\"InterfaceColors\").setAll({\n      stroke: Color.fromHex(0xe5e5e5),\n      fill: Color.fromHex(0xf3f3f3),\n      primaryButton: Color.fromHex(0x6794dc),\n      primaryButtonHover: Color.fromHex(0x6771dc),\n      primaryButtonDown: Color.fromHex(0x68dc76),\n      primaryButtonActive: Color.fromHex(0x68dc76),\n      primaryButtonDisabled: Color.fromHex(0xdadada),\n      primaryButtonTextDisabled: Color.fromHex(0xffffff),\n      primaryButtonText: Color.fromHex(0xffffff),\n      primaryButtonStroke: Color.fromHex(0xffffff),\n      secondaryButton: Color.fromHex(0xd9d9d9),\n      secondaryButtonHover: Color.fromHex(0xa3a3a3),\n      secondaryButtonDown: Color.fromHex(0x8d8d8d),\n      secondaryButtonActive: Color.fromHex(0xe6e6e6),\n      secondaryButtonText: Color.fromHex(0x000000),\n      secondaryButtonStroke: Color.fromHex(0xffffff),\n      grid: Color.fromHex(0x000000),\n      background: Color.fromHex(0xffffff),\n      alternativeBackground: Color.fromHex(0x000000),\n      text: Color.fromHex(0x000000),\n      alternativeText: Color.fromHex(0xffffff),\n      disabled: Color.fromHex(0xadadad),\n      positive: Color.fromHex(0x50b300),\n      negative: Color.fromHex(0xb30000)\n    });\n    {\n      const rule = r(\"ColorSet\");\n      rule.setAll({\n        passOptions: {\n          hue: 0.05,\n          saturation: 0,\n          lightness: 0\n        },\n        colors: [Color.fromHex(0x67b7dc)],\n        step: 1,\n        //baseColor: Color.fromRGB(103, 183, 220),\n        //count: 20,\n        reuse: false,\n        startIndex: 0\n      });\n      rule.setPrivate(\"currentStep\", 0);\n      rule.setPrivate(\"currentPass\", 0);\n    }\n    r(\"Entity\").setAll({\n      stateAnimationDuration: 0,\n      stateAnimationEasing: $ease.out($ease.cubic)\n    });\n    r(\"Component\").setAll({\n      interpolationDuration: 0,\n      interpolationEasing: $ease.out($ease.cubic)\n    });\n    r(\"Sprite\").setAll({\n      visible: true,\n      scale: 1,\n      opacity: 1,\n      rotation: 0,\n      position: \"relative\",\n      tooltipX: p50,\n      tooltipY: p50,\n      tooltipPosition: \"fixed\",\n      isMeasured: true\n    });\n    r(\"Sprite\").states.create(\"default\", {\n      \"visible\": true,\n      opacity: 1\n    });\n    r(\"Container\").setAll({\n      interactiveChildren: true,\n      setStateOnChildren: false\n    });\n    r(\"Graphics\").setAll({\n      strokeWidth: 1\n    });\n    r(\"Chart\").setAll({\n      width: p100,\n      height: p100,\n      interactiveChildren: false\n    });\n    r(\"ZoomableContainer\").setAll({\n      width: p100,\n      height: p100,\n      wheelable: true,\n      pinchZoom: true,\n      maxZoomLevel: 32,\n      minZoomLevel: 1,\n      zoomStep: 2,\n      animationEasing: $ease.out($ease.cubic),\n      animationDuration: 600,\n      maxPanOut: 0.4\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: alignment\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\n      centerX: p50,\n      x: p50\n    });\n    r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\n      centerY: p50,\n      y: p50\n    });\n    r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\n      layout: horizontalLayout\n    });\n    r(\"Container\", [\"vertical\", \"layout\"]).setAll({\n      layout: verticalLayout\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: patterns\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Pattern\").setAll({\n      repetition: \"repeat\",\n      width: 50,\n      height: 50,\n      rotation: 0,\n      fillOpacity: 1\n    });\n    r(\"LinePattern\").setAll({\n      gap: 6,\n      colorOpacity: 1,\n      width: 49,\n      height: 49\n    });\n    r(\"RectanglePattern\").setAll({\n      gap: 6,\n      checkered: false,\n      centered: true,\n      maxWidth: 5,\n      maxHeight: 5,\n      width: 48,\n      height: 48,\n      strokeWidth: 0\n    });\n    r(\"CirclePattern\").setAll({\n      gap: 5,\n      checkered: false,\n      centered: false,\n      radius: 3,\n      strokeWidth: 0,\n      width: 45,\n      height: 45\n    });\n    r(\"GrainPattern\").setAll({\n      width: 200,\n      height: 200,\n      colors: [Color.fromHex(0x000000)],\n      size: 1,\n      horizontalGap: 0,\n      verticalGap: 0,\n      density: 1,\n      minOpacity: 0,\n      maxOpacity: 0.2\n    });\n    {\n      const rule = r(\"PatternSet\");\n      rule.setAll({\n        step: 1\n      });\n      setColor(rule, \"color\", ic, \"stroke\");\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: gradients\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"LinearGradient\").setAll({\n      rotation: 90\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: Legend\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Legend\").setAll({\n      fillField: \"fill\",\n      strokeField: \"stroke\",\n      nameField: \"name\",\n      layout: GridLayout.new(this._root, {}),\n      layer: 30,\n      clickTarget: \"itemContainer\"\n    });\n    // Class: Container\n    r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\n      paddingLeft: 5,\n      paddingRight: 5,\n      paddingBottom: 5,\n      paddingTop: 5,\n      layout: horizontalLayout,\n      setStateOnChildren: true,\n      interactiveChildren: false,\n      ariaChecked: true,\n      focusable: true,\n      ariaLabel: language.translate(\"Press ENTER to toggle\"),\n      role: \"checkbox\"\n    });\n    {\n      const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\n      rule.setAll({\n        fillOpacity: 0\n      });\n      setColor(rule, \"fill\", ic, \"background\");\n    }\n    r(\"Container\", [\"legend\", \"marker\"]).setAll({\n      setStateOnChildren: true,\n      centerY: p50,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingTop: 0,\n      width: 18,\n      height: 18\n    });\n    r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\n      width: p100,\n      height: p100,\n      cornerRadiusBL: 3,\n      cornerRadiusTL: 3,\n      cornerRadiusBR: 3,\n      cornerRadiusTR: 3\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\n      setColor(rule, \"fill\", ic, \"disabled\");\n      setColor(rule, \"stroke\", ic, \"disabled\");\n    }\n    r(\"Label\", [\"legend\", \"label\"]).setAll({\n      centerY: p50,\n      marginLeft: 5,\n      paddingRight: 0,\n      paddingLeft: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      populateText: true\n    });\n    {\n      const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\n      setColor(rule, \"fill\", ic, \"disabled\");\n    }\n    r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\n      centerY: p50,\n      marginLeft: 5,\n      paddingRight: 0,\n      paddingLeft: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      width: 50,\n      centerX: p100,\n      populateText: true\n    });\n    {\n      const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\n      setColor(rule, \"fill\", ic, \"disabled\");\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: HeatLegend\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"HeatLegend\").setAll({\n      stepCount: 1\n    });\n    r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\n      cornerRadiusTR: 0,\n      cornerRadiusBR: 0,\n      cornerRadiusTL: 0,\n      cornerRadiusBL: 0\n    });\n    r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\n      height: p100,\n      width: 15\n    });\n    r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\n      width: p100,\n      height: 15\n    });\n    r(\"HeatLegend\", [\"vertical\"]).setAll({\n      height: p100\n    });\n    r(\"HeatLegend\", [\"horizontal\"]).setAll({\n      width: p100\n    });\n    r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\n      paddingLeft: 5,\n      paddingRight: 5,\n      paddingTop: 5,\n      paddingBottom: 5\n    });\n    r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\n      paddingLeft: 5,\n      paddingRight: 5,\n      paddingTop: 5,\n      paddingBottom: 5\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: Labels\r\n     * ------------------------------------------------------------------------\r\n     */\n    {\n      const rule = r(\"Label\");\n      rule.setAll({\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 10,\n        paddingRight: 10,\n        fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n        fontSize: \"1em\",\n        populateText: false\n      });\n      setColor(rule, \"fill\", ic, \"text\");\n    }\n    r(\"RadialLabel\").setAll({\n      textType: \"regular\",\n      centerY: p50,\n      centerX: p50,\n      inside: false,\n      radius: 0,\n      baseRadius: p100,\n      orientation: \"auto\",\n      textAlign: \"center\"\n    });\n    r(\"EditableLabel\").setAll({\n      editOn: \"click\",\n      //setStateOnChildren: true,\n      themeTags: [\"editablelabel\"],\n      multiLine: true\n    });\n    r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\n      fillOpacity: 0,\n      fill: Color.fromHex(0x000000),\n      cornerRadiusBL: 3,\n      cornerRadiusBR: 3,\n      cornerRadiusTL: 3,\n      cornerRadiusTR: 3,\n      strokeOpacity: 0,\n      stroke: Color.fromHex(0x000000)\n    });\n    {\n      r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\n        strokeOpacity: 0.2\n      });\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: Elements and shapes\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"RoundedRectangle\").setAll({\n      cornerRadiusTL: 8,\n      cornerRadiusBL: 8,\n      cornerRadiusTR: 8,\n      cornerRadiusBR: 8\n    });\n    r(\"PointedRectangle\").setAll({\n      pointerBaseWidth: 15,\n      pointerLength: 10,\n      cornerRadius: 8\n    });\n    r(\"Slice\").setAll({\n      shiftRadius: 0,\n      dRadius: 0,\n      dInnerRadius: 0\n    });\n    {\n      const rule = r(\"Tick\");\n      rule.setAll({\n        strokeOpacity: .15,\n        isMeasured: false,\n        length: 4.5,\n        position: \"absolute\",\n        crisp: true\n      });\n      setColor(rule, \"stroke\", ic, \"grid\");\n    }\n    r(\"Bullet\").setAll({\n      locationX: 0.5,\n      locationY: 0.5\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: Tooltip\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Tooltip\").setAll({\n      position: \"absolute\",\n      getFillFromSprite: true,\n      getStrokeFromSprite: false,\n      autoTextColor: true,\n      paddingTop: 9,\n      paddingBottom: 8,\n      paddingLeft: 10,\n      paddingRight: 10,\n      marginBottom: 5,\n      pointerOrientation: \"vertical\",\n      centerX: p50,\n      centerY: p50,\n      animationEasing: $ease.out($ease.cubic),\n      exportable: false\n      //layer: 100\n    });\n    r(\"Polygon\").setAll({\n      animationEasing: $ease.out($ease.cubic)\n    });\n    {\n      const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\n      rule.setAll({\n        strokeOpacity: 0.9,\n        cornerRadius: 4,\n        pointerLength: 4,\n        pointerBaseWidth: 8,\n        fillOpacity: 0.9,\n        stroke: Color.fromHex(0xffffff)\n      });\n    }\n    {\n      const rule = r(\"Label\", [\"tooltip\"]);\n      rule.setAll({\n        role: \"tooltip\",\n        populateText: true,\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingLeft: 0,\n        paddingBottom: 0\n      });\n      setColor(rule, \"fill\", ic, \"alternativeText\");\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: Button\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Button\").setAll({\n      paddingTop: 8,\n      paddingBottom: 8,\n      paddingLeft: 10,\n      paddingRight: 10,\n      interactive: true,\n      layout: horizontalLayout,\n      interactiveChildren: false,\n      setStateOnChildren: true,\n      focusable: true\n    });\n    r(\"Button\").states.create(\"hover\", {});\n    r(\"Button\").states.create(\"down\", {\n      stateAnimationDuration: 0\n    });\n    r(\"Button\").states.create(\"active\", {});\n    r(\"Button\").states.create(\"disabled\", {\n      forceInactive: true\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\n      setColor(rule, \"fill\", ic, \"primaryButton\");\n      setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\n      setColor(rule, \"fill\", ic, \"primaryButtonHover\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", {\n        stateAnimationDuration: 0\n      });\n      setColor(rule, \"fill\", ic, \"primaryButtonDown\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\n      setColor(rule, \"fill\", ic, \"primaryButtonActive\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\n      setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\n    }\n    {\n      const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\n      setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n    }\n    {\n      const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\n      setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n    }\n    {\n      const rule = r(\"Graphics\", [\"button\", \"icon\"]);\n      rule.setAll({\n        forceInactive: true\n      });\n      setColor(rule, \"stroke\", ic, \"primaryButtonText\");\n    }\n    {\n      const rule = r(\"Label\", [\"button\"]);\n      setColor(rule, \"fill\", ic, \"primaryButtonText\");\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * charts/xy: ZoomOutButton\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Button\", [\"zoom\"]).setAll({\n      paddingTop: 18,\n      paddingBottom: 18,\n      paddingLeft: 12,\n      paddingRight: 12,\n      centerX: 46,\n      centerY: -10,\n      y: 0,\n      x: p100,\n      role: \"button\",\n      ariaLabel: language.translate(\"Zoom Out\"),\n      layer: 30\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\n      rule.setAll({\n        cornerRadiusBL: 40,\n        cornerRadiusBR: 40,\n        cornerRadiusTL: 40,\n        cornerRadiusTR: 40\n      });\n      setColor(rule, \"fill\", ic, \"primaryButton\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\n      setColor(rule, \"fill\", ic, \"primaryButtonHover\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", {\n        stateAnimationDuration: 0\n      });\n      setColor(rule, \"fill\", ic, \"primaryButtonDown\");\n    }\n    {\n      const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\n      rule.setAll({\n        crisp: true,\n        strokeOpacity: 0.7,\n        draw: display => {\n          display.moveTo(0, 0);\n          display.lineTo(12, 0);\n        }\n      });\n      setColor(rule, \"stroke\", ic, \"primaryButtonText\");\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: ResizeButton\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Button\", [\"resize\"]).setAll({\n      paddingTop: 9,\n      paddingBottom: 9,\n      paddingLeft: 13,\n      paddingRight: 13,\n      draggable: true,\n      centerX: p50,\n      centerY: p50,\n      position: \"absolute\",\n      role: \"slider\",\n      ariaValueMin: \"0\",\n      ariaValueMax: \"100\",\n      ariaLabel: language.translate(\"Use up and down arrows to move selection\")\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\n      rule.setAll({\n        cornerRadiusBL: 40,\n        cornerRadiusBR: 40,\n        cornerRadiusTL: 40,\n        cornerRadiusTR: 40\n      });\n      setColor(rule, \"fill\", ic, \"secondaryButton\");\n      setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\n      setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", {\n        stateAnimationDuration: 0\n      });\n      setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n    }\n    {\n      const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\n      rule.setAll({\n        interactive: false,\n        crisp: true,\n        strokeOpacity: 0.5,\n        draw: display => {\n          display.moveTo(0, 0.5);\n          display.lineTo(0, 12.5);\n          display.moveTo(4, 0.5);\n          display.lineTo(4, 12.5);\n        }\n      });\n      setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\n    }\n    r(\"Button\", [\"resize\", \"vertical\"]).setAll({\n      rotation: 90,\n      cursorOverStyle: \"ns-resize\"\n    });\n    r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\n      cursorOverStyle: \"ew-resize\"\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: PlayButton\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Button\", [\"play\"]).setAll({\n      paddingTop: 13,\n      paddingBottom: 13,\n      paddingLeft: 14,\n      paddingRight: 14,\n      ariaLabel: language.translate(\"Play\"),\n      toggleKey: \"active\"\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\n      rule.setAll({\n        strokeOpacity: 0.5,\n        cornerRadiusBL: 100,\n        cornerRadiusBR: 100,\n        cornerRadiusTL: 100,\n        cornerRadiusTR: 100\n      });\n      setColor(rule, \"fill\", ic, \"primaryButton\");\n    }\n    {\n      const rule = r(\"Graphics\", [\"play\", \"icon\"]);\n      rule.setAll({\n        stateAnimationDuration: 0,\n        dx: 1,\n        draw: display => {\n          display.moveTo(0, -5);\n          display.lineTo(8, 0);\n          display.lineTo(0, 5);\n          display.lineTo(0, -5);\n        }\n      });\n      setColor(rule, \"fill\", ic, \"primaryButtonText\");\n    }\n    r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\n      stateAnimationDuration: 0\n    });\n    r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\n      stateAnimationDuration: 0,\n      draw: display => {\n        display.moveTo(-4, -5);\n        display.lineTo(-1, -5);\n        display.lineTo(-1, 5);\n        display.lineTo(-4, 5);\n        display.lineTo(-4, -5);\n        display.moveTo(4, -5);\n        display.lineTo(1, -5);\n        display.lineTo(1, 5);\n        display.lineTo(4, 5);\n        display.lineTo(4, -5);\n      }\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: SwitchButton\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Button\", [\"switch\"]).setAll({\n      paddingTop: 4,\n      paddingBottom: 4,\n      paddingLeft: 4,\n      paddingRight: 4,\n      ariaLabel: language.translate(\"Press ENTER to toggle\"),\n      toggleKey: \"active\",\n      width: 40,\n      height: 24,\n      layout: null\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\n      rule.setAll({\n        strokeOpacity: 0.5,\n        cornerRadiusBL: 100,\n        cornerRadiusBR: 100,\n        cornerRadiusTL: 100,\n        cornerRadiusTR: 100\n      });\n      setColor(rule, \"fill\", ic, \"primaryButton\");\n    }\n    {\n      const rule = r(\"Circle\", [\"switch\", \"icon\"]);\n      rule.setAll({\n        radius: 8,\n        centerY: 0,\n        centerX: 0,\n        dx: 0\n      });\n      setColor(rule, \"fill\", ic, \"primaryButtonText\");\n    }\n    r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\n      dx: 16\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * core: Scrollbar\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Scrollbar\").setAll({\n      start: 0,\n      end: 1,\n      layer: 30,\n      animationEasing: $ease.out($ease.cubic)\n    });\n    r(\"Scrollbar\", [\"vertical\"]).setAll({\n      marginRight: 13,\n      marginLeft: 13,\n      minWidth: 12,\n      height: p100\n    });\n    r(\"Scrollbar\", [\"horizontal\"]).setAll({\n      marginTop: 13,\n      marginBottom: 13,\n      minHeight: 12,\n      width: p100\n    });\n    this.rule(\"Button\", [\"scrollbar\"]).setAll({\n      exportable: false\n    });\n    {\n      const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\n      rule.setAll({\n        cornerRadiusTL: 8,\n        cornerRadiusBL: 8,\n        cornerRadiusTR: 8,\n        cornerRadiusBR: 8,\n        fillOpacity: 0.8\n      });\n      setColor(rule, \"fill\", ic, \"fill\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\n      rule.setAll({\n        role: \"slider\",\n        ariaLive: \"polite\",\n        position: \"absolute\",\n        draggable: true\n      });\n      setColor(rule, \"fill\", ic, \"secondaryButton\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\n      setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", {\n        stateAnimationDuration: 0\n      });\n      setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n    }\n    r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\n      x: p50,\n      width: p100,\n      centerX: p50,\n      ariaLabel: language.translate(\"Use up and down arrows to move selection\")\n    });\n    r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\n      y: p50,\n      centerY: p50,\n      height: p100,\n      ariaLabel: language.translate(\"Use left and right arrows to move selection\")\n    });\n    // @todo: is this needed? used to be \"ContentScrollbar\"\n    // r(\"Scrollbar\", [\"content?\"]).setAll({\n    // \tmarginRight: 0,\n    // \tmarginLeft: 5,\n    // \tlayer: 5\n    // });\n    /**\r\n     * ========================================================================\r\n     * charts/xy\r\n     * ========================================================================\r\n     *\r\n     * This needs to be in DefaultTheme because it's the only theme that is\r\n     * automatically applied to Root, and tooltips different ancestors\r\n     * than actual charts using them.\r\n     */\n    {\n      const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\n      rule.setAll({\n        cornerRadius: 0\n      });\n      setColor(rule, \"fill\", ic, \"alternativeBackground\");\n    }\n    r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\n      role: undefined\n    });\n    r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\n      textAlign: \"right\"\n    });\n    r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\n      textAlign: \"left\"\n    });\n    r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\n      textAlign: \"center\"\n    });\n    r(\"Tooltip\", [\"categoryaxis\"]).setAll({\n      labelText: \"{category}\"\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Shapes\r\n     * ------------------------------------------------------------------------\r\n     */\n    // Class: Graphics\n    r(\"Star\").setAll({\n      spikes: 5,\n      innerRadius: 5,\n      radius: 10\n    });\n    // STOCK\n    r(\"Tooltip\", [\"stock\"]).setAll({\n      paddingTop: 6,\n      paddingBottom: 5,\n      paddingLeft: 7,\n      paddingRight: 7\n    });\n    r(\"Tooltip\", ['indicator']).setAll({\n      forceHidden: true\n    });\n    r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\n      pointerLength: 0,\n      pointerBaseWidth: 0,\n      cornerRadius: 3\n    });\n    r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\n      fontSize: \"0.8em\"\n    });\n    // resizer\n    r(\"SpriteResizer\").setAll({\n      rotationStep: 10,\n      isMeasured: false\n    });\n    {\n      const rule = r(\"Container\", [\"resizer\", \"grip\"]);\n      rule.states.create(\"hover\", {});\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\n      rule.setAll({\n        strokeOpacity: 0.7,\n        strokeWidth: 1,\n        fillOpacity: 1,\n        width: 12,\n        height: 12\n      });\n      setColor(rule, \"fill\", ic, \"background\");\n      setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n    }\n    {\n      const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\n      rule.setAll({\n        strokeOpacity: 0,\n        fillOpacity: 0,\n        width: 20,\n        height: 20\n      });\n      rule.states.create(\"hover\", {\n        fillOpacity: 0.3\n      });\n      setColor(rule, \"fill\", ic, \"alternativeBackground\");\n    }\n    r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\n      cornerRadiusBL: 0,\n      cornerRadiusBR: 0,\n      cornerRadiusTL: 0,\n      cornerRadiusTR: 0\n    });\n    r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\n      cornerRadiusBL: 0,\n      cornerRadiusBR: 0,\n      cornerRadiusTL: 0,\n      cornerRadiusTR: 0\n    });\n    {\n      const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\n      rule.setAll({\n        strokeDasharray: [2, 2],\n        strokeOpacity: 0.5,\n        strokeWidth: 1\n      });\n      setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n    }\n    r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\n      x: p50,\n      y: p50,\n      draw: display => {\n        display.moveTo(-4, 0);\n        display.lineTo(4, 0);\n        display.moveTo(0, -4);\n        display.lineTo(0, 4);\n      }\n    });\n    r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\n      x: p50,\n      y: p50,\n      draw: display => {\n        display.moveTo(-4, 0);\n        display.lineTo(4, 0);\n      }\n    });\n    r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\n      x: p50,\n      y: p50,\n      svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\n    });\n    r(\"Button\", [\"zoomtools\"]).setAll({\n      marginTop: 1,\n      marginBottom: 2\n    });\n    r(\"ZoomTools\").setAll({\n      x: p100,\n      centerX: p100,\n      y: p100,\n      centerY: p100,\n      paddingRight: 10,\n      paddingBottom: 10\n    });\n  }\n}\n", "export default function (x) {\n  return function constant() {\n    return x;\n  };\n}", "export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}", "const pi = Math.PI,\n  tau = 2 * pi,\n  epsilon = 1e-6,\n  tauEpsilon = tau - epsilon;\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function (strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 =\n    // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n    let x0 = this._x1,\n      y0 = this._y1,\n      x21 = x2 - x1,\n      y21 = y2 - y1,\n      x01 = x0 - x1,\n      y01 = y0 - y1,\n      l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ;\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n        y20 = y2 - y0,\n        l21_2 = x21 * x21 + y21 * y21,\n        l20_2 = x20 * x20 + y20 * y20,\n        l21 = Math.sqrt(l21_2),\n        l01 = Math.sqrt(l01_2),\n        l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n        t01 = l / l01,\n        t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n    let dx = r * Math.cos(a0),\n      dy = r * Math.sin(a0),\n      x0 = x + dx,\n      y0 = y + dy,\n      cw = 1 ^ ccw,\n      da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\nexport function path() {\n  return new Path();\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}", "import { Path } from \"d3-path\";\nexport function withPath(shape) {\n  let digits = 3;\n  shape.digits = function (_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n  return () => new Path(digits);\n}", "import constant from \"./constant.js\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math.js\";\nimport { withPath } from \"./path.js\";\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n    y10 = y1 - y0,\n    x32 = x3 - x2,\n    y32 = y3 - y2,\n    t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n    y01 = y0 - y1,\n    lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n    ox = lo * y01,\n    oy = -lo * x01,\n    x11 = x0 + ox,\n    y11 = y0 + oy,\n    x10 = x1 + ox,\n    y10 = y1 + oy,\n    x00 = (x11 + x10) / 2,\n    y00 = (y11 + y10) / 2,\n    dx = x10 - x11,\n    dy = y10 - y11,\n    d2 = dx * dx + dy * dy,\n    r = r1 - rc,\n    D = x11 * y10 - x10 * y11,\n    d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n    cx0 = (D * dy - dx * d) / d2,\n    cy0 = (-D * dx - dy * d) / d2,\n    cx1 = (D * dy + dx * d) / d2,\n    cy1 = (-D * dx + dy * d) / d2,\n    dx0 = cx0 - x00,\n    dy0 = cy0 - y00,\n    dx1 = cx1 - x00,\n    dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\nexport default function () {\n  var innerRadius = arcInnerRadius,\n    outerRadius = arcOuterRadius,\n    cornerRadius = constant(0),\n    padRadius = null,\n    startAngle = arcStartAngle,\n    endAngle = arcEndAngle,\n    padAngle = arcPadAngle,\n    context = null,\n    path = withPath(arc);\n  function arc() {\n    var buffer,\n      r,\n      r0 = +innerRadius.apply(this, arguments),\n      r1 = +outerRadius.apply(this, arguments),\n      a0 = startAngle.apply(this, arguments) - halfPi,\n      a1 = endAngle.apply(this, arguments) - halfPi,\n      da = abs(a1 - a0),\n      cw = a1 > a0;\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n        a11 = a1,\n        a00 = a0,\n        a10 = a1,\n        da0 = da,\n        da1 = da,\n        ap = padAngle.apply(this, arguments) / 2,\n        rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n        rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n        rc0 = rc,\n        rc1 = rc,\n        t0,\n        t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n          p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n      var x01 = r1 * cos(a01),\n        y01 = r1 * sin(a01),\n        x10 = r0 * cos(a10),\n        y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n          y11 = r1 * sin(a11),\n          x00 = r0 * cos(a00),\n          y00 = r0 * sin(a00),\n          oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n      a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n  return arc;\n}", "export var slice = Array.prototype.slice;\nexport default function (x) {\n  return typeof x === \"object\" && \"length\" in x ? x // Array, TypedArray, NodeList, array-like\n  : Array.from(x); // Map, Set, iterable, string, or anything else\n}", "function Linear(context) {\n  this._context = context;\n}\nLinear.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n      // falls through\n      default:\n        this._context.lineTo(x, y);\n        break;\n    }\n  }\n};\nexport default function (context) {\n  return new Linear(context);\n}", "export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}", "import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { withPath } from \"./path.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function (x, y) {\n  var defined = constant(true),\n    context = null,\n    curve = curveLinear,\n    output = null,\n    path = withPath(line);\n  x = typeof x === \"function\" ? x : x === undefined ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : y === undefined ? pointY : constant(y);\n  function line(data) {\n    var i,\n      n = (data = array(data)).length,\n      d,\n      defined0 = false,\n      buffer;\n    if (context == null) output = curve(buffer = path());\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n  return line;\n}", "import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { withPath } from \"./path.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function (x0, y0, y1) {\n  var x1 = null,\n    defined = constant(true),\n    context = null,\n    curve = curveLinear,\n    output = null,\n    path = withPath(area);\n  x0 = typeof x0 === \"function\" ? x0 : x0 === undefined ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : y0 === undefined ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : y1 === undefined ? pointY : constant(+y1);\n  function area(data) {\n    var i,\n      j,\n      k,\n      n = (data = array(data)).length,\n      d,\n      defined0 = false,\n      buffer,\n      x0z = new Array(n),\n      y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n  return area;\n}", "export function point(that, x, y) {\n  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);\n}\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinal.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n        break;\n      case 3:\n        point(this, this._x1, this._y1);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        this._x1 = x, this._y1 = y;\n        break;\n      case 2:\n        this._point = 3;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0);", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\nStep.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n      // falls through\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n            this._context.lineTo(x1, this._y);\n            this._context.lineTo(x1, y);\n          }\n          break;\n        }\n    }\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}", "import curveLinear from \"./linear.js\";\nexport var curveRadialLinear = curveRadial(curveLinear);\nfunction Radial(curve) {\n  this._curve = curve;\n}\nRadial.prototype = {\n  areaStart: function () {\n    this._curve.areaStart();\n  },\n  areaEnd: function () {\n    this._curve.areaEnd();\n  },\n  lineStart: function () {\n    this._curve.lineStart();\n  },\n  lineEnd: function () {\n    this._curve.lineEnd();\n  },\n  point: function (a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\nexport default function curveRadial(curve) {\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n  radial._curve = curve;\n  return radial;\n}", "import { min, sqrt } from \"../math.js\";\nconst sqrt3 = sqrt(3);\nexport default {\n  draw(context, size) {\n    const r = sqrt(size + min(size / 28, 0.75)) * 0.59436;\n    const t = r / 2;\n    const u = t * sqrt3;\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n    context.moveTo(-u, -t);\n    context.lineTo(u, t);\n    context.moveTo(-u, t);\n    context.lineTo(u, -t);\n  }\n};", "import { sqrt } from \"../math.js\";\nconst tan30 = sqrt(1 / 3);\nconst tan30_2 = tan30 * 2;\nexport default {\n  draw(context, size) {\n    const y = sqrt(size / tan30_2);\n    const x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};", "import { sin, cos, sqrt, pi, tau } from \"../math.js\";\nconst ka = 0.89081309152928522810;\nconst kr = sin(pi / 10) / sin(7 * pi / 10);\nconst kx = sin(tau / 10) * kr;\nconst ky = -cos(tau / 10) * kr;\nexport default {\n  draw(context, size) {\n    const r = sqrt(size * ka);\n    const x = kx * r;\n    const y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (let i = 1; i < 5; ++i) {\n      const a = tau * i / 5;\n      const c = cos(a);\n      const s = sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};", "import { sqrt } from \"../math.js\";\nconst sqrt3 = sqrt(3);\nexport default {\n  draw(context, size) {\n    const y = -sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};", "import { sqrt } from \"../math.js\";\nconst sqrt3 = sqrt(3);\nexport default {\n  draw(context, size) {\n    const s = sqrt(size) * 0.6824;\n    const t = s / 2;\n    const u = s * sqrt3 / 2; // cos(Math.PI / 6)\n    context.moveTo(0, -s);\n    context.lineTo(u, t);\n    context.lineTo(-u, t);\n    context.closePath();\n  }\n};", "import { sqrt } from \"../math.js\";\nconst c = -0.5;\nconst s = sqrt(3) / 2;\nconst k = 1 / sqrt(12);\nconst a = (k / 2 + 1) * 3;\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / a);\n    const x0 = r / 2,\n      y0 = r * k;\n    const x1 = x0,\n      y1 = r * k + r;\n    const x2 = -x1,\n      y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};", "export default function () {}", "export function point(that, x, y) {\n  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n}\nexport function Basis(context) {\n  this._context = context;\n}\nBasis.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 3:\n        point(this, this._x1, this._y1);\n      // falls through\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new Basis(context);\n}", "import noop from \"../noop.js\";\nimport { point } from \"./basis.js\";\nfunction BasisClosed(context) {\n  this._context = context;\n}\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x2, this._y2);\n          this._context.closePath();\n          break;\n        }\n      case 2:\n        {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n          this._context.closePath();\n          break;\n        }\n      case 3:\n        {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n    }\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x2 = x, this._y2 = y;\n        break;\n      case 1:\n        this._point = 2;\n        this._x3 = x, this._y3 = y;\n        break;\n      case 2:\n        this._point = 3;\n        this._x4 = x, this._y4 = y;\n        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);\n        break;\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisClosed(context);\n}", "import { point } from \"./basis.js\";\nfunction BasisOpen(context) {\n  this._context = context;\n}\nBasisOpen.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        var x0 = (this._x0 + 4 * this._x1 + x) / 6,\n          y0 = (this._y0 + 4 * this._y1 + y) / 6;\n        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);\n        break;\n      case 3:\n        this._point = 4;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisOpen(context);\n}", "import { Basis } from \"./basis.js\";\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\nBundle.prototype = {\n  lineStart: function () {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function () {\n    var x = this._x,\n      y = this._y,\n      j = x.length - 1;\n    if (j > 0) {\n      var x0 = x[0],\n        y0 = y[0],\n        dx = x[j] - x0,\n        dy = y[j] - y0,\n        i = -1,\n        t;\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));\n      }\n    }\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function (x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\nexport default (function custom(beta) {\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n  bundle.beta = function (beta) {\n    return custom(+beta);\n  };\n  return bundle;\n})(0.85);", "import noop from \"../noop.js\";\nimport { point } from \"./cardinal.js\";\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n      case 1:\n        this._point = 2;\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n        break;\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0);", "import { point } from \"./cardinal.js\";\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalOpen.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n      case 3:\n        this._point = 4;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0);", "import { epsilon } from \"../math.js\";\nimport { Cardinal } from \"./cardinal.js\";\nexport function point(that, x, y) {\n  var x1 = that._x1,\n    y1 = that._y1,\n    x2 = that._x2,\n    y2 = that._y2;\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n      n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n      m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRom.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n        break;\n      case 3:\n        this.point(this._x2, this._y2);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5);", "import { CardinalClosed } from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport { point } from \"./catmullRom.js\";\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n      case 1:\n        this._point = 2;\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n        break;\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5);", "import { CardinalOpen } from \"./cardinalOpen.js\";\nimport { point } from \"./catmullRom.js\";\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRomOpen.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n      case 3:\n        this._point = 4;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5);", "import noop from \"../noop.js\";\nfunction LinearClosed(context) {\n  this._context = context;\n}\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._point) this._context.closePath();\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);\n  }\n};\nexport default function (context) {\n  return new LinearClosed(context);\n}", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n    h1 = x2 - that._x1,\n    s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n    s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n    p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\nfunction MonotoneX(context) {\n  this._context = context;\n}\nMonotoneX.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n      case 3:\n        point(this, this._t0, slope2(this, this._t0));\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    var t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n        break;\n      default:\n        point(this, this._t0, t1 = slope3(this, x, y));\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\nfunction ReflectContext(context) {\n  this._context = context;\n}\nReflectContext.prototype = {\n  moveTo: function (x, y) {\n    this._context.moveTo(y, x);\n  },\n  closePath: function () {\n    this._context.closePath();\n  },\n  lineTo: function (x, y) {\n    this._context.lineTo(y, x);\n  },\n  bezierCurveTo: function (x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n  }\n};\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}", "function Natural(context) {\n  this._context = context;\n}\nNatural.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function () {\n    var x = this._x,\n      y = this._y,\n      n = x.length;\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n          py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n    if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function (x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n    n = x.length - 1,\n    m,\n    a = new Array(n),\n    b = new Array(n),\n    r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\nexport default function (context) {\n  return new Natural(context);\n}"],
  "mappings": "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",
  "names": ["percent", "min", "max", "path", "a", "each", "percent", "color", "s", "hue2rgb", "p", "q", "max", "min", "percent", "percent", "color", "a", "each", "AnimationState", "color", "s", "percent", "a", "toIndex", "x", "p0", "min", "max", "point", "point2", "x", "y", "each", "state", "each", "animation", "x", "template", "value", "remove", "tags", "themes", "tooltipMoveDp", "blur", "saturate", "events", "x", "y", "point", "p0", "a", "x", "y", "BlendMode", "x", "y", "x", "y", "x", "y", "x", "isNaN", "x", "y", "max", "x", "x", "y", "round", "round", "startIndex", "endIndex", "sum", "percent", "s", "len", "point", "point", "sin", "cos", "x", "y", "point", "a", "s", "x", "cos", "sin", "tau", "x", "pi", "tau", "epsilon", "k", "x", "y", "path", "tau", "cos", "sin", "p0", "a", "x", "x", "y", "x", "y", "path", "line", "path", "k", "x", "y", "tension", "x", "y", "a", "sin", "tau", "cos", "sqrt3", "sqrt3", "s", "point", "x", "y", "x", "y", "point", "x", "y", "point", "x", "y", "custom", "beta", "x", "y", "custom", "tension", "x", "y", "custom", "tension", "point", "x", "y", "x2", "y2", "a", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "x", "point", "y", "x", "y", "a"]
}
