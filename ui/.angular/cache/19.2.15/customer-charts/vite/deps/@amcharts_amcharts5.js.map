{
  "version": 3,
  "sources": ["../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js", "../../../../../../../node_modules/@amcharts/amcharts5/locales/en.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Language.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js", "../../../../../../../node_modules/svg-arc-to-cubic-bezier/modules/index.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/Root.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Modal.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Polygon.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Ellipse.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Star.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/ZoomableContainer.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/Gradient.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/LinearGradient.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/HeatLegend.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/EditableLabel.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Picture.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Triangle.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Slider.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/ZoomTools.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/GrainPattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/RadialGradient.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/CirclePattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/LinePattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/RectanglePattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PathPattern.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/PatternSet.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DataParser.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DataProcessor.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/SpriteResizer.js", "../../../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Net.js"],
  "sourcesContent": ["/** @ignore */ /** */\nimport * as $array from \"./Array\";\nimport * as $utils from \"./Utils\";\n/**\r\n * @ignore\r\n */\nclass Native {\n  constructor() {\n    Object.defineProperty(this, \"_observer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_targets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    this._observer = new ResizeObserver(entries => {\n      $array.each(entries, entry => {\n        $array.each(this._targets, x => {\n          if (x.target === entry.target) {\n            x.callback();\n          }\n        });\n      });\n    });\n  }\n  addTarget(target, callback) {\n    this._observer.observe(target, {\n      box: \"border-box\"\n    });\n    this._targets.push({\n      target,\n      callback\n    });\n  }\n  removeTarget(target) {\n    this._observer.unobserve(target);\n    $array.keepIf(this._targets, x => {\n      return x.target !== target;\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass Raf {\n  constructor() {\n    Object.defineProperty(this, \"_timer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_targets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n  }\n  addTarget(target, callback) {\n    if (this._timer === null) {\n      let lastTime = null;\n      const loop = () => {\n        const currentTime = Date.now();\n        if (lastTime === null || currentTime > lastTime + Raf.delay) {\n          lastTime = currentTime;\n          $array.each(this._targets, x => {\n            let newSize = x.target.getBoundingClientRect();\n            if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n              x.size = newSize;\n              x.callback();\n            }\n          });\n        }\n        if (this._targets.length === 0) {\n          this._timer = null;\n        } else {\n          this._timer = requestAnimationFrame(loop);\n        }\n      };\n      this._timer = requestAnimationFrame(loop);\n    }\n    // We start off with fake bounds so that sensor always kicks in\n    let size = {\n      width: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      x: 0,\n      y: 0\n    };\n    this._targets.push({\n      target,\n      callback,\n      size\n    });\n  }\n  removeTarget(target) {\n    $array.keepIf(this._targets, x => {\n      return x.target !== target;\n    });\n    if (this._targets.length === 0) {\n      if (this._timer !== null) {\n        cancelAnimationFrame(this._timer);\n        this._timer = null;\n      }\n    }\n  }\n}\nObject.defineProperty(Raf, \"delay\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: 200\n});\n/**\r\n * @ignore\r\n */\nlet observer = null;\n/**\r\n * @ignore\r\n */\nfunction makeSensor() {\n  if (observer === null) {\n    if (typeof ResizeObserver !== \"undefined\") {\n      observer = new Native();\n    } else {\n      observer = new Raf();\n    }\n  }\n  return observer;\n}\n/**\r\n * @ignore\r\n */\nexport class ResizeSensor {\n  constructor(element, callback) {\n    Object.defineProperty(this, \"_sensor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_element\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_listener\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this._sensor = makeSensor();\n    this._element = element;\n    // This is needed because we need to know when the window is zoomed\n    this._listener = $utils.onZoom(callback);\n    this._sensor.addTarget(element, callback);\n  }\n  isDisposed() {\n    return this._disposed;\n  }\n  dispose() {\n    if (!this._disposed) {\n      this._disposed = true;\n      this._sensor.removeTarget(this._element);\n      this._listener.dispose();\n    }\n  }\n  get sensor() {\n    return this._sensor;\n  }\n}\n", "import { Entity } from \"./Entity\";\n/**\r\n * Presets for common UI elements.\r\n */\nexport class InterfaceColors extends Entity {}\nObject.defineProperty(InterfaceColors, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"InterfaceColors\"\n});\nObject.defineProperty(InterfaceColors, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([InterfaceColors.className])\n});\n", "import { Graphics } from \"./Graphics\";\nimport * as $math from \"../util/Math\";\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class PointedRectangle extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      this.markDirtyBounds();\n      let w = this.width();\n      let h = this.height();\n      if (w > 0 && h > 0) {\n        let cr = this.get(\"cornerRadius\", 8);\n        cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\n        let x = this.get(\"pointerX\", 0);\n        let y = this.get(\"pointerY\", 0);\n        let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\n        // corner coordinates\n        // top left\n        let xtl = 0;\n        let ytl = 0;\n        // top right\n        let xtr = w;\n        let ytr = 0;\n        // bottom right\n        let xbr = w;\n        let ybr = h;\n        // bottom left\n        let xbl = 0;\n        let ybl = h;\n        // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\n        // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\n        let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\n        let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\n        const display = this._display;\n        // top\n        display.moveTo(cr, 0);\n        if (d1 > 0 && d2 > 0) {\n          let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n          y = $math.fitToRange(y, -Infinity, 0);\n          display.lineTo(stemX - bwh, 0);\n          display.lineTo(x, y);\n          display.lineTo(stemX + bwh, 0);\n        }\n        display.lineTo(w - cr, 0);\n        display.arcTo(w, 0, w, cr, cr);\n        // right\n        if (d1 > 0 && d2 < 0) {\n          let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\n          x = $math.fitToRange(x, w, Infinity);\n          display.lineTo(w, cr);\n          display.lineTo(w, Math.max(stemY - bwh, cr));\n          display.lineTo(x, y);\n          display.lineTo(w, stemY + bwh);\n        }\n        display.lineTo(w, h - cr);\n        display.arcTo(w, h, w - cr, h, cr);\n        // bottom\n        if (d1 < 0 && d2 < 0) {\n          let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n          y = $math.fitToRange(y, h, Infinity);\n          display.lineTo(w - cr, h);\n          display.lineTo(stemX + bwh, h);\n          display.lineTo(x, y);\n          display.lineTo(stemX - bwh, h);\n        }\n        display.lineTo(cr, h);\n        display.arcTo(0, h, 0, h - cr, cr);\n        // left\n        if (d1 < 0 && d2 > 0) {\n          let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\n          x = $math.fitToRange(x, -Infinity, 0);\n          display.lineTo(0, h - cr);\n          display.lineTo(0, stemY + bwh);\n          display.lineTo(x, y);\n          display.lineTo(0, Math.max(stemY - bwh, cr));\n        }\n        display.lineTo(0, cr);\n        display.arcTo(0, 0, cr, 0, cr);\n        display.closePath();\n      }\n    }\n  }\n}\nObject.defineProperty(PointedRectangle, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"PointedRectangle\"\n});\nObject.defineProperty(PointedRectangle, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([PointedRectangle.className])\n});\n", "import { MultiDisposer } from \"../util/Disposer\";\nimport { Label } from \"../render/Label\";\nimport { PointedRectangle } from \"../render/PointedRectangle\";\nimport { Container } from \"./Container\";\nimport { Percent } from \"../util/Percent\";\nimport { Color } from \"../util/Color\";\nimport * as $math from \"../util/Math\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\nexport class Tooltip extends Container {\n  constructor(root, settings, isReal, templates = []) {\n    super(root, settings, isReal, templates);\n    Object.defineProperty(this, \"_fx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_fy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_label\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_fillDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_fillGrDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_strokeDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_labelDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_w\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_h\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_keepHoverDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_htmlContentHovered\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\n    super._afterNew();\n    const background = this._setDefaultFn(\"background\", () => {\n      return PointedRectangle.new(this._root, {});\n    });\n    background.set(\"themeTags\", [\"tooltip\", \"background\"]);\n    this._label = this.children.push(Label.new(this._root, {}));\n    this._disposers.push(this._label.events.on(\"boundschanged\", () => {\n      this._updateBackground();\n    }));\n    this._disposers.push(this.on(\"bounds\", () => {\n      this._updateBackground();\n    }));\n    this._updateTextColor();\n    this._root.tooltipContainer.children.push(this);\n    this.hide(0);\n    this._disposers.push(this.label.onPrivate(\"htmlElement\", htmlElement => {\n      if (htmlElement) {\n        this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", _ev => {\n          this._htmlContentHovered = true;\n        }));\n        this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", _ev => {\n          this._htmlContentHovered = false;\n        }));\n      }\n    }));\n    this.on(\"visible\", _ev => {\n      this._handleReaderAnnouncement();\n    });\n    this.label.events.on(\"dataitemchanged\", _ev => {\n      this._handleReaderAnnouncement();\n    });\n    this._root._tooltips.push(this);\n  }\n  _handleReaderAnnouncement() {\n    if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\n      this._root.readerAlert(this.label.getAccessibleText());\n    }\n  }\n  /**\r\n   * A [[Label]] element for the tooltip.\r\n   *\r\n   * @readonly\r\n   * @return Label\r\n   */\n  get label() {\n    return this._label;\n  }\n  /**\r\n   * Permanently disposes the tooltip.\r\n   */\n  _dispose() {\n    super._dispose();\n    $array.remove(this._root._tooltips, this);\n  }\n  _updateChildren() {\n    super._updateChildren();\n    if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\n      this.get(\"background\")._markDirtyKey(\"width\");\n    }\n    const labelText = this.get(\"labelText\");\n    if (labelText != null) {\n      this.label.set(\"text\", this.get(\"labelText\"));\n    }\n    const labelHTML = this.get(\"labelHTML\");\n    if (labelHTML != null) {\n      this.label.set(\"html\", this.get(\"labelHTML\"));\n    }\n    const labelAriaLabel = this.get(\"labelAriaLabel\");\n    if (labelAriaLabel != null) {\n      this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\n      // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n      this._updateBackground();\n    }\n    if (this.isDirty(\"tooltipTarget\")) {\n      this.updateBackgroundColor();\n    }\n    if (this.isDirty(\"keepTargetHover\")) {\n      const keephover = this.get(\"keepTargetHover\");\n      if (keephover) {\n        const bg = this.get(\"background\");\n        this._keepHoverDp = new MultiDisposer([bg.events.on(\"pointerover\", _ev => {\n          let target = this.get(\"tooltipTarget\");\n          if (target) {\n            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n              target = target.parent;\n            }\n            target.hover();\n          }\n        }), bg.events.on(\"pointerout\", _ev => {\n          let target = this.get(\"tooltipTarget\");\n          if (target) {\n            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n              target = target.parent;\n            }\n            if (!this._htmlContentHovered) {\n              target.unhover();\n            }\n          }\n        })]);\n        this.label.onPrivate(\"htmlElement\", htmlElement => {\n          if (this._keepHoverDp && htmlElement) {\n            this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", ev => {\n              const outEvent = this.root._renderer.getEvent(ev);\n              bg.events.dispatch(\"pointerout\", {\n                type: \"pointerout\",\n                originalEvent: outEvent.event,\n                point: outEvent.point,\n                simulated: false,\n                target: bg\n              });\n            }));\n          }\n        });\n      } else {\n        if (this._keepHoverDp) {\n          this._keepHoverDp.dispose();\n          this._keepHoverDp = undefined;\n        }\n      }\n    }\n  }\n  _onShow() {\n    super._onShow();\n    this.updateBackgroundColor();\n  }\n  updateBackgroundColor() {\n    let tooltipTarget = this.get(\"tooltipTarget\");\n    const background = this.get(\"background\");\n    let fill;\n    let stroke;\n    if (tooltipTarget && background) {\n      fill = tooltipTarget.get(\"fill\");\n      stroke = tooltipTarget.get(\"stroke\");\n      if (fill == null) {\n        fill = stroke;\n      }\n      if (this.get(\"getFillFromSprite\")) {\n        if (this._fillDp) {\n          this._fillDp.dispose();\n        }\n        if (fill != null) {\n          background.set(\"fill\", fill);\n        }\n        this._fillDp = tooltipTarget.on(\"fill\", fill => {\n          if (fill != null) {\n            background.set(\"fill\", fill);\n            this._updateTextColor(fill);\n          }\n        });\n        this._disposers.push(this._fillDp);\n      }\n      if (this.get(\"getFillGradientFromSprite\")) {\n        if (this._fillGrDp) {\n          this._fillGrDp.dispose();\n        }\n        let fillGradient = tooltipTarget.get(\"fillGradient\");\n        if (fillGradient != null) {\n          background.set(\"fillGradient\", fillGradient);\n        }\n        this._fillGrDp = tooltipTarget.on(\"fillGradient\", fillGradient => {\n          if (fillGradient != null) {\n            background.set(\"fillGradient\", fillGradient);\n          }\n        });\n        this._disposers.push(this._fillGrDp);\n      }\n      if (this.get(\"getStrokeFromSprite\")) {\n        if (this._strokeDp) {\n          this._strokeDp.dispose();\n        }\n        if (fill != null) {\n          background.set(\"stroke\", fill);\n        }\n        this._strokeDp = tooltipTarget.on(\"fill\", fill => {\n          if (fill != null) {\n            background.set(\"stroke\", fill);\n          }\n        });\n        this._disposers.push(this._strokeDp);\n      }\n      if (this.get(\"getLabelFillFromSprite\")) {\n        if (this._labelDp) {\n          this._labelDp.dispose();\n        }\n        if (fill != null) {\n          this.label.set(\"fill\", fill);\n        }\n        this._labelDp = tooltipTarget.on(\"fill\", fill => {\n          if (fill != null) {\n            this.label.set(\"fill\", fill);\n          }\n        });\n        this._disposers.push(this._labelDp);\n      }\n    }\n    this._updateTextColor(fill);\n  }\n  _updateTextColor(fill) {\n    if (this.get(\"autoTextColor\")) {\n      if (fill == null) {\n        fill = this.get(\"background\").get(\"fill\");\n      }\n      if (fill == null) {\n        fill = this._root.interfaceColors.get(\"background\");\n      }\n      if (fill instanceof Color) {\n        this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n      }\n    }\n  }\n  _setDataItem(dataItem) {\n    super._setDataItem(dataItem);\n    this.label._setDataItem(dataItem);\n  }\n  _updateBackground() {\n    super.updateBackground();\n    const parent = this._root.container;\n    if (parent) {\n      let cw = 0.5;\n      let ch = 0.5;\n      let centerX = this.get(\"centerX\");\n      if (centerX instanceof Percent) {\n        cw = centerX.value;\n      }\n      let centerY = this.get(\"centerY\");\n      if (centerY instanceof Percent) {\n        ch = centerY.value;\n      }\n      let parentW = parent.width();\n      let parentH = parent.height();\n      let tooltipContainer = this.parent;\n      let xx = 0;\n      let yy = 0;\n      if (tooltipContainer) {\n        xx = tooltipContainer.x();\n        yy = tooltipContainer.y();\n        const layerMargin = tooltipContainer.get(\"layerMargin\");\n        if (layerMargin) {\n          xx += layerMargin.left || 0;\n          yy += layerMargin.top || 0;\n          parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\n          parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\n        }\n      }\n      const bounds = this.get(\"bounds\", {\n        left: -xx,\n        top: -yy,\n        right: parentW - xx,\n        bottom: parentH - yy\n      });\n      this._updateBounds();\n      let w = this.width();\n      let h = this.height();\n      // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n      if (w === 0) {\n        w = this._w;\n      }\n      if (h === 0) {\n        h = this._h;\n      }\n      let pointTo = this.get(\"pointTo\", {\n        x: parentW / 2,\n        y: parentH / 2\n      });\n      let x = pointTo.x;\n      let y = pointTo.y;\n      let pointerOrientation = this.get(\"pointerOrientation\");\n      let background = this.get(\"background\");\n      let pointerLength = 0;\n      let bgStrokeSizeY = 0;\n      let bgStrokeSizeX = 0;\n      if (background instanceof PointedRectangle) {\n        pointerLength = background.get(\"pointerLength\", 0);\n        bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\n        bgStrokeSizeX = bgStrokeSizeY;\n        background.set(\"width\", w);\n        background.set(\"height\", h);\n      }\n      let pointerX = 0;\n      let pointerY = 0;\n      let boundsW = bounds.right - bounds.left;\n      let boundsH = bounds.bottom - bounds.top;\n      // horizontal\n      if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n        bgStrokeSizeY = 0;\n        if (pointerOrientation == \"horizontal\") {\n          if (x > bounds.left + boundsW / 2) {\n            x -= w * (1 - cw) + pointerLength;\n            bgStrokeSizeX *= -1;\n          } else {\n            x += w * cw + pointerLength;\n          }\n        } else if (pointerOrientation == \"left\") {\n          x += w * (1 - cw) + pointerLength;\n        } else {\n          x -= w * cw + pointerLength;\n          bgStrokeSizeX *= -1;\n        }\n      }\n      // vertical pointer\n      else {\n        bgStrokeSizeX = 0;\n        if (pointerOrientation == \"vertical\") {\n          if (y > bounds.top + h / 2 + pointerLength) {\n            y -= h * (1 - ch) + pointerLength;\n          } else {\n            y += h * ch + pointerLength;\n            bgStrokeSizeY *= -1;\n          }\n        } else if (pointerOrientation == \"down\") {\n          y -= h * (1 - ch) + pointerLength;\n        } else {\n          y += h * ch + pointerLength;\n          bgStrokeSizeY *= -1;\n        }\n      }\n      x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\n      y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\n      pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\n      pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\n      this._fx = x;\n      this._fy = y;\n      const animationDuration = this.get(\"animationDuration\", 0);\n      if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n        const animationEasing = this.get(\"animationEasing\");\n        this.animate({\n          key: \"x\",\n          to: x,\n          duration: animationDuration,\n          easing: animationEasing\n        });\n        this.animate({\n          key: \"y\",\n          to: y,\n          duration: animationDuration,\n          easing: animationEasing\n        });\n      } else {\n        this.set(\"x\", x);\n        this.set(\"y\", y);\n      }\n      if (background instanceof PointedRectangle) {\n        background.set(\"pointerX\", pointerX);\n        background.set(\"pointerY\", pointerY);\n      }\n      if (w > 0) {\n        this._w = w;\n      }\n      if (h > 0) {\n        this._h = h;\n      }\n    }\n  }\n}\nObject.defineProperty(Tooltip, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Tooltip\"\n});\nObject.defineProperty(Tooltip, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Tooltip.className])\n});\n", "import { Entity } from \"./Entity\";\nimport { TextFormatter } from \"./TextFormatter\";\nimport * as $object from \"./Object\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\nexport class NumberFormatter extends Entity {\n  _setDefaults() {\n    // Defaults\n    this._setDefault(\"negativeBase\", 0);\n    this._setDefault(\"numberFormat\", \"#,###.#####\");\n    this._setDefault(\"smallNumberThreshold\", 1.00);\n    const bns = \"_big_number_suffix_\";\n    const sns = \"_small_number_suffix_\";\n    const bs = \"_byte_suffix_\";\n    this._setDefault(\"bigNumberPrefixes\", [{\n      \"number\": 1e+3,\n      \"suffix\": this._t(bns + \"3\")\n    }, {\n      \"number\": 1e+6,\n      \"suffix\": this._t(bns + \"6\")\n    }, {\n      \"number\": 1e+9,\n      \"suffix\": this._t(bns + \"9\")\n    }, {\n      \"number\": 1e+12,\n      \"suffix\": this._t(bns + \"12\")\n    }, {\n      \"number\": 1e+15,\n      \"suffix\": this._t(bns + \"15\")\n    }, {\n      \"number\": 1e+18,\n      \"suffix\": this._t(bns + \"18\")\n    }, {\n      \"number\": 1e+21,\n      \"suffix\": this._t(bns + \"21\")\n    }, {\n      \"number\": 1e+24,\n      \"suffix\": this._t(bns + \"24\")\n    }]);\n    this._setDefault(\"smallNumberPrefixes\", [{\n      \"number\": 1e-24,\n      \"suffix\": this._t(sns + \"24\")\n    }, {\n      \"number\": 1e-21,\n      \"suffix\": this._t(sns + \"21\")\n    }, {\n      \"number\": 1e-18,\n      \"suffix\": this._t(sns + \"18\")\n    }, {\n      \"number\": 1e-15,\n      \"suffix\": this._t(sns + \"15\")\n    }, {\n      \"number\": 1e-12,\n      \"suffix\": this._t(sns + \"12\")\n    }, {\n      \"number\": 1e-9,\n      \"suffix\": this._t(sns + \"9\")\n    }, {\n      \"number\": 1e-6,\n      \"suffix\": this._t(sns + \"6\")\n    }, {\n      \"number\": 1e-3,\n      \"suffix\": this._t(sns + \"3\")\n    }]);\n    this._setDefault(\"bytePrefixes\", [{\n      \"number\": 1,\n      suffix: this._t(bs + \"B\")\n    }, {\n      \"number\": 1024,\n      suffix: this._t(bs + \"KB\")\n    }, {\n      \"number\": 1048576,\n      suffix: this._t(bs + \"MB\")\n    }, {\n      \"number\": 1073741824,\n      suffix: this._t(bs + \"GB\")\n    }, {\n      \"number\": 1099511627776,\n      suffix: this._t(bs + \"TB\")\n    }, {\n      \"number\": 1125899906842624,\n      suffix: this._t(bs + \"PB\")\n    }]);\n    super._setDefaults();\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n  }\n  /**\r\n   * Formats the number according to specific format.\r\n   *\r\n   * @param value   Value to format\r\n   * @param format  Format to apply\r\n   * @return Formatted number\r\n   */\n  format(value, format, precision) {\n    // no format passed in or \"Number\"\n    if (format == null || $type.isString(format) && format.toLowerCase() === \"number\") {\n      format = this.get(\"numberFormat\", \"\");\n    }\n    // Init return value\n    let formatted;\n    // Cast to number just in case\n    // TODO: maybe use better casting\n    let source = Number(value);\n    // Is it a built-in format or Intl.NumberFormatOptions\n    if ($type.isObject(format)) {\n      try {\n        if (this.get(\"intlLocales\")) {\n          return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\n        } else {\n          return new Intl.NumberFormat(undefined, format).format(source);\n        }\n      } catch (e) {\n        return \"Invalid\";\n      }\n    } else {\n      // Clean format\n      format = $utils.cleanFormat(format);\n      // Get format info (it will also deal with parser caching)\n      let info = this.parseFormat(format, this._root.language);\n      // format and replace the number\n      let details;\n      if (source > this.get(\"negativeBase\")) {\n        details = info.positive;\n      } else if (source < this.get(\"negativeBase\")) {\n        details = info.negative;\n      } else {\n        details = info.zero;\n      }\n      // Adjust precision\n      if (precision != null && !details.mod) {\n        details = $object.copy(details);\n        details.decimals.active = source == 0 ? 0 : precision;\n      }\n      // Format\n      formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\n    }\n    if (this.get(\"forceLTR\") === true) {\n      formatted = \"‎\" + formatted;\n    }\n    return formatted;\n  }\n  /**\r\n   * Parses supplied format into structured object which can be used to format\r\n   * the number.\r\n   *\r\n   * @param format Format string, i.e. \"#,###.00\"\r\n   * @param language Language\r\n   * @ignore\r\n   */\n  parseFormat(format, language) {\n    // Check cache\n    // TODO\n    // let cached = this.getCache(format);\n    // if (cached != null) {\n    // \treturn cached;\n    // }\n    const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\n    const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\n    // init format parse info holder\n    let info = {\n      \"positive\": {\n        \"thousands\": {\n          \"active\": -1,\n          \"passive\": -1,\n          \"interval\": -1,\n          \"separator\": thousandSeparator\n        },\n        \"decimals\": {\n          \"active\": -1,\n          \"passive\": -1,\n          \"separator\": decimalSeparator\n        },\n        \"template\": \"\",\n        \"source\": \"\",\n        \"parsed\": false\n      },\n      \"negative\": {\n        \"thousands\": {\n          \"active\": -1,\n          \"passive\": -1,\n          \"interval\": -1,\n          \"separator\": thousandSeparator\n        },\n        \"decimals\": {\n          \"active\": -1,\n          \"passive\": -1,\n          \"separator\": decimalSeparator\n        },\n        \"template\": \"\",\n        \"source\": \"\",\n        \"parsed\": false\n      },\n      \"zero\": {\n        \"thousands\": {\n          \"active\": -1,\n          \"passive\": -1,\n          \"interval\": -1,\n          \"separator\": thousandSeparator\n        },\n        \"decimals\": {\n          \"active\": -1,\n          \"passive\": -1,\n          \"separator\": decimalSeparator\n        },\n        \"template\": \"\",\n        \"source\": \"\",\n        \"parsed\": false\n      }\n    };\n    // Escape double vertical bars (that mean display one vertical bar)\n    format = format.replace(\"||\", $type.PLACEHOLDER2);\n    // Split it up and deal with different formats\n    let parts = format.split(\"|\");\n    info.positive.source = parts[0];\n    if (typeof parts[2] === \"undefined\") {\n      info.zero = info.positive;\n    } else {\n      info.zero.source = parts[2];\n    }\n    if (typeof parts[1] === \"undefined\") {\n      info.negative = info.positive;\n    } else {\n      info.negative.source = parts[1];\n    }\n    // Parse each\n    $object.each(info, (_part, item) => {\n      // Already parsed\n      if (item.parsed) {\n        return;\n      }\n      // Check cached\n      // TODO\n      // if (typeof this.getCache(item.source) !== \"undefined\") {\n      // \tinfo[part] = this.getCache(item.source);\n      // \treturn;\n      // }\n      // Begin parsing\n      let partFormat = item.source;\n      // Just \"Number\"?\n      if (partFormat.toLowerCase() === \"number\") {\n        partFormat = this.get(\"numberFormat\", \"#,###.#####\");\n      }\n      // Let TextFormatter split into chunks\n      let chunks = TextFormatter.chunk(partFormat, true);\n      for (let i = 0; i < chunks.length; i++) {\n        let chunk = chunks[i];\n        // replace back double vertical bar\n        chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\n        if (chunk.type === \"value\") {\n          // Parse format\n          // Look for codes\n          let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\n          if (matches) {\n            if (matches === null || matches[0] === \"\") {\n              // no codes here - assume string\n              // nothing to do here\n              item.template += chunk.text;\n            } else {\n              // look for the format modifiers at the end\n              let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\n              if (mods) {\n                item.mod = mods[0].toLowerCase();\n                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\n              }\n              // break the format up\n              let a = matches[0].split(\".\");\n              // Deal with thousands\n              if (a[0] === \"\") {\n                // No directives for thousands\n                // Leave default settings (no formatting)\n              } else {\n                // Counts\n                item.thousands.active = (a[0].match(/0/g) || []).length;\n                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\n                // Separator interval\n                let b = a[0].split(\",\");\n                if (b.length === 1) {\n                  // No thousands separators\n                  // Do nothing\n                } else {\n                  // Use length fo the last chunk as thousands length\n                  item.thousands.interval = (b.pop() || \"\").length;\n                  if (item.thousands.interval === 0) {\n                    item.thousands.interval = -1;\n                  }\n                }\n              }\n              // Deal with decimals\n              if (typeof a[1] === \"undefined\") {\n                // No directives for decimals\n                // Leave at defaults (no formatting)\n              } else {\n                // Counts\n                item.decimals.active = (a[1].match(/0/g) || []).length;\n                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\n              }\n              // Add special code to template\n              item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\n            }\n          }\n        } else {\n          // Quoted string - take it as it is\n          item.template += chunk.text;\n        }\n      }\n      // Apply style formatting\n      //item.template = getTextFormatter().format(item.template, this.outputFormat);\n      // Save cache\n      // TODO\n      //this.setCache(item.source, item);\n      // Mark this as parsed\n      item.parsed = true;\n    });\n    // Save cache (the whole thing)\n    // TODO\n    //this.setCache(format, info);\n    return info;\n  }\n  /**\r\n   * Applies parsed format to a numeric value.\r\n   *\r\n   * @param value    Value\r\n   * @param details  Parsed format as returned by parseFormat()\r\n   * @return Formatted number\r\n   * @ignore\r\n   */\n  applyFormat(value, details) {\n    // Use absolute values\n    let negative = value < 0;\n    value = Math.abs(value);\n    // Recalculate according to modifier\n    let prefix = \"\",\n      suffix = \"\";\n    let mods = details.mod ? details.mod.split(\"\") : [];\n    if (mods.indexOf(\"b\") !== -1) {\n      let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\n      value = a[0];\n      prefix = a[1];\n      suffix = a[2];\n      if (details.modSpacing) {\n        suffix = \" \" + suffix;\n      }\n    } else if (mods.indexOf(\"a\") !== -1) {\n      let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\n      value = a[0];\n      prefix = a[1];\n      suffix = a[2];\n      if (details.modSpacing) {\n        suffix = \" \" + suffix;\n      }\n    } else if (mods.indexOf(\"p\") !== -1) {\n      let ol = Math.min(value.toString().length + 2, 21);\n      //value *= 100;\n      value = parseFloat(value.toPrecision(ol));\n      prefix = this._root.language.translate(\"_percentPrefix\");\n      suffix = this._root.language.translate(\"_percentSuffix\");\n      if (prefix == \"\" && suffix == \"\") {\n        suffix = \"%\";\n      }\n    } else if (mods.indexOf(\"%\") !== -1) {\n      let ol = Math.min(value.toString().length + 2, 21);\n      value *= 100;\n      value = parseFloat(value.toPrecision(ol));\n      suffix = \"%\";\n    } else if (mods.indexOf(\"‰\") !== -1) {\n      let ol = Math.min(value.toString().length + 3, 21);\n      value *= 1000;\n      value = parseFloat(value.toPrecision(ol));\n      suffix = \"‰\";\n    }\n    // Round to passive\n    if (mods.indexOf(\"e\") !== -1) {\n      // convert the value to exponential\n      let exp;\n      if (details.decimals.passive >= 0) {\n        exp = value.toExponential(details.decimals.passive).split(\"e\");\n      } else {\n        exp = value.toExponential().split(\"e\");\n      }\n      value = Number(exp[0]);\n      suffix = \"e\" + exp[1];\n      if (details.modSpacing) {\n        suffix = \" \" + suffix;\n      }\n    } else if (details.decimals.passive === 0) {\n      value = Math.round(value);\n    } else if (details.decimals.passive > 0) {\n      const decimals = $utils.decimalPlaces(value);\n      if (decimals > 0) {\n        const d = Math.pow(10, details.decimals.passive);\n        value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\n      }\n    }\n    // Init return value\n    let res = \"\";\n    // Calc integer and decimal parts\n    let a = $type.numberToString(value).split(\".\");\n    // Format integers\n    let ints = a[0];\n    // Pad integers to active length\n    if (ints.length < details.thousands.active) {\n      ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\n    }\n    // Insert thousands separators\n    if (details.thousands.interval > 0) {\n      let ip = [];\n      let intsr = ints.split(\"\").reverse().join(\"\");\n      for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\n        let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\n        if (c !== \"\") {\n          ip.unshift(c);\n        }\n      }\n      ints = ip.join(details.thousands.separator);\n    }\n    // Add integers\n    res += ints;\n    // Add decimals\n    if (a.length === 1) {\n      a.push(\"\");\n    }\n    let decs = a[1];\n    // Fill zeros?\n    if (decs.length < details.decimals.active) {\n      decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\n    }\n    if (decs !== \"\") {\n      res += details.decimals.separator + decs;\n    }\n    // Can't have empty return value\n    if (res === \"\") {\n      res = \"0\";\n    }\n    // Add minus sign back\n    if (value !== 0 && negative && mods.indexOf(\"s\") === -1) {\n      res = \"-\" + res;\n    }\n    // Add suffixes/prefixes\n    if (prefix) {\n      res = prefix + res;\n    }\n    if (suffix) {\n      res += suffix;\n    }\n    return res;\n  }\n  applyPrefix(value, prefixes, force = false) {\n    let newvalue = value;\n    let prefix = \"\";\n    let suffix = \"\";\n    let applied = false;\n    let k = 1;\n    for (let i = 0, len = prefixes.length; i < len; i++) {\n      if (prefixes[i].number <= value) {\n        if (prefixes[i].number === 0) {\n          newvalue = 0;\n        } else {\n          newvalue = value / prefixes[i].number;\n          k = prefixes[i].number;\n        }\n        prefix = prefixes[i].prefix;\n        suffix = prefixes[i].suffix;\n        applied = true;\n      }\n    }\n    if (!applied && force && prefixes.length && value != 0) {\n      // Prefix was not applied. Use the first prefix.\n      newvalue = value / prefixes[0].number;\n      prefix = prefixes[0].prefix;\n      suffix = prefixes[0].suffix;\n      applied = true;\n    }\n    if (applied) {\n      newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\n    }\n    return [newvalue, prefix, suffix];\n  }\n  /**\r\n   * Replaces brackets with temporary placeholders.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text  Input text\r\n   * @return Escaped text\r\n   */\n  escape(text) {\n    return text.replace(\"||\", $type.PLACEHOLDER2);\n  }\n  /**\r\n   * Replaces placeholders back to brackets.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text  Escaped text\r\n   * @return Unescaped text\r\n   */\n  unescape(text) {\n    return text.replace($type.PLACEHOLDER2, \"|\");\n  }\n}\n", "function parseDate(timezone, date) {\n  let year = 0;\n  let month = 0;\n  let day = 1;\n  let hour = 0;\n  let minute = 0;\n  let second = 0;\n  let millisecond = 0;\n  let weekday = 0;\n  timezone.formatToParts(date).forEach(x => {\n    switch (x.type) {\n      case \"year\":\n        year = +x.value;\n        break;\n      case \"month\":\n        month = +x.value - 1;\n        break;\n      case \"day\":\n        day = +x.value;\n        break;\n      case \"hour\":\n        hour = +x.value;\n        break;\n      case \"minute\":\n        minute = +x.value;\n        break;\n      case \"second\":\n        second = +x.value;\n        break;\n      case \"fractionalSecond\":\n        millisecond = +x.value;\n        break;\n      case \"weekday\":\n        switch (x.value) {\n          case \"Sun\":\n            weekday = 0;\n            break;\n          case \"Mon\":\n            weekday = 1;\n            break;\n          case \"Tue\":\n            weekday = 2;\n            break;\n          case \"Wed\":\n            weekday = 3;\n            break;\n          case \"Thu\":\n            weekday = 4;\n            break;\n          case \"Fri\":\n            weekday = 5;\n            break;\n          case \"Sat\":\n            weekday = 6;\n            break;\n        }\n    }\n  });\n  if (hour === 24) {\n    hour = 0;\n  }\n  return {\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    millisecond,\n    weekday\n  };\n}\nfunction toUTCDate(timezone, date) {\n  const {\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    millisecond\n  } = parseDate(timezone, date);\n  return Date.UTC(year, month, day, hour, minute, second, millisecond);\n}\nexport class Timezone {\n  constructor(timezone, isReal) {\n    Object.defineProperty(this, \"_utc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_dtf\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    this.name = timezone;\n    this._utc = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: \"UTC\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      weekday: \"short\",\n      fractionalSecondDigits: 3\n    });\n    this._dtf = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: timezone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      weekday: \"short\",\n      fractionalSecondDigits: 3\n    });\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   timezone  IANA timezone\r\n   * @return            Instantiated object\r\n   */\n  static new(timezone) {\n    return new this(timezone, true);\n  }\n  convertLocal(date) {\n    const offset = this.offsetUTC(date);\n    const userOffset = date.getTimezoneOffset();\n    const output = new Date(date);\n    output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\n    const newUserOffset = output.getTimezoneOffset();\n    if (userOffset != newUserOffset) {\n      output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\n    }\n    return output;\n  }\n  offsetUTC(date) {\n    const utc = toUTCDate(this._utc, date);\n    const dtf = toUTCDate(this._dtf, date);\n    return (utc - dtf) / 60000;\n  }\n  parseDate(date) {\n    return parseDate(this._dtf, date);\n  }\n}\n", "import { Entity } from \"./Entity\";\nimport { TextFormatter } from \"./TextFormatter\";\nimport { Timezone } from \"./Timezone\";\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\nexport class DateFormatter extends Entity {\n  _setDefaults() {\n    // Defaults\n    this._setDefault(\"capitalize\", true);\n    this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\n    super._setDefaults();\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n  }\n  /**\r\n   * Formats a source `Date` object into string format\r\n   * @param   source          inpout date\r\n   * @param   format          Output format\r\n   * @param   ignoreTimezone  Ignore timezone?\r\n   * @return                  Formatted date\r\n   */\n  format(source, format, ignoreTimezone = false) {\n    // Locale?\n    // TODO\n    // No format passed in or it's empty\n    if (typeof format === \"undefined\" || format === \"\") {\n      format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n    }\n    // Init return value\n    let formatted;\n    // Cast?\n    // TODO: decide if we need to cast\n    let date = source;\n    // Is it a built-in format or Intl.DateTimeFormat\n    if ($type.isObject(format)) {\n      try {\n        const locales = this.get(\"intlLocales\");\n        if (locales) {\n          return new Intl.DateTimeFormat(locales, format).format(date);\n        } else {\n          return new Intl.DateTimeFormat(undefined, format).format(date);\n        }\n      } catch (e) {\n        return \"Invalid\";\n      }\n    }\n    // get format info (it will also deal with parser caching)\n    let info = this.parseFormat(format);\n    // Should we apply custom time zone?\n    const timezone = this._root.timezone;\n    let originalDate = date;\n    if (timezone && !this._root.utc && !ignoreTimezone) {\n      date = timezone.convertLocal(date);\n    }\n    // Check if it's a valid date\n    if (!$type.isNumber(date.getTime())) {\n      // TODO translation\n      //return this._t(\"Invalid date\");\n      return \"Invalid date\";\n    }\n    // Apply format\n    formatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\n    // Capitalize\n    if (this.get(\"capitalize\")) {\n      formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\n    }\n    // We're done\n    return formatted;\n  }\n  /**\r\n   * Applies format to Date.\r\n   *\r\n   * @param date      Date object\r\n   * @param info      Parsed format information\r\n   * @return Formatted date string\r\n   */\n  applyFormat(date, info, ignoreTimezone = false, originalDate) {\n    // Init return value\n    let res = info.template;\n    // Get values\n    let fullYear,\n      month,\n      weekday,\n      day,\n      hours,\n      minutes,\n      seconds,\n      milliseconds,\n      timestamp = date.getTime();\n    if (this._root.utc && !ignoreTimezone) {\n      fullYear = date.getUTCFullYear();\n      month = date.getUTCMonth();\n      weekday = date.getUTCDay();\n      day = date.getUTCDate();\n      hours = date.getUTCHours();\n      minutes = date.getUTCMinutes();\n      seconds = date.getUTCSeconds();\n      milliseconds = date.getUTCMilliseconds();\n    } else {\n      fullYear = date.getFullYear();\n      month = date.getMonth();\n      weekday = date.getDay();\n      day = date.getDate();\n      hours = date.getHours();\n      minutes = date.getMinutes();\n      seconds = date.getSeconds();\n      milliseconds = date.getMilliseconds();\n    }\n    // Go through each part and format/replace it in template\n    for (let i = 0, len = info.parts.length; i < len; i++) {\n      let value = \"\";\n      switch (info.parts[i]) {\n        case \"G\":\n          value = this._t(fullYear < 0 ? \"_era_bc\" : \"_era_ad\");\n          break;\n        case \"yyyy\":\n          value = Math.abs(fullYear).toString();\n          if (fullYear < 0) {\n            value += this._t(\"_era_bc\");\n          }\n          break;\n        case \"yyy\":\n        case \"yy\":\n        case \"y\":\n          value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\n          if (fullYear < 0) {\n            value += this._t(\"_era_bc\");\n          }\n          break;\n        case \"YYYY\":\n        case \"YYY\":\n        case \"YY\":\n        case \"Y\":\n          let year = $utils.getWeekYear(date, this._root.utc);\n          if (info.parts[i] == \"YYYY\") {\n            value = Math.abs(year).toString();\n          } else {\n            value = Math.abs(year).toString().substr(-info.parts[i].length);\n          }\n          if (year < 0) {\n            value += this._t(\"_era_bc\");\n          }\n          break;\n        case \"u\":\n          // @todo\n          break;\n        case \"q\":\n          value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\n          break;\n        case \"MMMMM\":\n          value = this._t(this._getMonth(month)).substr(0, 1);\n          break;\n        case \"MMMM\":\n          value = this._t(this._getMonth(month));\n          break;\n        case \"MMM\":\n          value = this._t(this._getShortMonth(month));\n          break;\n        case \"MM\":\n          value = $utils.padString(month + 1, 2, \"0\");\n          break;\n        case \"M\":\n          value = (month + 1).toString();\n          break;\n        case \"ww\":\n          value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\n          break;\n        case \"w\":\n          value = $utils.getWeek(date, this._root.utc).toString();\n          break;\n        case \"W\":\n          value = $utils.getMonthWeek(date, this._root.utc).toString();\n          break;\n        case \"dd\":\n          value = $utils.padString(day, 2, \"0\");\n          break;\n        case \"d\":\n          value = day.toString();\n          break;\n        case \"DD\":\n        case \"DDD\":\n          value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\n          break;\n        case \"D\":\n          value = $utils.getYearDay(date, this._root.utc).toString();\n          break;\n        case \"F\":\n          // @todo\n          break;\n        case \"g\":\n          // @todo\n          break;\n        case \"t\":\n          value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\n          break;\n        case \"E\":\n          value = (weekday || 7).toString();\n          break;\n        case \"EE\":\n          value = $utils.padString((weekday || 7).toString(), 2, \"0\");\n          break;\n        case \"EEE\":\n        case \"eee\":\n          value = this._t(this._getShortWeekday(weekday));\n          break;\n        case \"EEEE\":\n        case \"eeee\":\n          value = this._t(this._getWeekday(weekday));\n          break;\n        case \"EEEEE\":\n        case \"eeeee\":\n          value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\n          break;\n        case \"e\":\n        case \"ee\":\n          value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\n          if (info.parts[i] == \"ee\") {\n            value = $utils.padString(value, 2, \"0\");\n          }\n          break;\n        case \"a\":\n          if (hours >= 12) {\n            value = this._t(\"PM\");\n          } else {\n            value = this._t(\"AM\");\n          }\n          break;\n        case \"aa\":\n          if (hours >= 12) {\n            value = this._t(\"P.M.\");\n          } else {\n            value = this._t(\"A.M.\");\n          }\n          break;\n        case \"aaa\":\n          if (hours >= 12) {\n            value = this._t(\"P\");\n          } else {\n            value = this._t(\"A\");\n          }\n          break;\n        case \"h\":\n          value = $utils.get12Hours(hours).toString();\n          break;\n        case \"hh\":\n          value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\n          break;\n        case \"H\":\n          value = hours.toString();\n          break;\n        case \"HH\":\n          value = $utils.padString(hours, 2, \"0\");\n          break;\n        case \"K\":\n          value = $utils.get12Hours(hours, 0).toString();\n          break;\n        case \"KK\":\n          value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\n          break;\n        case \"k\":\n          value = (hours + 1).toString();\n          break;\n        case \"kk\":\n          value = $utils.padString(hours + 1, 2, \"0\");\n          break;\n        case \"m\":\n          value = minutes.toString();\n          break;\n        case \"mm\":\n          value = $utils.padString(minutes, 2, \"0\");\n          break;\n        case \"s\":\n          value = seconds.toString();\n          break;\n        case \"ss\":\n          value = $utils.padString(seconds, 2, \"0\");\n          break;\n        case \"S\":\n        case \"SS\":\n        case \"SSS\":\n          value = Math.round(milliseconds / 1000 * Math.pow(10, info.parts[i].length)).toString();\n          break;\n        case \"x\":\n          value = timestamp.toString();\n          break;\n        case \"n\":\n        case \"nn\":\n        case \"nnn\":\n          value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\n          break;\n        case \"z\":\n          value = $utils.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n          break;\n        case \"zz\":\n          value = $utils.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n          break;\n        case \"zzz\":\n          value = $utils.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n          break;\n        case \"zzzz\":\n          value = $utils.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n          break;\n        case \"Z\":\n        case \"ZZ\":\n          let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\n          if (timezone instanceof Timezone) {\n            timezone = timezone.name;\n          }\n          const offset = timezone ? $utils.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\n          let tz = Math.abs(offset) / 60;\n          let tzh = Math.floor(tz);\n          let tzm = tz * 60 - tzh * 60;\n          if (this._root.utc) {\n            tzh = 0;\n            tzm = 0;\n          }\n          if (info.parts[i] == \"Z\") {\n            value = \"GMT\";\n            value += offset > 0 ? \"-\" : \"+\";\n            value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\n          } else {\n            value = offset > 0 ? \"-\" : \"+\";\n            value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\n          }\n          break;\n        case \"i\":\n          value = date.toISOString();\n          break;\n        case \"I\":\n          value = date.toUTCString();\n          break;\n      }\n      res = res.replace($type.PLACEHOLDER, value);\n    }\n    return res;\n  }\n  /**\r\n   * Parses format into structured infromation.\r\n   *\r\n   * @param format Format template\r\n   */\n  parseFormat(format) {\n    // Check cache\n    // TODO: implement caching of the parsed format\n    // Init format parse info holder\n    let info = {\n      \"template\": \"\",\n      \"parts\": []\n    };\n    // Let TextFormatter split into chunks\n    let chunks = TextFormatter.chunk(format, true);\n    for (let i = 0; i < chunks.length; i++) {\n      let chunk = chunks[i];\n      if (chunk.type === \"value\") {\n        // Just \"Date\"?\n        if (chunk.text.match(/^date$/i)) {\n          let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n          if (!$type.isString(dateFormat)) {\n            dateFormat = \"yyyy-MM-dd\";\n          }\n          chunk.text = dateFormat;\n        }\n        // Find all possible parts\n        let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\n        // Found?\n        if (matches) {\n          // Populate template\n          for (let x = 0; x < matches.length; x++) {\n            info.parts.push(matches[x]);\n            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\n          }\n        }\n      }\n      // Apply to template\n      info.template += chunk.text;\n    }\n    // Save cache\n    // TODO\n    return info;\n  }\n  _months() {\n    return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  }\n  _getMonth(index) {\n    return this._months()[index];\n  }\n  _shortMonths() {\n    return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  }\n  _getShortMonth(index) {\n    return this._shortMonths()[index];\n  }\n  _weekdays() {\n    return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  }\n  _getWeekday(index) {\n    return this._weekdays()[index];\n  }\n  _shortWeekdays() {\n    return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  }\n  _getShortWeekday(index) {\n    return this._shortWeekdays()[index];\n  }\n  parse(source, format, utc) {\n    // If UTC is not supplied, use Root setting\n    if (typeof utc === \"undefined\") {\n      utc = this._root.utc;\n    }\n    // Is it already a Date\n    if (source instanceof Date) {\n      return source;\n    }\n    // Is it a numeric timestamp\n    if ($type.isNumber(source)) {\n      return new Date(source);\n    }\n    // Are we parsing a timestamp?\n    if (format == \"x\") {\n      return new Date(parseInt(source));\n    }\n    // No? Let's check if it's string, and try converting to it if nec\n    if (!$type.isString(source)) {\n      source = source.toString();\n    }\n    // Init return value\n    let res;\n    // Init RegEx for parsing\n    let reg = \"\";\n    // Clean format\n    format = $utils.cleanFormat(format);\n    // Clip format to length of the source string\n    format = format.substr(0, source.length);\n    // Parse format\n    let info = this.parseFormat(format);\n    // Init parsed items holder\n    let parsedIndexes = {\n      \"year\": -1,\n      \"year3\": -1,\n      \"year2\": -1,\n      \"year1\": -1,\n      \"month\": -1,\n      \"monthShort\": -1,\n      \"monthLong\": -1,\n      \"weekdayShort\": -1,\n      \"weekdayLong\": -1,\n      \"day\": -1,\n      \"yearDay\": -1,\n      \"week\": -1,\n      \"hourBase0\": -1,\n      \"hour12Base0\": -1,\n      \"hourBase1\": -1,\n      \"hour12Base1\": -1,\n      \"minute\": -1,\n      \"second\": -1,\n      \"millisecond\": -1,\n      \"millisecondDigits\": -1,\n      \"am\": -1,\n      \"zone\": -1,\n      \"timestamp\": -1,\n      \"iso\": -1\n    };\n    // Init values\n    let resValues = {\n      \"year\": 1970,\n      \"month\": 0,\n      \"day\": 1,\n      \"hour\": 0,\n      \"minute\": 0,\n      \"second\": 0,\n      \"millisecond\": 0,\n      \"timestamp\": null,\n      \"offset\": 0,\n      \"utc\": utc\n    };\n    // Index adjuster\n    let indexAdjust = 0;\n    let index = 0;\n    // Iterate through all of the parts\n    for (let i = 0; i < info.parts.length; i++) {\n      // Set current match index\n      index = i + indexAdjust + 1;\n      switch (info.parts[i]) {\n        case \"yyyy\":\n        case \"YYYY\":\n          reg += \"([0-9]{4})\";\n          parsedIndexes.year = index;\n          break;\n        case \"yyy\":\n        case \"YYY\":\n          reg += \"([0-9]{3})\";\n          parsedIndexes.year3 = index;\n          break;\n        case \"yy\":\n        case \"YY\":\n          reg += \"([0-9]{2})\";\n          parsedIndexes.year2 = index;\n          break;\n        case \"y\":\n        case \"Y\":\n          reg += \"([0-9]{1})\";\n          parsedIndexes.year1 = index;\n          break;\n        case \"MMMM\":\n          reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\n          parsedIndexes.monthLong = index;\n          break;\n        case \"MMM\":\n          reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\n          parsedIndexes.monthShort = index;\n          break;\n        case \"MM\":\n        case \"M\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.month = index;\n          break;\n        case \"ww\":\n        case \"w\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.week = index;\n          break;\n        case \"dd\":\n        case \"d\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.day = index;\n          break;\n        case \"DDD\":\n        case \"DD\":\n        case \"D\":\n          reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n          parsedIndexes.yearDay = index;\n          break;\n        case \"dddd\":\n          reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\n          parsedIndexes.weekdayLong = index;\n          break;\n        case \"ddd\":\n          reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\n          parsedIndexes.weekdayShort = index;\n          break;\n        case \"aaa\":\n        case \"aa\":\n        case \"a\":\n          // TODO: fix (escape regex)\n          reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\n          parsedIndexes.am = index;\n          break;\n        case \"hh\":\n        case \"h\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.hour12Base1 = index;\n          break;\n        case \"HH\":\n        case \"H\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.hourBase0 = index;\n          break;\n        case \"KK\":\n        case \"K\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.hour12Base0 = index;\n          break;\n        case \"kk\":\n        case \"k\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.hourBase1 = index;\n          break;\n        case \"mm\":\n        case \"m\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.minute = index;\n          break;\n        case \"ss\":\n        case \"s\":\n          reg += \"([0-9]{2}|[0-9]{1})\";\n          parsedIndexes.second = index;\n          break;\n        case \"SSS\":\n        case \"SS\":\n        case \"S\":\n          reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n          parsedIndexes.millisecond = index;\n          parsedIndexes.millisecondDigits = info.parts[i].length;\n          break;\n        case \"nnn\":\n        case \"nn\":\n        case \"n\":\n          reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n          parsedIndexes.millisecond = index;\n          break;\n        case \"x\":\n          reg += \"([0-9]{1,})\";\n          parsedIndexes.timestamp = index;\n          break;\n        case \"Z\":\n          reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\n          parsedIndexes.zone = index;\n          break;\n        case \"ZZ\":\n          reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\n          parsedIndexes.zone = index;\n          break;\n        case \"i\":\n          reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\n          parsedIndexes.iso = index;\n          indexAdjust += 7;\n          break;\n        case \"G\":\n        case \"YYYY\":\n        case \"YYY\":\n        case \"YY\":\n        case \"Y\":\n        case \"MMMMM\":\n        case \"W\":\n        case \"EEEEE\":\n        case \"EEEE\":\n        case \"EEE\":\n        case \"EE\":\n        case \"E\":\n        case \"eeeee\":\n        case \"eeee\":\n        case \"eee\":\n        case \"ee\":\n        case \"e\":\n        case \"zzzz\":\n        case \"zzz\":\n        case \"zz\":\n        case \"z\":\n        case \"t\":\n          // Ignore\n          indexAdjust--;\n          break;\n      }\n      reg += \"[^0-9]*\";\n    }\n    // Try matching\n    let regex = new RegExp(reg);\n    let matches = source.match(regex);\n    if (matches) {\n      // Populate the date object\n      // Full year\n      if (parsedIndexes.year > -1) {\n        resValues.year = parseInt(matches[parsedIndexes.year]);\n      }\n      // 3-digit year\n      if (parsedIndexes.year3 > -1) {\n        let val = parseInt(matches[parsedIndexes.year3]);\n        val += 1000;\n        resValues.year = val;\n      }\n      // 2-digit year\n      if (parsedIndexes.year2 > -1) {\n        let val = parseInt(matches[parsedIndexes.year2]);\n        if (val > 50) {\n          val += 1000;\n        } else {\n          val += 2000;\n        }\n        resValues.year = val;\n      }\n      // 1-digit year\n      if (parsedIndexes.year1 > -1) {\n        let val = parseInt(matches[parsedIndexes.year1]);\n        val = Math.floor(new Date().getFullYear() / 10) * 10 + val;\n        resValues.year = val;\n      }\n      // Full month\n      if (parsedIndexes.monthLong > -1) {\n        resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\n      }\n      // Short month\n      if (parsedIndexes.monthShort > -1) {\n        resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\n      }\n      // Numeric month\n      if (parsedIndexes.month > -1) {\n        resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\n      }\n      // Weekday\n      // @todo\n      // Week\n      if (parsedIndexes.week > -1 && parsedIndexes.day === -1) {\n        // We parse weeks ONLY if day is not explicitly set\n        // TODO: this needs work\n        // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\n        resValues.month = 0;\n        resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, utc);\n      }\n      // Day\n      if (parsedIndexes.day > -1) {\n        resValues.day = parseInt(matches[parsedIndexes.day]);\n      }\n      // Year day\n      if (parsedIndexes.yearDay > -1) {\n        resValues.month = 0;\n        resValues.day = parseInt(matches[parsedIndexes.yearDay]);\n      }\n      // 24 Hour (0-23)\n      if (parsedIndexes.hourBase0 > -1) {\n        resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\n      }\n      // 24 Hour (1-24)\n      if (parsedIndexes.hourBase1 > -1) {\n        resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\n      }\n      // 12 Hour (0-11)\n      if (parsedIndexes.hour12Base0 > -1) {\n        let val = parseInt(matches[parsedIndexes.hour12Base0]);\n        if (val == 11) {\n          val = 0;\n        }\n        if (parsedIndexes.am > -1 && !this.isAm(matches[parsedIndexes.am])) {\n          val += 12;\n        }\n        resValues.hour = val;\n      }\n      // 12 Hour (1-12)\n      if (parsedIndexes.hour12Base1 > -1) {\n        let val = parseInt(matches[parsedIndexes.hour12Base1]);\n        if (val == 12) {\n          val = 0;\n        }\n        if (parsedIndexes.am > -1 && !this.isAm(matches[parsedIndexes.am])) {\n          val += 12;\n        }\n        resValues.hour = val;\n      }\n      // Minute\n      if (parsedIndexes.minute > -1) {\n        resValues.minute = parseInt(matches[parsedIndexes.minute]);\n      }\n      // Second\n      if (parsedIndexes.second > -1) {\n        resValues.second = parseInt(matches[parsedIndexes.second]);\n      }\n      // Millisecond\n      if (parsedIndexes.millisecond > -1) {\n        let val = parseInt(matches[parsedIndexes.millisecond]);\n        if (parsedIndexes.millisecondDigits == 2) {\n          val *= 10;\n        } else if (parsedIndexes.millisecondDigits == 1) {\n          val *= 100;\n        }\n        resValues.millisecond = val;\n      }\n      // Timestamp\n      if (parsedIndexes.timestamp > -1) {\n        resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\n        const ts = new Date(resValues.timestamp);\n        resValues.year = ts.getUTCFullYear();\n        resValues.month = ts.getUTCMonth();\n        resValues.day = ts.getUTCDate();\n        resValues.hour = ts.getUTCHours();\n        resValues.minute = ts.getUTCMinutes();\n        resValues.second = ts.getUTCSeconds();\n        resValues.millisecond = ts.getUTCMilliseconds();\n      }\n      // Adjust time zone\n      if (parsedIndexes.zone > -1) {\n        resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\n      }\n      // ISO\n      if (parsedIndexes.iso > -1) {\n        resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\n        resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\n        resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\n        resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\n        resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\n        resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\n        resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\n        if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\n          resValues.utc = true;\n        } else if (matches[parsedIndexes.iso + 7] != \"\") {\n          resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\n        }\n      }\n      // Create Date object\n      if (resValues.utc) {\n        res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\n      } else {\n        res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\n      }\n    } else {\n      // Didn't match anything\n      // Let's try dropping it into Date constructor and hope for the best\n      res = new Date(source);\n    }\n    return res;\n  }\n  resolveTimezoneOffset(date, zone) {\n    let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n    if (value) {\n      let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n      let dir = match[1];\n      let hour = match[2];\n      let minute = match[3];\n      let offset = parseInt(hour) * 60 + parseInt(minute);\n      // Adjust offset\n      // Making it negative does not seem to make sense, but it's right\n      // because of how JavaScript calculates GMT offsets\n      if (dir == \"+\") {\n        offset *= -1;\n      }\n      // Check the difference in offset\n      let originalOffset = (date || new Date()).getTimezoneOffset();\n      let diff = offset - originalOffset;\n      return diff;\n    }\n    return 0;\n  }\n  /**\r\n   * Resolves month name (i.e. \"December\") into a month number (11).\r\n   *\r\n   * @param value  Month name\r\n   * @return Month number\r\n   */\n  resolveMonth(value) {\n    // Let's try English first\n    let month = this._months().indexOf(value);\n    if (month > -1) {\n      return month;\n    }\n    // Try the translation\n    if (!this._root.language.isDefault()) {\n      month = this._root.language.translateAll(this._months()).indexOf(value);\n      if (month > -1) {\n        return month;\n      }\n    }\n    return 0;\n  }\n  /**\r\n   * Resolves short month name (i.e. \"Dec\") into a month number.\r\n   *\r\n   * @param value  Short month name\r\n   * @return Month number\r\n   */\n  resolveShortMonth(value) {\n    // Let's try English first\n    let month = this._shortMonths().indexOf(value);\n    if (month > -1) {\n      return month;\n    }\n    // Maybe long month (workaround for May)\n    month = this._months().indexOf(value);\n    if (month > -1) {\n      return month;\n    }\n    // Try the translation\n    if (this._root.language && !this._root.language.isDefault()) {\n      month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\n      if (month > -1) {\n        return month;\n      }\n    }\n    return 0;\n  }\n  /**\r\n   * Checks if passed in string represents AM/PM notation in many of its\r\n   * versions.\r\n   *\r\n   * @param value  Source string\r\n   * @return Is it AM/PM?\r\n   */\n  isAm(value) {\n    let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\n    return list.indexOf(value.toUpperCase()) > -1;\n  }\n  /**\r\n   * Translates list of strings.\r\n   *\r\n   * @param list  Source strings\r\n   * @return Translated strings\r\n   */\n  getStringList(list) {\n    let res = [];\n    for (let i = 0; i < list.length; i++) {\n      // translate?\n      if (this._root.language) {\n        res.push($utils.escapeForRgex(this._t(list[i])));\n      } else {\n        res.push($utils.escapeForRgex(list[i]));\n      }\n    }\n    return res;\n  }\n}\n", "import { Entity } from \"./Entity\";\nimport { TextFormatter } from \"./TextFormatter\";\nimport * as $object from \"./Object\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\nexport class DurationFormatter extends Entity {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * Collection of aliases for units.\r\n     */\n    Object.defineProperty(this, \"_unitAliases\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        \"Y\": \"y\",\n        \"D\": \"d\",\n        \"H\": \"h\",\n        \"K\": \"h\",\n        \"k\": \"h\",\n        \"n\": \"S\"\n      }\n    });\n  }\n  _setDefaults() {\n    const dmillisecond = \"_duration_millisecond\";\n    const dsecond = \"_duration_second\";\n    const dminute = \"_duration_minute\";\n    const dhour = \"_duration_hour\";\n    const dday = \"_duration_day\";\n    const dweek = \"_duration_week\";\n    const dmonth = \"_duration_month\";\n    const dyear = \"_duration_year\";\n    const asecond = \"_second\";\n    const aminute = \"_minute\";\n    const ahour = \"_hour\";\n    const aday = \"_day\";\n    const aweek = \"_week\";\n    const amonth = \"_week\";\n    const ayear = \"_year\";\n    // Defaults\n    this._setDefault(\"negativeBase\", 0);\n    this._setDefault(\"baseUnit\", \"second\");\n    this._setDefault(\"durationFormats\", {\n      \"millisecond\": {\n        \"millisecond\": this._t(dmillisecond),\n        \"second\": this._t(dmillisecond + asecond),\n        \"minute\": this._t(dmillisecond + aminute),\n        \"hour\": this._t(dmillisecond + ahour),\n        \"day\": this._t(dmillisecond + aday),\n        \"week\": this._t(dmillisecond + aweek),\n        \"month\": this._t(dmillisecond + amonth),\n        \"year\": this._t(dmillisecond + ayear)\n      },\n      \"second\": {\n        \"second\": this._t(dsecond),\n        \"minute\": this._t(dsecond + aminute),\n        \"hour\": this._t(dsecond + ahour),\n        \"day\": this._t(dsecond + aday),\n        \"week\": this._t(dsecond + aweek),\n        \"month\": this._t(dsecond + amonth),\n        \"year\": this._t(dsecond + ayear)\n      },\n      \"minute\": {\n        \"minute\": this._t(dminute),\n        \"hour\": this._t(dminute + ahour),\n        \"day\": this._t(dminute + aday),\n        \"week\": this._t(dminute + aweek),\n        \"month\": this._t(dminute + amonth),\n        \"year\": this._t(dminute + ayear)\n      },\n      \"hour\": {\n        \"hour\": this._t(dhour),\n        \"day\": this._t(dhour + aday),\n        \"week\": this._t(dhour + aweek),\n        \"month\": this._t(dhour + amonth),\n        \"year\": this._t(dhour + ayear)\n      },\n      \"day\": {\n        \"day\": this._t(dday),\n        \"week\": this._t(dday + aweek),\n        \"month\": this._t(dday + amonth),\n        \"year\": this._t(dday + ayear)\n      },\n      \"week\": {\n        \"week\": this._t(dweek),\n        \"month\": this._t(dweek + amonth),\n        \"year\": this._t(dweek + ayear)\n      },\n      \"month\": {\n        \"month\": this._t(dmonth),\n        \"year\": this._t(dmonth + ayear)\n      },\n      \"year\": {\n        \"year\": this._t(dyear)\n      }\n    });\n    super._setDefaults();\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n  }\n  /**\r\n   * Formats the number as duration.\r\n   *\r\n   * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n   * 16 minutes and 40 seconds.\r\n   *\r\n   * @param value   Value to format\r\n   * @param format  Format to apply\r\n   * @param base    Override base unit\r\n   * @return Formatted number\r\n   */\n  format(value, format, base) {\n    // no base unit?\n    let baseUnit = base || this.get(\"baseUnit\");\n    // no format passed in or empty\n    if (typeof format === \"undefined\" || format === \"\") {\n      if (this.get(\"durationFormat\") != null) {\n        format = this.get(\"durationFormat\");\n      } else {\n        format = this.getFormat($type.toNumber(value), undefined, baseUnit);\n      }\n    }\n    // Clean format\n    format = $utils.cleanFormat(format);\n    // get format info (it will also deal with parser caching)\n    let info = this.parseFormat(format, baseUnit);\n    // cast to number just in case\n    // TODO: maybe use better casting\n    let source = Number(value);\n    // format and replace the number\n    let details;\n    if (source > this.get(\"negativeBase\")) {\n      details = info.positive;\n    } else if (source < this.get(\"negativeBase\")) {\n      details = info.negative;\n    } else {\n      details = info.zero;\n    }\n    // Format\n    let formatted = this.applyFormat(source, details);\n    // Apply color?\n    if (details.color !== \"\") {\n      formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\n    }\n    return formatted;\n  }\n  /**\r\n   * Parses supplied format into structured object which can be used to format\r\n   * the number.\r\n   *\r\n   * @param format  Format string, i.e. \"#,###.00\"\r\n   * @param base    Override base unit\r\n   * @return Parsed information\r\n   */\n  parseFormat(format, base) {\n    // Check cache\n    // TODO\n    // let cached = this.getCache(format);\n    // if (cached != null) {\n    // \treturn cached;\n    // }\n    // no base unit?\n    let baseUnit = base || this.get(\"baseUnit\");\n    // Initialize duration parsing info\n    let info = {\n      \"positive\": {\n        \"color\": \"\",\n        \"template\": \"\",\n        \"parts\": [],\n        \"source\": \"\",\n        \"baseUnit\": baseUnit,\n        \"parsed\": false,\n        \"absolute\": false\n      },\n      \"negative\": {\n        \"color\": \"\",\n        \"template\": \"\",\n        \"parts\": [],\n        \"source\": \"\",\n        \"baseUnit\": baseUnit,\n        \"parsed\": false,\n        \"absolute\": false\n      },\n      \"zero\": {\n        \"color\": \"\",\n        \"template\": \"\",\n        \"parts\": [],\n        \"source\": \"\",\n        \"baseUnit\": baseUnit,\n        \"parsed\": false,\n        \"absolute\": false\n      }\n    };\n    // Escape double vertical bars (that mean display one vertical bar)\n    format = format.replace(\"||\", $type.PLACEHOLDER2);\n    // Split it up and deal with different formats\n    let parts = format.split(\"|\");\n    info.positive.source = parts[0];\n    if (typeof parts[2] === \"undefined\") {\n      info.zero = info.positive;\n    } else {\n      info.zero.source = parts[2];\n    }\n    if (typeof parts[1] === \"undefined\") {\n      info.negative = info.positive;\n    } else {\n      info.negative.source = parts[1];\n    }\n    // Parse each\n    $object.each(info, (_part, item) => {\n      // Already parsed\n      if (item.parsed) {\n        return;\n      }\n      // Check cached\n      // TODO\n      // if (typeof this.getCache(item.source) !== \"undefined\") {\n      // \tinfo[part] = this.getCache(item.source);\n      // \treturn;\n      // }\n      // Begin parsing\n      let partFormat = item.source;\n      // Check for [] directives\n      let dirs = [];\n      dirs = item.source.match(/^\\[([^\\]]*)\\]/);\n      if (dirs && dirs.length && dirs[0] !== \"\") {\n        partFormat = item.source.substr(dirs[0].length);\n        item.color = dirs[1];\n      }\n      // Let TextFormatter split into chunks\n      let chunks = TextFormatter.chunk(partFormat, true);\n      for (let i = 0; i < chunks.length; i++) {\n        let chunk = chunks[i];\n        // replace back double vertical bar\n        chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\n        if (chunk.type === \"value\") {\n          // Just \"Duration\"?\n          // if (chunk.text.toLowerCase() === \"duration\") {\n          // \tchunk.text = durationFormat;\n          // }\n          // Check for \"a\" (absolute) modifier\n          if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\n            item.absolute = true;\n            chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\n          }\n          // Find all possible parts\n          let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\n          if (matches) {\n            // Populate template\n            for (let x = 0; x < matches.length; x++) {\n              // Is it an alias?\n              if (matches[x] == null) {\n                matches[x] = this._unitAliases[matches[x]];\n              }\n              item.parts.push(matches[x]);\n              chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\n            }\n          }\n        }\n        // Apply to template\n        item.template += chunk.text;\n      }\n      // Apply style formatting\n      //item.template = TextFormatter.format(item.template, this.outputFormat);\n      // Save cache\n      // TODO\n      //this.setCache(item.source, item);\n      // Mark this as parsed\n      item.parsed = true;\n    });\n    // Save cache (the whole thing)\n    // TODO\n    //this.setCache(format, info);\n    return info;\n  }\n  /**\r\n   * Applies parsed format to a numeric value.\r\n   *\r\n   * @param value    Value\r\n   * @param details  Parsed format as returned by {parseFormat}\r\n   * @return Formatted duration\r\n   */\n  applyFormat(value, details) {\n    // Use absolute values\n    let negative = !details.absolute && value < this.get(\"negativeBase\");\n    value = Math.abs(value);\n    // Recalculate to milliseconds\n    let tstamp = this.toTimeStamp(value, details.baseUnit);\n    // Init return value\n    let res = details.template;\n    const values = {\n      millisecond: 0,\n      second: 0,\n      minute: 0,\n      hour: 0,\n      day: 0,\n      week: 0,\n      month: 0,\n      year: 0\n    };\n    // Iterate through duration parts\n    for (let i = 0, len = details.parts.length; i < len; i++) {\n      // Gather the part\n      let part = details.parts[i];\n      let unit = this._toTimeUnit(part.substr(0, 1));\n      // Calculate current unit value\n      let ints;\n      const unitValue = this._getUnitValue(unit);\n      if (i < len - 1) {\n        ints = Math.floor(tstamp / unitValue);\n      } else {\n        ints = Math.round(tstamp / unitValue);\n      }\n      values[unit] += ints;\n      // Reduce timestamp\n      tstamp -= ints * unitValue;\n    }\n    // Check if we have full unit that we need to bump up to higher unit\n    $object.each(values, (unit, value) => {\n      if (unit == \"millisecond\" && value == 1000) {\n        values[\"second\"]++;\n        values[\"millisecond\"] = 0;\n      } else if (unit == \"second\" && value == 60) {\n        values[\"minute\"]++;\n        values[\"second\"] = 0;\n      } else if (unit == \"minute\" && value == 60) {\n        values[\"hour\"]++;\n        values[\"minute\"] = 0;\n      } else if (unit == \"hour\" && value == 24) {\n        values[\"day\"]++;\n        values[\"hour\"] = 0;\n      } else if (unit == \"day\" && value == 7) {\n        values[\"week\"]++;\n        values[\"day\"] = 0;\n      } else if (unit == \"day\" && value == 30) {\n        values[\"month\"]++;\n        values[\"day\"] = 0;\n      } else if (unit == \"month\" && value == 12) {\n        values[\"year\"]++;\n        values[\"month\"] = 0;\n      }\n      // if (val > 0) {\n      // \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\n      // }\n      // else {\n      // \tres = res.replace($type.PLACEHOLDER, \"\");\n      // }\n    });\n    // Iterate again\n    for (let i = 0, len = details.parts.length; i < len; i++) {\n      // Gather the part\n      let part = details.parts[i];\n      let unit = this._toTimeUnit(part.substr(0, 1));\n      let digits = part.length;\n      // Calculate current unit value\n      res = res.replace($type.PLACEHOLDER, $utils.padString(values[unit], digits, \"0\"));\n    }\n    // Reapply negative sign\n    if (negative) {\n      res = \"-\" + res;\n    }\n    return res;\n  }\n  /**\r\n   * Converts numeric value to timestamp in milliseconds.\r\n   *\r\n   * @param value     A source value\r\n   * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n   * @return Value representation as a timestamp in milliseconds\r\n   */\n  toTimeStamp(value, baseUnit) {\n    return value * this._getUnitValue(baseUnit);\n  }\n  _toTimeUnit(code) {\n    switch (code) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"w\":\n        return \"week\";\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n    }\n    ;\n  }\n  /**\r\n   * Returns appropriate default format for the value.\r\n   *\r\n   * If `maxValue` is sepcified, it will use that value to determine the time\r\n   * unit for the format.\r\n   *\r\n   * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n   * will get `\"10\"`.\r\n   *\r\n   * However, you might want it to be formatted in the context of bigger scale,\r\n   * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n   * values, including small ones will use format with minutes, e.g.:\r\n   * `00:10`, `00:50`, `12: 30`, etc.\r\n   *\r\n   * @param value     Value to format\r\n   * @param maxValue  Maximum value to be used to determine format\r\n   * @param baseUnit  Base unit of the value\r\n   * @return Format\r\n   */\n  getFormat(value, maxValue, baseUnit) {\n    // Is format override set?\n    if (this.get(\"durationFormat\") != null) {\n      return this.get(\"durationFormat\");\n    }\n    // Get base unit\n    if (!baseUnit) {\n      baseUnit = this.get(\"baseUnit\");\n    }\n    if (maxValue != null && value != maxValue) {\n      value = Math.abs(value);\n      maxValue = Math.abs(maxValue);\n      let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\n      return this.get(\"durationFormats\")[baseUnit][maxUnit];\n    } else {\n      let unit = this.getValueUnit(value, baseUnit);\n      return this.get(\"durationFormats\")[baseUnit][unit];\n    }\n  }\n  /**\r\n   * Returns value's closest denominator time unit, e.g 100 seconds is\r\n   * `\"minute\"`, while 59 seconds would still be `second`.\r\n   *\r\n   * @param value     Source duration value\r\n   * @param baseUnit  Base unit\r\n   * @return Denominator\r\n   */\n  getValueUnit(value, baseUnit) {\n    // Get base unit\n    if (!baseUnit) {\n      baseUnit = this.get(\"baseUnit\");\n    }\n    // Convert to milliseconds\n    let currentUnit;\n    let ms = this.getMilliseconds(value, baseUnit);\n    $object.eachContinue(this._getUnitValues(), (key, val) => {\n      if (key == baseUnit || currentUnit) {\n        let num = ms / val;\n        if (num <= 1) {\n          if (!currentUnit) {\n            currentUnit = key;\n          }\n          return false;\n        }\n        currentUnit = key;\n      }\n      return true;\n    });\n    return currentUnit;\n  }\n  /**\r\n   * Converts value to milliseconds according to `baseUnit`.\r\n   *\r\n   * @param value     Source duration value\r\n   * @param baseUnit  Base unit\r\n   * @return Value in milliseconds\r\n   */\n  getMilliseconds(value, baseUnit) {\n    // Get base unit\n    if (!baseUnit) {\n      baseUnit = this.get(\"baseUnit\");\n    }\n    return value * this._getUnitValue(baseUnit);\n  }\n  _getUnitValue(timeUnit) {\n    return this._getUnitValues()[timeUnit];\n  }\n  _getUnitValues() {\n    return {\n      \"millisecond\": 1,\n      \"second\": 1000,\n      \"minute\": 60000,\n      \"hour\": 3600000,\n      \"day\": 86400000,\n      \"week\": 604800000,\n      \"month\": 2592000000,\n      \"year\": 31536000000\n    };\n  }\n}\n", "/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\nexport default {\n  \"firstDayOfWeek\": 1,\n  // Number formatting options.\n  // \n  // Please check with the local standards which separator is accepted to be\n  // used for separating decimals, and which for thousands.\n  \"_decimalSeparator\": \".\",\n  \"_thousandSeparator\": \",\",\n  // Position of the percent sign in numbers\n  \"_percentPrefix\": null,\n  \"_percentSuffix\": \"%\",\n  // Suffixes for numbers\n  // When formatting numbers, big or small numers might be reformatted to\n  // shorter version, by applying a suffix.\n  // \n  // For example, 1000000 might become \"1m\".\n  // Or 1024 might become \"1KB\" if we're formatting byte numbers.\n  // \n  // This section defines such suffixes for all such cases.\n  \"_big_number_suffix_3\": \"k\",\n  \"_big_number_suffix_6\": \"M\",\n  \"_big_number_suffix_9\": \"G\",\n  \"_big_number_suffix_12\": \"T\",\n  \"_big_number_suffix_15\": \"P\",\n  \"_big_number_suffix_18\": \"E\",\n  \"_big_number_suffix_21\": \"Z\",\n  \"_big_number_suffix_24\": \"Y\",\n  \"_small_number_suffix_3\": \"m\",\n  \"_small_number_suffix_6\": \"μ\",\n  \"_small_number_suffix_9\": \"n\",\n  \"_small_number_suffix_12\": \"p\",\n  \"_small_number_suffix_15\": \"f\",\n  \"_small_number_suffix_18\": \"a\",\n  \"_small_number_suffix_21\": \"z\",\n  \"_small_number_suffix_24\": \"y\",\n  \"_byte_suffix_B\": \"B\",\n  \"_byte_suffix_KB\": \"KB\",\n  \"_byte_suffix_MB\": \"MB\",\n  \"_byte_suffix_GB\": \"GB\",\n  \"_byte_suffix_TB\": \"TB\",\n  \"_byte_suffix_PB\": \"PB\",\n  // Default date formats for various periods.\n  // \n  // This should reflect official or de facto formatting universally accepted\n  // in the country translation is being made for\n  // Available format codes here:\n  // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\n  // \n  // This will be used when formatting date/time for particular granularity,\n  // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n  // \n  // \"date\" is used as in default date format when showing standalone dates.\n  \"_date\": \"yyyy-MM-dd\",\n  \"_date_millisecond\": \"mm:ss SSS\",\n  \"_date_millisecond_full\": \"HH:mm:ss SSS\",\n  \"_date_second\": \"HH:mm:ss\",\n  \"_date_second_full\": \"HH:mm:ss\",\n  \"_date_minute\": \"HH:mm\",\n  \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\n  \"_date_hour\": \"HH:mm\",\n  \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\n  \"_date_day\": \"MMM dd\",\n  \"_date_day_full\": \"MMM dd, yyyy\",\n  \"_date_week\": \"ww\",\n  \"_date_week_full\": \"MMM dd, yyyy\",\n  \"_date_month\": \"MMM\",\n  \"_date_month_full\": \"MMM, yyyy\",\n  \"_date_year\": \"yyyy\",\n  // Default duration formats for various base units.\n  // \n  // This will be used by DurationFormatter to format numeric values into\n  // duration.\n  // \n  // Notice how each duration unit comes in several versions. This is to ensure\n  // that each base unit is shown correctly.\n  // \n  // For example, if we have baseUnit set to \"second\", meaning our duration is\n  // in seconds.\n  // \n  // If we pass in `50` to formatter, it will know that we have just 50 seconds\n  // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n  // and the formatted result will be in like `\"50\"`.\n  // \n  // If we pass in `70`, which is more than a minute, the formatter will switch\n  // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n  // text.\n  // \n  // Available codes here:\n  // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n  \"_duration_millisecond\": \"SSS\",\n  \"_duration_millisecond_second\": \"ss.SSS\",\n  \"_duration_millisecond_minute\": \"mm:ss SSS\",\n  \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n  \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n  \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n  \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n  \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n  \"_duration_second\": \"ss\",\n  \"_duration_second_minute\": \"mm:ss\",\n  \"_duration_second_hour\": \"hh:mm:ss\",\n  \"_duration_second_day\": \"d'd' hh:mm:ss\",\n  \"_duration_second_week\": \"d'd' hh:mm:ss\",\n  \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n  \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n  \"_duration_minute\": \"mm\",\n  \"_duration_minute_hour\": \"hh:mm\",\n  \"_duration_minute_day\": \"d'd' hh:mm\",\n  \"_duration_minute_week\": \"d'd' hh:mm\",\n  \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n  \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n  \"_duration_hour\": \"hh'h'\",\n  \"_duration_hour_day\": \"d'd' hh'h'\",\n  \"_duration_hour_week\": \"d'd' hh'h'\",\n  \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n  \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n  \"_duration_day\": \"d'd'\",\n  \"_duration_day_week\": \"d'd'\",\n  \"_duration_day_month\": \"M'm' dd'd'\",\n  \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n  \"_duration_week\": \"w'w'\",\n  \"_duration_week_month\": \"w'w'\",\n  \"_duration_week_year\": \"w'w'\",\n  \"_duration_month\": \"M'm'\",\n  \"_duration_month_year\": \"y'y' MM'm'\",\n  \"_duration_year\": \"y'y'\",\n  // Era translations\n  \"_era_ad\": \"AD\",\n  \"_era_bc\": \"BC\",\n  // Day part, used in 12-hour formats, e.g. 5 P.M.\n  // Please note that these come in 3 variants:\n  // * one letter (e.g. \"A\")\n  // * two letters (e.g. \"AM\")\n  // * two letters with dots (e.g. \"A.M.\")\n  // \n  // All three need to to be translated even if they are all the same. Some\n  // users might use one, some the other.\n  \"A\": \"\",\n  \"P\": \"\",\n  \"AM\": \"\",\n  \"PM\": \"\",\n  \"A.M.\": \"\",\n  \"P.M.\": \"\",\n  // Date-related stuff.\n  // \n  // When translating months, if there's a difference, use the form which is\n  // best for a full date, e.g. as you would use it in \"2018 January 1\".\n  // \n  // Note that May is listed twice. This is because in English May is the same\n  // in both long and short forms, while in other languages it may not be the\n  // case. Translate \"May\" to full word, while \"May(short)\" to shortened\n  // version.\n  // \n  // Should month names and weekdays be capitalized or not?\n  // \n  // Rule of thumb is this: if the names should always be capitalized,\n  // regardless of name position within date (\"January\", \"21st January 2018\",\n  // etc.) use capitalized names. Otherwise enter all lowercase.\n  // \n  // The date formatter will automatically capitalize names if they are the\n  // first (or only) word in resulting date.\n  \"January\": \"\",\n  \"February\": \"\",\n  \"March\": \"\",\n  \"April\": \"\",\n  \"May\": \"\",\n  \"June\": \"\",\n  \"July\": \"\",\n  \"August\": \"\",\n  \"September\": \"\",\n  \"October\": \"\",\n  \"November\": \"\",\n  \"December\": \"\",\n  \"Jan\": \"\",\n  \"Feb\": \"\",\n  \"Mar\": \"\",\n  \"Apr\": \"\",\n  \"May(short)\": \"May\",\n  \"Jun\": \"\",\n  \"Jul\": \"\",\n  \"Aug\": \"\",\n  \"Sep\": \"\",\n  \"Oct\": \"\",\n  \"Nov\": \"\",\n  \"Dec\": \"\",\n  // Weekdays.\n  \"Sunday\": \"\",\n  \"Monday\": \"\",\n  \"Tuesday\": \"\",\n  \"Wednesday\": \"\",\n  \"Thursday\": \"\",\n  \"Friday\": \"\",\n  \"Saturday\": \"\",\n  \"Sun\": \"\",\n  \"Mon\": \"\",\n  \"Tue\": \"\",\n  \"Wed\": \"\",\n  \"Thu\": \"\",\n  \"Fri\": \"\",\n  \"Sat\": \"\",\n  // Date ordinal function.\n  // \n  // This is used when adding number ordinal when formatting days in dates.\n  // \n  // E.g. \"January 1st\", \"February 2nd\".\n  // \n  // The function accepts day number, and returns a string to be added to the\n  // day, like in default English translation, if we pass in 2, we will receive\n  // \"nd\" back.\n  \"_dateOrd\": function (day) {\n    let res = \"th\";\n    if (day < 11 || day > 13) {\n      switch (day % 10) {\n        case 1:\n          res = \"st\";\n          break;\n        case 2:\n          res = \"nd\";\n          break;\n        case 3:\n          res = \"rd\";\n          break;\n      }\n    }\n    return res;\n  },\n  // Various chart controls.\n  // Shown as a tooltip on zoom out button.\n  \"Zoom Out\": \"\",\n  // Timeline buttons\n  \"Play\": \"\",\n  \"Stop\": \"\",\n  // Chart's Legend screen reader title.\n  \"Legend\": \"\",\n  // Legend's item screen reader indicator.\n  \"Press ENTER to toggle\": \"\",\n  // Shown when the chart is busy loading something.\n  \"Loading\": \"\",\n  // Shown as the first button in the breadcrumb navigation, e.g.:\n  // Home > First level > ...\n  \"Home\": \"\",\n  // Chart types.\n  // Those are used as default screen reader titles for the main chart element\n  // unless developer has set some more descriptive title.\n  \"Chart\": \"\",\n  \"Serial chart\": \"\",\n  \"X/Y chart\": \"\",\n  \"Pie chart\": \"\",\n  \"Gauge chart\": \"\",\n  \"Radar chart\": \"\",\n  \"Sankey diagram\": \"\",\n  \"Flow diagram\": \"\",\n  \"Chord diagram\": \"\",\n  \"TreeMap chart\": \"\",\n  \"Force directed tree\": \"\",\n  \"Sliced chart\": \"\",\n  // Series types.\n  // Used to name series by type for screen readers if they do not have their\n  // name set.\n  \"Series\": \"\",\n  \"Candlestick Series\": \"\",\n  \"OHLC Series\": \"\",\n  \"Column Series\": \"\",\n  \"Line Series\": \"\",\n  \"Pie Slice Series\": \"\",\n  \"Funnel Series\": \"\",\n  \"Pyramid Series\": \"\",\n  \"X/Y Series\": \"\",\n  // Map-related stuff.\n  \"Map\": \"\",\n  \"Press ENTER to zoom in\": \"\",\n  \"Press ENTER to zoom out\": \"\",\n  \"Use arrow keys to zoom in and out\": \"\",\n  \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n  // Export-related stuff.\n  // These prompts are used in Export menu labels.\n  // \n  // \"Export\" is the top-level menu item.\n  // \n  // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n  // operation.\n  // \n  // Leave actual format untranslated, unless you absolutely know that they\n  // would convey more meaning in some other way.\n  \"Export\": \"\",\n  \"Image\": \"\",\n  \"Data\": \"\",\n  \"Print\": \"\",\n  \"Press ENTER or use arrow keys to navigate\": \"\",\n  \"Press ENTER to open\": \"\",\n  \"Press ENTER to print.\": \"\",\n  \"Press ENTER to export as %1.\": \"\",\n  \"(Press ESC to close this message)\": \"\",\n  \"Image Export Complete\": \"\",\n  \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n  \"Saved from\": \"\",\n  \"PNG\": \"\",\n  \"JPG\": \"\",\n  \"GIF\": \"\",\n  \"SVG\": \"\",\n  \"PDF\": \"\",\n  \"JSON\": \"\",\n  \"CSV\": \"\",\n  \"XLSX\": \"\",\n  \"HTML\": \"\",\n  // Scrollbar-related stuff.\n  // \n  // Scrollbar is a control which can zoom and pan the axes on the chart.\n  // \n  // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n  // upper and lower (for vertical one).\n  // \n  // Prompts change in relation to whether Scrollbar is vertical or horizontal.\n  // \n  // The final section is used to indicate the current range of selection.\n  \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n  \"Use left and right arrows to move selection\": \"\",\n  \"Use left and right arrows to move left selection\": \"\",\n  \"Use left and right arrows to move right selection\": \"\",\n  \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n  \"Use up and down arrows to move selection\": \"\",\n  \"Use up and down arrows to move lower selection\": \"\",\n  \"Use up and down arrows to move upper selection\": \"\",\n  \"From %1 to %2\": \"\",\n  \"From %1\": \"\",\n  \"To %1\": \"\",\n  // Data loader-related.\n  \"No parser available for file: %1\": \"\",\n  \"Error parsing file: %1\": \"\",\n  \"Unable to load file: %1\": \"\",\n  \"Invalid date\": \"\",\n  // Common actions\n  \"Close\": \"\",\n  \"Minimize\": \"\"\n};\n", "import { Entity } from \"./Entity\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nimport en from \"../../../locales/en\";\n;\n/**\r\n * Add localization functionality.\r\n */\nexport class Language extends Entity {\n  _setDefaults() {\n    this.setPrivate(\"defaultLocale\", en);\n    super._setDefaults();\n  }\n  /**\r\n   * Returns a prompt translation.\r\n   *\r\n   * @param   prompt   Prompt to translate\r\n   * @param   locale   Target locale\r\n   * @param   ...rest  Parameters\r\n   * @return           Translation\r\n   */\n  translate(prompt, locale, ...rest) {\n    // Get langauge\n    if (!locale) {\n      locale = this._root.locale || this.getPrivate(\"defaultLocale\");\n    }\n    // Init translation\n    let translation = prompt;\n    let value = locale[prompt];\n    // Try to look for the translation\n    if (value === null) {\n      translation = \"\";\n    } else if (value != null) {\n      // It might be an empty string\n      if (value) {\n        translation = value;\n      }\n    } else if (locale !== this.getPrivate(\"defaultLocale\")) {\n      // Try to look in default language\n      return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\n    }\n    // Replace %1, %2, etc params\n    if (rest.length) {\n      for (let len = rest.length, i = 0; i < len; ++i) {\n        translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\n      }\n    }\n    // Return the translation\n    return translation;\n  }\n  /**\r\n   * Returns a prompt translation, including custom prompts.\r\n   *\r\n   * @param   prompt   Prompt to translate\r\n   * @param   locale   Target locale\r\n   * @param   ...rest  Parameters\r\n   * @return           Translation\r\n   */\n  translateAny(prompt, locale, ...rest) {\n    return this.translate(prompt, locale, ...rest);\n  }\n  /**\r\n   * Add a custom prompt to locale.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n   * @param  prompt       Source prompt\r\n   * @param  translation  Tanslation\r\n   * @param  locale       Target locale\r\n   */\n  setTranslationAny(prompt, translation, locale) {\n    const localeTarget = locale || this._root.locale;\n    localeTarget[prompt] = translation;\n  }\n  /**\r\n   * Add a batch of custom prompts.\r\n   *\r\n   * @since 5.3.3\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n   * @param  translations  Translations\r\n   * @param  locale        Target locale\r\n   */\n  setTranslationsAny(translations, locale) {\n    $object.each(translations, (key, val) => {\n      this.setTranslationAny(key, val, locale);\n    });\n  }\n  translateEmpty(prompt, locale, ...rest) {\n    let translation = this.translate(prompt, locale, ...rest);\n    return translation == prompt ? \"\" : translation;\n  }\n  translateFunc(prompt, locale) {\n    if (this._root.locale[prompt]) {\n      return this._root.locale[prompt];\n    }\n    // Try to look in default language\n    if (locale !== this.getPrivate(\"defaultLocale\")) {\n      return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\n    }\n    // Fail - return empty function\n    return () => {\n      return \"\";\n    };\n  }\n  /**\r\n   * Translates a btach of prompts.\r\n   *\r\n   * @param  list    Array of prompts to translate\r\n   * @param  locale  Target locale\r\n   * @return         Array of translations\r\n   */\n  translateAll(list, locale) {\n    // Translate all items in the list\n    if (!this.isDefault()) {\n      return $array.map(list, x => this.translate(x, locale));\n    } else {\n      return list;\n    }\n  }\n  /**\r\n   * Returns `true` if the currently selected locale is a default locale.\r\n   *\r\n   * @return `true` if locale is default; `false` if it is not.\r\n   */\n  isDefault() {\n    return this.getPrivate(\"defaultLocale\") === this._root.locale;\n  }\n}\n", "/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\n/**\r\n * @ignore\r\n */\nexport class Matrix {\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    Object.defineProperty(this, \"a\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"b\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"c\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"d\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n  }\n  /**\r\n   * Sets the matrix based on all the available properties\r\n   */\n  setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\n    this.a = Math.cos(rotation) * scale;\n    this.b = Math.sin(rotation) * scale;\n    this.c = -Math.sin(rotation) * scale;\n    this.d = Math.cos(rotation) * scale;\n    this.tx = x - (pivotX * this.a + pivotY * this.c);\n    this.ty = y - (pivotX * this.b + pivotY * this.d);\n  }\n  /**\r\n   * Get a new position with the current transformation applied.\r\n   * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n   */\n  apply(origin) {\n    return {\n      x: this.a * origin.x + this.c * origin.y + this.tx,\n      y: this.b * origin.x + this.d * origin.y + this.ty\n    };\n  }\n  /**\r\n   * Get a new position with the inverse of the current transformation applied.\r\n   * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n   */\n  applyInverse(origin) {\n    const id = 1 / (this.a * this.d + this.c * -this.b);\n    return {\n      x: this.d * id * origin.x + -this.c * id * origin.y + (this.ty * this.c - this.tx * this.d) * id,\n      y: this.a * id * origin.y + -this.b * id * origin.x + (-this.ty * this.a + this.tx * this.b) * id\n    };\n  }\n  /**\r\n   * Appends the given Matrix to this Matrix.\r\n   */\n  append(matrix) {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    this.a = matrix.a * a1 + matrix.b * c1;\n    this.b = matrix.a * b1 + matrix.b * d1;\n    this.c = matrix.c * a1 + matrix.d * c1;\n    this.d = matrix.c * b1 + matrix.d * d1;\n    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n  }\n  /**\r\n   * Prepends the given Matrix to this Matrix.\r\n   */\n  prepend(matrix) {\n    const tx1 = this.tx;\n    if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n      const a1 = this.a;\n      const c1 = this.c;\n      this.a = a1 * matrix.a + this.b * matrix.c;\n      this.b = a1 * matrix.b + this.b * matrix.d;\n      this.c = c1 * matrix.a + this.d * matrix.c;\n      this.d = c1 * matrix.b + this.d * matrix.d;\n    }\n    this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n    this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n  }\n  /**\r\n   * Copies the other matrix's properties into this matrix\r\n   */\n  copyFrom(matrix) {\n    this.a = matrix.a;\n    this.b = matrix.b;\n    this.c = matrix.c;\n    this.d = matrix.d;\n    this.tx = matrix.tx;\n    this.ty = matrix.ty;\n  }\n}\n", "var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar TAU = Math.PI * 2;\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n    y = _ref.y;\n  x *= rx;\n  y *= ry;\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  var dot = ux * vx + uy * vy;\n  if (dot > 1) {\n    dot = 1;\n  }\n  if (dot < -1) {\n    dot = -1;\n  }\n  return sign * Math.acos(dot);\n};\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n  if (radicant < 0) {\n    radicant = 0;\n  }\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n  return [centerx, centery, ang1, ang2];\n};\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n    py = _ref2.py,\n    cx = _ref2.cx,\n    cy = _ref2.cy,\n    rx = _ref2.rx,\n    ry = _ref2.ry,\n    _ref2$xAxisRotation = _ref2.xAxisRotation,\n    xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n    _ref2$largeArcFlag = _ref2.largeArcFlag,\n    largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n    _ref2$sweepFlag = _ref2.sweepFlag,\n    sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n  var curves = [];\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n    _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n    centerx = _getArcCenter2[0],\n    centery = _getArcCenter2[1],\n    ang1 = _getArcCenter2[2],\n    ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n  var segments = Math.max(Math.ceil(ratio), 1);\n  ang2 /= segments;\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n      x1 = _mapToEllipse.x,\n      y1 = _mapToEllipse.y;\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n      x2 = _mapToEllipse2.x,\n      y2 = _mapToEllipse2.y;\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n      x = _mapToEllipse3.x,\n      y = _mapToEllipse3.y;\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      x: x,\n      y: y\n    };\n  });\n};\nexport default arcToBezier;", "/** @ignore */ /** */\nimport { BlendMode } from \"./Renderer\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\n//import { Throttler } from \"../../util/Throttler\";\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\nimport { TextFormatter } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $object from \"../../util/Object\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n/**\r\n * @ignore\r\n */\nfunction checkArgs(name, actual, expected) {\n  if (actual !== expected) {\n    throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction checkMinArgs(name, actual, expected) {\n  if (actual < expected) {\n    throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction checkEvenArgs(name, actual, expected) {\n  checkMinArgs(name, actual, expected);\n  if (actual % expected !== 0) {\n    throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n  }\n}\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\nfunction splitArcFlags(args) {\n  for (let i = 0; i < args.length; i += 7) {\n    let index = i + 3;\n    let flag = args[index];\n    if (flag.length > 1) {\n      const a = /^([01])([01])(.*)$/.exec(flag);\n      if (a !== null) {\n        args.splice(index, 0, a[1]);\n        ++index;\n        args.splice(index, 0, a[2]);\n        ++index;\n        if (a[3].length > 0) {\n          args[index] = a[3];\n        } else {\n          args.splice(index, 1);\n        }\n      }\n    }\n    ++index;\n    flag = args[index];\n    if (flag.length > 1) {\n      const a = /^([01])(.+)$/.exec(flag);\n      if (a !== null) {\n        args.splice(index, 0, a[1]);\n        ++index;\n        args[index] = a[2];\n      }\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction assertBinary(value) {\n  if (value === 0 || value === 1) {\n    return value;\n  } else {\n    throw new Error(\"Flag must be 0 or 1\");\n  }\n}\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\nfunction distributeId(id) {\n  const rgb = [0, 0, 0];\n  for (let i = 0; i < 24; i++) {\n    rgb[i % 3] <<= 1;\n    rgb[i % 3] |= id & 0x01;\n    id >>= 1;\n  }\n  return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\n}\n/**\r\n * @ignore\r\n */\nfunction eachTargets(hitTarget, f) {\n  for (;;) {\n    if (hitTarget.interactive) {\n      if (!f(hitTarget)) {\n        break;\n      }\n    }\n    if (hitTarget._parent) {\n      hitTarget = hitTarget._parent;\n    } else {\n      break;\n    }\n  }\n}\n// TODO feature detection for mouse/touch/pointer\n/**\r\n * @ignore\r\n */\nfunction onPointerEvent(element, name, f) {\n  return $utils.addEventListener(element, $utils.getRendererEvent(name), event => {\n    const target = $utils.getEventTarget(event);\n    let touches = event.touches;\n    if (touches) {\n      if (touches.length == 0) {\n        touches = event.changedTouches;\n      }\n      f($array.copy(touches), target);\n    } else {\n      f([event], target);\n    }\n  });\n}\n/**\r\n * @ignore\r\n */\nfunction isTainted(image) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = 1;\n  canvas.height = 1;\n  const context = canvas.getContext(\"2d\", {\n    willReadFrequently: true\n  });\n  context.drawImage(image, 0, 0, 1, 1);\n  try {\n    context.getImageData(0, 0, 1, 1);\n    return false;\n  } catch (err) {\n    console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n    return true;\n  }\n}\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\nfunction clearCanvas(view) {\n  view.width = 0;\n  view.height = 0;\n  view.style.width = \"0px\";\n  view.style.height = \"0px\";\n}\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\nfunction crisp(x) {\n  return Math.floor(x) + .5;\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasPivot {\n  constructor() {\n    Object.defineProperty(this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n  }\n  get x() {\n    return this._x;\n  }\n  get y() {\n    return this._y;\n  }\n  set x(value) {\n    this._x = value;\n  }\n  set y(value) {\n    this._y = value;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasDisplayObject extends DisposerClass {\n  constructor(renderer) {\n    super();\n    Object.defineProperty(this, \"_layer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"mask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"visible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"exportable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"interactive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"inactive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"wheelable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"cancelTouch\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"isMeasured\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"buttonMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"alpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"compoundAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"angle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"scale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"crisp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"pivot\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new CanvasPivot()\n    });\n    Object.defineProperty(this, \"filter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"cursorOverStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_replacedCursorStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_localMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(this, \"_matrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    // TODO can this be replaced with _localMatrix ?\n    Object.defineProperty(this, \"_uMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(this, \"_renderer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_bounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._renderer = renderer;\n  }\n  subStatus(status) {\n    return {\n      inactive: this.inactive == null ? status.inactive : this.inactive,\n      layer: this._layer || status.layer\n    };\n  }\n  _dispose() {\n    this._renderer._removeObject(this);\n    this.getLayer().dirty = true;\n  }\n  getCanvas() {\n    return this.getLayer().view;\n  }\n  getLayer() {\n    let self = this;\n    for (;;) {\n      if (self._layer) {\n        return self._layer;\n      } else if (self._parent) {\n        self = self._parent;\n      } else {\n        return this._renderer.defaultLayer;\n      }\n    }\n  }\n  setLayer(order, margin) {\n    if (order == null) {\n      this._layer = undefined;\n    } else {\n      const visible = true;\n      this._layer = this._renderer.getLayer(order, visible);\n      this._layer.visible = visible;\n      this._layer.margin = margin;\n      if (margin) {\n        $utils.setInteractive(this._layer.view, false);\n      }\n      this._renderer._ghostLayer.setMargin(this._renderer.layers);\n      if (this._parent) {\n        this._parent.registerChildLayer(this._layer);\n      }\n      this._layer.dirty = true;\n      this._renderer.resizeLayer(this._layer);\n      this._renderer.resizeGhost();\n    }\n  }\n  markDirtyLayer() {\n    this.getLayer().dirty = true;\n  }\n  clear() {\n    this.invalidateBounds();\n  }\n  invalidateBounds() {\n    this._localBounds = undefined;\n  }\n  _addBounds(_bounds) {}\n  _getColorId() {\n    if (this._colorId === undefined) {\n      this._colorId = this._renderer.paintId(this);\n    }\n    return this._colorId;\n  }\n  _isInteractive(status) {\n    return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\n  }\n  _isInteractiveMask(status) {\n    return this._isInteractive(status);\n  }\n  contains(child) {\n    for (;;) {\n      if (child === this) {\n        return true;\n      } else if (child._parent) {\n        child = child._parent;\n      } else {\n        return false;\n      }\n    }\n  }\n  toGlobal(point) {\n    return this._matrix.apply(point);\n  }\n  toLocal(point) {\n    return this._matrix.applyInverse(point);\n  }\n  getLocalMatrix() {\n    this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n    return this._uMatrix;\n  }\n  getLocalBounds() {\n    if (!this._localBounds) {\n      const bn = 10000000;\n      this._localBounds = {\n        left: bn,\n        top: bn,\n        right: -bn,\n        bottom: -bn\n      };\n      this._addBounds(this._localBounds);\n    }\n    return this._localBounds;\n  }\n  getAdjustedBounds(bounds) {\n    this._setMatrix();\n    const matrix = this.getLocalMatrix();\n    const p0 = matrix.apply({\n      x: bounds.left,\n      y: bounds.top\n    });\n    const p1 = matrix.apply({\n      x: bounds.right,\n      y: bounds.top\n    });\n    const p2 = matrix.apply({\n      x: bounds.right,\n      y: bounds.bottom\n    });\n    const p3 = matrix.apply({\n      x: bounds.left,\n      y: bounds.bottom\n    });\n    return {\n      left: Math.min(p0.x, p1.x, p2.x, p3.x),\n      top: Math.min(p0.y, p1.y, p2.y, p3.y),\n      right: Math.max(p0.x, p1.x, p2.x, p3.x),\n      bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n    };\n  }\n  on(key, callback, context) {\n    if (this.interactive) {\n      return this._renderer._addEvent(this, key, callback, context);\n    } else {\n      return new Disposer(() => {});\n    }\n  }\n  _setMatrix() {\n    // TODO only calculate this if it has actually changed\n    this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y,\n    // Converts degrees to radians\n    this.angle * Math.PI / 180, this.scale);\n    this._matrix.copyFrom(this._localMatrix);\n    if (this._parent) {\n      // TODO only calculate this if it has actually changed\n      this._matrix.prepend(this._parent._matrix);\n    }\n  }\n  _transform(context, resolution) {\n    const m = this._matrix;\n    let tx = m.tx * resolution;\n    let ty = m.ty * resolution;\n    if (this.crisp) {\n      tx = crisp(tx);\n      ty = crisp(ty);\n    }\n    context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\n  }\n  _transformMargin(context, resolution, margin) {\n    const m = this._matrix;\n    context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\n  }\n  _transformLayer(context, resolution, layer) {\n    if (layer.margin) {\n      this._transformMargin(context, layer.scale || resolution, layer.margin);\n    } else {\n      this._transform(context, layer.scale || resolution);\n    }\n  }\n  render(status, targetGhostLayer = 0) {\n    if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n      this._setMatrix();\n      const subStatus = this.subStatus(status);\n      const resolution = this._renderer.resolution;\n      const layers = this._renderer.layers;\n      const ghostLayer = this._renderer._ghostLayer;\n      const ghostContext = ghostLayer.context;\n      const mask = this.mask;\n      if (mask) {\n        mask._setMatrix();\n      }\n      // TODO improve this\n      $array.each(layers, layer => {\n        if (layer) {\n          const context = layer.context;\n          context.save();\n          // We must apply the mask before we transform the element\n          if (mask) {\n            mask._transformLayer(context, resolution, layer);\n            mask._runPath(context);\n            context.clip();\n          }\n          context.globalAlpha = this.compoundAlpha * this.alpha;\n          this._transformLayer(context, resolution, layer);\n          if (this.filter) {\n            context.filter = this.filter;\n          }\n        }\n      });\n      ghostContext.save();\n      // We must apply the mask before we transform the element\n      if (mask && this._isInteractiveMask(subStatus)) {\n        mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\n        mask._runPath(ghostContext);\n        ghostContext.clip();\n      }\n      this._transformMargin(ghostContext, resolution, ghostLayer.margin);\n      if (subStatus.layer.order > 0 && !targetGhostLayer) {\n        $array.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\n      }\n      this._render(subStatus, targetGhostLayer);\n      ghostContext.restore();\n      $array.each(layers, layer => {\n        if (layer) {\n          layer.context.restore();\n        }\n      });\n    }\n  }\n  _render(status, _targetGhostLayer = 0) {\n    if (this.exportable === false) {\n      status.layer.tainted = true;\n    }\n  }\n  _ghostOnly(targetGhostLayer = 0) {\n    return targetGhostLayer > 0 ? true : false;\n  }\n  _drawGhost(status, targetGhostLayer = 0) {\n    const interactive = this._isInteractive(status);\n    const order = status.layer.order || 0;\n    return interactive && (order == 0 && !this._ghostOnly(targetGhostLayer) || order == targetGhostLayer) ? true : false;\n  }\n  hovering() {\n    return this._renderer._hovering.has(this);\n  }\n  dragging() {\n    return this._renderer._dragging.some(x => x.value === this);\n  }\n  shouldCancelTouch() {\n    const renderer = this._renderer;\n    if (renderer.tapToActivate && !renderer._touchActive) {\n      return false;\n    }\n    if (this.cancelTouch) {\n      return true;\n    } else if (this._parent) {\n      return this._parent.shouldCancelTouch();\n    }\n    return false;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasContainer extends CanvasDisplayObject {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"interactiveChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"_childLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n  }\n  _isInteractiveMask(status) {\n    return this.interactiveChildren || super._isInteractiveMask(status);\n  }\n  addChild(child) {\n    child._parent = this;\n    this._children.push(child);\n    if (child._layer) {\n      this.registerChildLayer(child._layer);\n    }\n  }\n  addChildAt(child, index) {\n    child._parent = this;\n    this._children.splice(index, 0, child);\n    if (child._layer) {\n      this.registerChildLayer(child._layer);\n    }\n  }\n  removeChild(child) {\n    child._parent = undefined;\n    $array.removeFirst(this._children, child);\n  }\n  _render(status, targetGhostLayer) {\n    super._render(status);\n    const renderer = this._renderer;\n    if (this.interactive && this.interactiveChildren) {\n      ++renderer._forceInteractive;\n    }\n    $array.each(this._children, child => {\n      child.compoundAlpha = this.compoundAlpha * this.alpha;\n      child.render(status, targetGhostLayer);\n    });\n    if (this.interactive && this.interactiveChildren) {\n      --renderer._forceInteractive;\n    }\n  }\n  registerChildLayer(layer) {\n    if (!this._childLayers) {\n      this._childLayers = [];\n    }\n    $array.pushOne(this._childLayers, layer);\n    if (this._parent) {\n      this._parent.registerChildLayer(layer);\n    }\n  }\n  markDirtyLayer(deep = false) {\n    super.markDirtyLayer();\n    if (deep && this._childLayers) {\n      $array.each(this._childLayers, layer => layer.dirty = true);\n    }\n  }\n  _dispose() {\n    super._dispose();\n    if (this._childLayers) {\n      $array.each(this._childLayers, layer => {\n        layer.dirty = true;\n      });\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction setPoint(bounds, point) {\n  bounds.left = Math.min(bounds.left, point.x);\n  bounds.top = Math.min(bounds.top, point.y);\n  bounds.right = Math.max(bounds.right, point.x);\n  bounds.bottom = Math.max(bounds.bottom, point.y);\n}\n/**\r\n * @ignore\r\n */\nclass Op {\n  colorize(_context, _forceColor) {}\n  colorizeGhost(context, forceColor) {\n    this.colorize(context, forceColor);\n  }\n  path(_context) {}\n  pathGhost(context) {\n    this.path(context);\n  }\n  addBounds(_bounds) {}\n}\n/**\r\n * @ignore\r\n */\nclass BeginPath extends Op {\n  colorize(context, _forceColor) {\n    context.beginPath();\n  }\n}\n/**\r\n * @ignore\r\n */\nclass BeginFill extends Op {\n  constructor(color) {\n    super();\n    Object.defineProperty(this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n  }\n  colorize(context, forceColor) {\n    if (forceColor !== undefined) {\n      context.fillStyle = forceColor;\n    } else {\n      context.fillStyle = this.color;\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nclass EndFill extends Op {\n  constructor(clearShadow) {\n    super();\n    Object.defineProperty(this, \"clearShadow\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: clearShadow\n    });\n  }\n  colorize(context, _forceColor) {\n    context.fill();\n    if (this.clearShadow) {\n      context.shadowColor = \"\";\n      context.shadowBlur = 0;\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nclass EndStroke extends Op {\n  colorize(context, _forceColor) {\n    context.stroke();\n  }\n}\n/**\r\n * @ignore\r\n */\nclass LineStyle extends Op {\n  constructor(width, color, lineJoin, lineCap) {\n    super();\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    Object.defineProperty(this, \"lineJoin\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: lineJoin\n    });\n    Object.defineProperty(this, \"lineCap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: lineCap\n    });\n  }\n  colorize(context, forceColor) {\n    if (forceColor !== undefined) {\n      context.strokeStyle = forceColor;\n    } else {\n      context.strokeStyle = this.color;\n    }\n    context.lineWidth = this.width;\n    if (this.lineJoin) {\n      context.lineJoin = this.lineJoin;\n    }\n    if (this.lineCap) {\n      context.lineCap = this.lineCap;\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nclass LineDash extends Op {\n  constructor(dash) {\n    super();\n    Object.defineProperty(this, \"dash\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dash\n    });\n  }\n  colorize(context, _forceColor) {\n    context.setLineDash(this.dash);\n  }\n}\n/**\r\n * @ignore\r\n */\nclass LineDashOffset extends Op {\n  constructor(dashOffset) {\n    super();\n    Object.defineProperty(this, \"dashOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dashOffset\n    });\n  }\n  colorize(context, _forceColor) {\n    context.lineDashOffset = this.dashOffset;\n  }\n}\n/**\r\n * @ignore\r\n */\nclass DrawRect extends Op {\n  constructor(x, y, width, height) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: height\n    });\n  }\n  path(context) {\n    context.rect(this.x, this.y, this.width, this.height);\n  }\n  addBounds(bounds) {\n    const l = this.x;\n    const t = this.y;\n    const r = l + this.width;\n    const b = t + this.height;\n    setPoint(bounds, {\n      x: l,\n      y: t\n    });\n    setPoint(bounds, {\n      x: r,\n      y: t\n    });\n    setPoint(bounds, {\n      x: l,\n      y: b\n    });\n    setPoint(bounds, {\n      x: r,\n      y: b\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass DrawCircle extends Op {\n  constructor(x, y, radius) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n  }\n  path(context) {\n    context.moveTo(this.x + this.radius, this.y);\n    context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n  }\n  // TODO handle skewing and rotation\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.x - this.radius,\n      y: this.y - this.radius\n    });\n    setPoint(bounds, {\n      x: this.x + this.radius,\n      y: this.y + this.radius\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass DrawEllipse extends Op {\n  constructor(x, y, radiusX, radiusY) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(this, \"radiusX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radiusX\n    });\n    Object.defineProperty(this, \"radiusY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radiusY\n    });\n  }\n  path(context) {\n    context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n  }\n  // TODO handle skewing and rotation\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.x - this.radiusX,\n      y: this.y - this.radiusY\n    });\n    setPoint(bounds, {\n      x: this.x + this.radiusX,\n      y: this.y + this.radiusY\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass Arc extends Op {\n  constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\n    super();\n    Object.defineProperty(this, \"cx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cx\n    });\n    Object.defineProperty(this, \"cy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cy\n    });\n    Object.defineProperty(this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    Object.defineProperty(this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: startAngle\n    });\n    Object.defineProperty(this, \"endAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: endAngle\n    });\n    Object.defineProperty(this, \"anticlockwise\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: anticlockwise\n    });\n  }\n  path(context) {\n    if (this.radius > 0) {\n      context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n    }\n  }\n  addBounds(bounds) {\n    let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n    setPoint(bounds, {\n      x: arcBounds.left,\n      y: arcBounds.top\n    });\n    setPoint(bounds, {\n      x: arcBounds.right,\n      y: arcBounds.bottom\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass ArcTo extends Op {\n  constructor(x1, y1, x2, y2, radius) {\n    super();\n    Object.defineProperty(this, \"x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x1\n    });\n    Object.defineProperty(this, \"y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y1\n    });\n    Object.defineProperty(this, \"x2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x2\n    });\n    Object.defineProperty(this, \"y2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y2\n    });\n    Object.defineProperty(this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n  }\n  path(context) {\n    if (this.radius > 0) {\n      context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n    }\n  }\n  // TODO: add points\n  addBounds(_bounds) {\n    /*\r\n    // not finished\r\n    https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n      if (prevPoint) {\r\n        let x1 = prevPoint.x;\r\n        let y1 = prevPoint.y;\r\n        let x2 = this.x2;\r\n        let y2 = this.y2;\r\n        let r = this.radius;\r\n          let xa = (x2 - x1) / 2;\r\n        let ya = (y2 - y1) / 2;\r\n          let x0 = x1 + xa;\r\n        let y0 = y1 + ya;\r\n          let a = Math.hypot(xa, ya);\r\n        let b = Math.sqrt(r * r - a * a);\r\n          let cx = x0 + b * ya / a;\r\n        let cy = y0 - b * xa / a;\r\n          console.log(cx, cy);\r\n    }*/\n  }\n}\n/**\r\n * @ignore\r\n */\nclass LineTo extends Op {\n  constructor(x, y) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n  }\n  path(context) {\n    context.lineTo(this.x, this.y);\n  }\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.x,\n      y: this.y\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass MoveTo extends Op {\n  constructor(x, y) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n  }\n  path(context) {\n    context.moveTo(this.x, this.y);\n  }\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.x,\n      y: this.y\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass ClosePath extends Op {\n  path(context) {\n    context.closePath();\n  }\n}\n/**\r\n * @ignore\r\n */\nclass BezierCurveTo extends Op {\n  constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\n    super();\n    Object.defineProperty(this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(this, \"cpX2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX2\n    });\n    Object.defineProperty(this, \"cpY2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY2\n    });\n    Object.defineProperty(this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n  }\n  path(context) {\n    context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n  }\n  // TODO: OK?\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.cpX,\n      y: this.cpY\n    });\n    setPoint(bounds, {\n      x: this.cpX2,\n      y: this.cpY2\n    });\n    setPoint(bounds, {\n      x: this.toX,\n      y: this.toY\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass QuadraticCurveTo extends Op {\n  constructor(cpX, cpY, toX, toY) {\n    super();\n    Object.defineProperty(this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n  }\n  path(context) {\n    context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n  }\n  // TODO: OK?\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.cpX,\n      y: this.cpY\n    });\n    setPoint(bounds, {\n      x: this.toX,\n      y: this.toY\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nclass Shadow extends Op {\n  constructor(color, blur, offsetX, offsetY, opacity) {\n    super();\n    Object.defineProperty(this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    Object.defineProperty(this, \"blur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: blur\n    });\n    Object.defineProperty(this, \"offsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetX\n    });\n    Object.defineProperty(this, \"offsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetY\n    });\n    Object.defineProperty(this, \"opacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: opacity\n    });\n  }\n  colorize(context, _forceColor) {\n    if (this.opacity) {\n      context.fillStyle = this.color;\n    }\n    context.shadowColor = this.color;\n    context.shadowBlur = this.blur;\n    context.shadowOffsetX = this.offsetX;\n    context.shadowOffsetY = this.offsetY;\n  }\n  colorizeGhost(_context, _forceColor) {}\n}\n/**\r\n * @ignore\r\n */\nclass GraphicsImage extends Op {\n  constructor(image, width, height, x, y) {\n    super();\n    Object.defineProperty(this, \"image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: image\n    });\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: height\n    });\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n  }\n  path(context) {\n    context.drawImage(this.image, this.x, this.y, this.width, this.height);\n  }\n  // TODO: OK?\n  addBounds(bounds) {\n    setPoint(bounds, {\n      x: this.x,\n      y: this.y\n    });\n    setPoint(bounds, {\n      x: this.width,\n      y: this.height\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasGraphics extends CanvasDisplayObject {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_operations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"blendMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: BlendMode.NORMAL\n    });\n    Object.defineProperty(this, \"_hasShadows\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_fillAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_strokeAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  clear() {\n    super.clear();\n    this._operations.length = 0;\n  }\n  _pushOp(op) {\n    this._operations.push(op);\n  }\n  beginFill(color, alpha = 1) {\n    this._fillAlpha = alpha;\n    if (color) {\n      if (color instanceof Color) {\n        this._pushOp(new BeginFill(color.toCSS(alpha)));\n      } else {\n        this.isMeasured = true;\n        this._pushOp(new BeginFill(color));\n      }\n    } else {\n      this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n    }\n  }\n  endFill() {\n    this._pushOp(new EndFill(this._hasShadows));\n  }\n  endStroke() {\n    this._pushOp(new EndStroke());\n  }\n  beginPath() {\n    this._pushOp(new BeginPath());\n  }\n  lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\n    this._strokeAlpha = alpha;\n    if (color) {\n      if (color instanceof Color) {\n        this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\n      } else {\n        this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\n      }\n    } else {\n      this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\n    }\n  }\n  setLineDash(dash) {\n    this._pushOp(new LineDash(dash ? dash : []));\n  }\n  setLineDashOffset(dashOffset = 0) {\n    this._pushOp(new LineDashOffset(dashOffset));\n  }\n  drawRect(x, y, width, height) {\n    this._pushOp(new DrawRect(x, y, width, height));\n  }\n  drawCircle(x, y, radius) {\n    this._pushOp(new DrawCircle(x, y, radius));\n  }\n  drawEllipse(x, y, radiusX, radiusY) {\n    this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\n  }\n  arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\n    this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n  }\n  arcTo(x1, y1, x2, y2, radius) {\n    this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n  }\n  lineTo(x, y) {\n    this._pushOp(new LineTo(x, y));\n  }\n  moveTo(x, y) {\n    this._pushOp(new MoveTo(x, y));\n  }\n  bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n    this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n  }\n  quadraticCurveTo(cpX, cpY, toX, toY) {\n    this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n  }\n  closePath() {\n    this._pushOp(new ClosePath());\n  }\n  shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\n    this._hasShadows = true;\n    this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n  }\n  image(image, width, height, x, y) {\n    this._pushOp(new GraphicsImage(image, width, height, x, y));\n  }\n  // https://svgwg.org/svg2-draft/paths.html#DProperty\n  // TODO better error checking\n  svgPath(path) {\n    let x = 0;\n    let y = 0;\n    let cpx = null;\n    let cpy = null;\n    let qcpx = null;\n    let qcpy = null;\n    const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n    const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n    let match;\n    while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n      const name = match[1];\n      const rest = match[2];\n      const args = [];\n      while ((match = ARGS_REGEXP.exec(rest)) !== null) {\n        args.push(match[1]);\n      }\n      // Reset control point\n      if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n        cpx = null;\n        cpy = null;\n      }\n      // Reset control point\n      if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n        qcpx = null;\n        qcpy = null;\n      }\n      switch (name) {\n        case \"M\":\n          checkEvenArgs(name, args.length, 2);\n          x = +args[0];\n          y = +args[1];\n          this.moveTo(x, y);\n          for (let i = 2; i < args.length; i += 2) {\n            x = +args[i];\n            y = +args[i + 1];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"m\":\n          checkEvenArgs(name, args.length, 2);\n          x += +args[0];\n          y += +args[1];\n          this.moveTo(x, y);\n          for (let i = 2; i < args.length; i += 2) {\n            x += +args[i];\n            y += +args[i + 1];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"L\":\n          checkEvenArgs(name, args.length, 2);\n          for (let i = 0; i < args.length; i += 2) {\n            x = +args[i];\n            y = +args[i + 1];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"l\":\n          checkEvenArgs(name, args.length, 2);\n          for (let i = 0; i < args.length; i += 2) {\n            x += +args[i];\n            y += +args[i + 1];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"H\":\n          checkMinArgs(name, args.length, 1);\n          for (let i = 0; i < args.length; ++i) {\n            x = +args[i];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"h\":\n          checkMinArgs(name, args.length, 1);\n          for (let i = 0; i < args.length; ++i) {\n            x += +args[i];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"V\":\n          checkMinArgs(name, args.length, 1);\n          for (let i = 0; i < args.length; ++i) {\n            y = +args[i];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"v\":\n          checkMinArgs(name, args.length, 1);\n          for (let i = 0; i < args.length; ++i) {\n            y += +args[i];\n            this.lineTo(x, y);\n          }\n          break;\n        case \"C\":\n          checkEvenArgs(name, args.length, 6);\n          for (let i = 0; i < args.length; i += 6) {\n            const x1 = +args[i];\n            const y1 = +args[i + 1];\n            cpx = +args[i + 2];\n            cpy = +args[i + 3];\n            x = +args[i + 4];\n            y = +args[i + 5];\n            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n          }\n          break;\n        case \"c\":\n          checkEvenArgs(name, args.length, 6);\n          for (let i = 0; i < args.length; i += 6) {\n            const x1 = +args[i] + x;\n            const y1 = +args[i + 1] + y;\n            cpx = +args[i + 2] + x;\n            cpy = +args[i + 3] + y;\n            x += +args[i + 4];\n            y += +args[i + 5];\n            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n          }\n          break;\n        case \"S\":\n          checkEvenArgs(name, args.length, 4);\n          if (cpx === null || cpy === null) {\n            cpx = x;\n            cpy = y;\n          }\n          for (let i = 0; i < args.length; i += 4) {\n            const x1 = 2 * x - cpx;\n            const y1 = 2 * y - cpy;\n            cpx = +args[i];\n            cpy = +args[i + 1];\n            x = +args[i + 2];\n            y = +args[i + 3];\n            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n          }\n          break;\n        case \"s\":\n          checkEvenArgs(name, args.length, 4);\n          if (cpx === null || cpy === null) {\n            cpx = x;\n            cpy = y;\n          }\n          for (let i = 0; i < args.length; i += 4) {\n            const x1 = 2 * x - cpx;\n            const y1 = 2 * y - cpy;\n            cpx = +args[i] + x;\n            cpy = +args[i + 1] + y;\n            x += +args[i + 2];\n            y += +args[i + 3];\n            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n          }\n          break;\n        case \"Q\":\n          checkEvenArgs(name, args.length, 4);\n          for (let i = 0; i < args.length; i += 4) {\n            qcpx = +args[i];\n            qcpy = +args[i + 1];\n            x = +args[i + 2];\n            y = +args[i + 3];\n            this.quadraticCurveTo(qcpx, qcpy, x, y);\n          }\n          break;\n        case \"q\":\n          checkEvenArgs(name, args.length, 4);\n          for (let i = 0; i < args.length; i += 4) {\n            qcpx = +args[i] + x;\n            qcpy = +args[i + 1] + y;\n            x += +args[i + 2];\n            y += +args[i + 3];\n            this.quadraticCurveTo(qcpx, qcpy, x, y);\n          }\n          break;\n        case \"T\":\n          checkEvenArgs(name, args.length, 2);\n          if (qcpx === null || qcpy === null) {\n            qcpx = x;\n            qcpy = y;\n          }\n          for (let i = 0; i < args.length; i += 2) {\n            qcpx = 2 * x - qcpx;\n            qcpy = 2 * y - qcpy;\n            x = +args[i];\n            y = +args[i + 1];\n            this.quadraticCurveTo(qcpx, qcpy, x, y);\n          }\n          break;\n        case \"t\":\n          checkEvenArgs(name, args.length, 2);\n          if (qcpx === null || qcpy === null) {\n            qcpx = x;\n            qcpy = y;\n          }\n          for (let i = 0; i < args.length; i += 2) {\n            qcpx = 2 * x - qcpx;\n            qcpy = 2 * y - qcpy;\n            x += +args[i];\n            y += +args[i + 1];\n            this.quadraticCurveTo(qcpx, qcpy, x, y);\n          }\n          break;\n        case \"A\":\n        case \"a\":\n          const relative = name === \"a\";\n          splitArcFlags(args);\n          checkEvenArgs(name, args.length, 7);\n          for (let i = 0; i < args.length; i += 7) {\n            let cx = +args[i + 5];\n            let cy = +args[i + 6];\n            if (relative) {\n              cx += x;\n              cy += y;\n            }\n            const bs = arcToBezier({\n              px: x,\n              py: y,\n              rx: +args[i],\n              ry: +args[i + 1],\n              xAxisRotation: +args[i + 2],\n              largeArcFlag: assertBinary(+args[i + 3]),\n              sweepFlag: assertBinary(+args[i + 4]),\n              cx,\n              cy\n            });\n            $array.each(bs, b => {\n              this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n              x = b.x;\n              y = b.y;\n            });\n          }\n          break;\n        case \"Z\":\n        case \"z\":\n          checkArgs(name, args.length, 0);\n          this.closePath();\n          break;\n      }\n    }\n  }\n  _runPath(context) {\n    context.beginPath();\n    $array.each(this._operations, op => {\n      op.path(context);\n    });\n  }\n  _render(status, targetGhostLayer = 0) {\n    super._render(status);\n    const layerDirty = status.layer.dirty;\n    const interactive = this._isInteractive(status);\n    const ghostOnly = this._ghostOnly(targetGhostLayer);\n    const drawGhost = this._drawGhost(status, targetGhostLayer);\n    if (layerDirty || interactive || ghostOnly) {\n      const context = status.layer.context;\n      const ghostContext = this._renderer._ghostLayer.context;\n      if (layerDirty && !ghostOnly) {\n        context.globalCompositeOperation = this.blendMode;\n        context.beginPath();\n      }\n      let color;\n      if (drawGhost) {\n        ghostContext.beginPath();\n        color = this._getColorId();\n      }\n      $array.each(this._operations, op => {\n        if (layerDirty && !ghostOnly) {\n          op.path(context);\n          op.colorize(context, undefined);\n        }\n        if (drawGhost) {\n          op.pathGhost(ghostContext);\n          op.colorizeGhost(ghostContext, color);\n        }\n      });\n    }\n  }\n  renderDetached(context) {\n    if (this.visible) {\n      this._setMatrix();\n      context.save();\n      // We must apply the mask before we transform the element\n      const mask = this.mask;\n      if (mask) {\n        mask._setMatrix();\n        mask._transform(context, 1);\n        mask._runPath(context);\n        context.clip();\n      }\n      // TODO handle compoundAlpha somehow ?\n      context.globalAlpha = this.compoundAlpha * this.alpha;\n      this._transform(context, 1);\n      if (this.filter) {\n        context.filter = this.filter;\n      }\n      context.globalCompositeOperation = this.blendMode;\n      context.beginPath();\n      $array.each(this._operations, op => {\n        op.path(context);\n        op.colorize(context, undefined);\n      });\n      context.restore();\n    }\n  }\n  _addBounds(bounds) {\n    if (this.visible && this.isMeasured) {\n      $array.each(this._operations, op => {\n        op.addBounds(bounds);\n      });\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasText extends CanvasDisplayObject {\n  constructor(renderer, text, style) {\n    super(renderer);\n    Object.defineProperty(this, \"text\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"style\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"textVisible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"truncated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_textInfo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_originalScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    this.text = text;\n    this.style = style;\n  }\n  invalidateBounds() {\n    super.invalidateBounds();\n    this._textInfo = undefined;\n  }\n  _shared(context) {\n    if (this.style.textAlign) {\n      context.textAlign = this.style.textAlign;\n    }\n    if (this.style.direction) {\n      context.direction = this.style.direction;\n    }\n    if (this.style.textBaseline) {\n      context.textBaseline = this.style.textBaseline;\n    }\n  }\n  _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\n    super._render(status);\n    const context = status.layer.context;\n    const ghostContext = this._renderer._ghostLayer.context;\n    // Font style\n    const style = this.style;\n    let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n    context.font = fontStyle;\n    if (this._isInteractive(status) && !ignoreGhost) {\n      ghostContext.font = fontStyle;\n    }\n    // Other parameters\n    if (style.fill) {\n      if (style.fill instanceof Color) {\n        context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n      } else {\n        context.fillStyle = style.fill;\n      }\n    }\n    if (style.shadowColor) {\n      status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n    }\n    if (style.shadowBlur) {\n      status.layer.context.shadowBlur = style.shadowBlur;\n    }\n    if (style.shadowOffsetX) {\n      status.layer.context.shadowOffsetX = style.shadowOffsetX;\n    }\n    if (style.shadowOffsetY) {\n      status.layer.context.shadowOffsetY = style.shadowOffsetY;\n    }\n    this._shared(context);\n    if (this._isInteractive(status) && !ignoreGhost) {\n      ghostContext.fillStyle = this._getColorId();\n      this._shared(ghostContext);\n    }\n  }\n  _getFontStyle(style2, ignoreFontWeight = false) {\n    // Process defaults\n    const style = this.style;\n    let fontStyle = [];\n    if (style2 && style2.fontVariant) {\n      fontStyle.push(style2.fontVariant);\n    } else if (style.fontVariant) {\n      fontStyle.push(style.fontVariant);\n    }\n    if (!ignoreFontWeight) {\n      if (style2 && style2.fontWeight) {\n        fontStyle.push(style2.fontWeight);\n      } else if (style.fontWeight) {\n        fontStyle.push(style.fontWeight);\n      }\n    }\n    if (style2 && style2.fontStyle) {\n      fontStyle.push(style2.fontStyle);\n    } else if (style.fontStyle) {\n      fontStyle.push(style.fontStyle);\n    }\n    if (style2 && style2.fontSize) {\n      if ($type.isNumber(style2.fontSize)) {\n        style2.fontSize = style2.fontSize + \"px\";\n      }\n      fontStyle.push(style2.fontSize);\n    } else if (style.fontSize) {\n      if ($type.isNumber(style.fontSize)) {\n        style.fontSize = style.fontSize + \"px\";\n      }\n      fontStyle.push(style.fontSize);\n    }\n    if (style2 && style2.fontFamily) {\n      fontStyle.push(style2.fontFamily);\n    } else if (style.fontFamily) {\n      fontStyle.push(style.fontFamily);\n    } else if (fontStyle.length) {\n      fontStyle.push(\"Arial\");\n    }\n    return fontStyle.join(\" \");\n  }\n  _render(status, targetGhostLayer = 0) {\n    // We need measurements in order to properly position text for alignment\n    if (!this._textInfo) {\n      this._measure(status);\n    }\n    if (this.textVisible) {\n      const interactive = this._isInteractive(status);\n      const context = status.layer.context;\n      const layerDirty = status.layer.dirty;\n      const ghostContext = this._renderer._ghostLayer.context;\n      const ghostOnly = this._ghostOnly(targetGhostLayer);\n      const drawGhost = this._drawGhost(status, targetGhostLayer);\n      context.save();\n      ghostContext.save();\n      this._prerender(status);\n      // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n      // Process text info produced by _measure()\n      $array.each(this._textInfo, (line, _index) => {\n        $array.each(line.textChunks, (chunk, _index) => {\n          // Set style\n          if (chunk.style) {\n            context.save();\n            ghostContext.save();\n            if (!ghostOnly) {\n              context.font = chunk.style;\n            }\n            if (this._isInteractive(status)) {\n              ghostContext.font = chunk.style;\n            }\n          }\n          if (chunk.fill) {\n            context.save();\n            if (!ghostOnly) {\n              context.fillStyle = chunk.fill.toCSS();\n            }\n            // Color does not affect ghostContext so we not set it\n          }\n          // Draw text\n          if (layerDirty && !ghostOnly) {\n            context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n          }\n          // Draw underline\n          if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n            let thickness = 1;\n            let offset = 1;\n            let fontSize = chunk.height;\n            const oversizedBehavior = this.style.oversizedBehavior || \"\";\n            if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\n              // Measure actual width of the text so the line fits\n              const metrics = this._measureText(chunk.text, context);\n              chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n            }\n            let offsetX = chunk.offsetX;\n            switch (this.style.textAlign) {\n              case \"right\":\n              case \"end\":\n                offsetX -= chunk.width;\n                break;\n              case \"center\":\n                offsetX -= chunk.width / 2;\n                break;\n            }\n            if (chunk.style) {\n              const format = TextFormatter.getTextStyle(chunk.style);\n              switch (format.fontWeight) {\n                case \"bolder\":\n                case \"bold\":\n                case \"700\":\n                case \"800\":\n                case \"900\":\n                  thickness = 2;\n                  break;\n              }\n            }\n            if (fontSize) {\n              offset = fontSize / 20;\n            }\n            let y;\n            if (chunk.textDecoration == \"line-through\") {\n              y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n            } else {\n              y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n            }\n            if (!ghostOnly) {\n              context.save();\n              context.beginPath();\n              if (chunk.fill) {\n                context.strokeStyle = chunk.fill.toCSS();\n              } else if (this.style.fill && this.style.fill instanceof Color) {\n                context.strokeStyle = this.style.fill.toCSS();\n              }\n              context.lineWidth = thickness * offset;\n              context.moveTo(offsetX, y);\n              context.lineTo(offsetX + chunk.width, y);\n              context.stroke();\n              context.restore();\n            }\n          }\n          if (interactive && this.interactive && drawGhost) {\n            // Draw text in ghost canvas ONLY if it is set as interactive\n            // explicitly. This way we avoid hit test anomalies caused by anti\n            // aliasing of text.\n            ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n          }\n          if (chunk.fill) {\n            context.restore();\n            // Color does not affect ghostContext so we not set it\n          }\n          // Reset style\n          if (chunk.style) {\n            context.restore();\n            ghostContext.restore();\n          }\n        });\n      });\n      context.restore();\n      ghostContext.restore();\n    }\n  }\n  _addBounds(bounds) {\n    if (this.visible && this.isMeasured) {\n      //if (this._textVisible) {\n      const x = this._measure({\n        inactive: this.inactive,\n        layer: this.getLayer()\n      });\n      setPoint(bounds, {\n        x: x.left,\n        y: x.top\n      });\n      setPoint(bounds, {\n        x: x.right,\n        y: x.bottom\n      });\n      //}\n    }\n  }\n  _ignoreFontWeight() {\n    return /apple/i.test(navigator.vendor);\n  }\n  _measure(status) {\n    const context = status.layer.context;\n    const ghostContext = this._renderer._ghostLayer.context;\n    const rtl = this.style.direction == \"rtl\";\n    // Reset text info\n    this._textInfo = [];\n    // Init\n    const oversizedBehavior = this.style.oversizedBehavior;\n    const maxWidth = this.style.maxWidth;\n    const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n    const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n    // Pre-render\n    context.save();\n    ghostContext.save();\n    this._prerender(status, true, this._ignoreFontWeight());\n    // Get default font metrix\n    const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n    // Split up text into lines\n    const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n    let styleRestored = true;\n    let minX = 0;\n    let maxX = 0;\n    // Iterate through the lines\n    let offsetY = 0;\n    let currentStyle;\n    $array.each(lines, (line, _index) => {\n      // Split up line into format/value chunks\n      let chunks;\n      if (line == \"\") {\n        chunks = [{\n          type: \"value\",\n          text: \"\"\n        }];\n      } else {\n        chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n      }\n      while (chunks.length > 0) {\n        // Init line object\n        let lineInfo = {\n          offsetY: offsetY,\n          ascent: 0,\n          width: 0,\n          height: 0,\n          left: 0,\n          right: 0,\n          textChunks: []\n        };\n        // Measure reference text\n        const metrics = this._measureText(refText, context);\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n        lineInfo.height = height;\n        lineInfo.ascent = metrics.actualBoundingBoxAscent;\n        let currentFormat;\n        let currentDecoration = this.style.textDecoration;\n        let currentFill;\n        let currentChunkWidth;\n        let skipFurtherText = false;\n        let firstTextChunk = true;\n        let leftoverChunks = [];\n        let currentVerticalAlign;\n        //let offsetX = 0;\n        //let chunk;\n        //while(chunk = chunks.shift()) {\n        $array.eachContinue(chunks, (chunk, index) => {\n          // Format chunk\n          if (chunk.type == \"format\") {\n            if (chunk.text == \"[/]\") {\n              if (!styleRestored) {\n                context.restore();\n                ghostContext.restore();\n                styleRestored = true;\n              }\n              currentFill = undefined;\n              currentStyle = undefined;\n              currentChunkWidth = undefined;\n              currentDecoration = this.style.textDecoration;\n              currentVerticalAlign = undefined;\n              currentFormat = chunk.text;\n            } else {\n              if (!styleRestored) {\n                context.restore();\n                ghostContext.restore();\n              }\n              let format = TextFormatter.getTextStyle(chunk.text);\n              const fontStyle = this._getFontStyle(format);\n              context.save();\n              ghostContext.save();\n              context.font = fontStyle;\n              currentStyle = fontStyle;\n              currentFormat = chunk.text;\n              if (format.textDecoration) {\n                currentDecoration = format.textDecoration;\n              }\n              if (format.fill) {\n                currentFill = format.fill;\n              }\n              if (format.width) {\n                currentChunkWidth = $type.toNumber(format.width);\n              }\n              if (format.verticalAlign) {\n                currentVerticalAlign = format.verticalAlign;\n              }\n              styleRestored = false;\n              // Measure reference text after change of format\n              const metrics = this._measureText(refText, context);\n              const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n              if (height > lineInfo.height) {\n                lineInfo.height = height;\n              }\n              if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\n              }\n            }\n          }\n          // Text chunk\n          else if (chunk.type == \"value\" && !skipFurtherText) {\n            // Measure\n            const metrics = this._measureText(chunk.text, context);\n            let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n            // Check for fit\n            if (truncate) {\n              this.truncated = undefined;\n              // Break words?\n              let breakWords = firstTextChunk || this.style.breakWords || false;\n              // Measure ellipsis and check if it fits\n              const ellipsis = this.style.ellipsis || \"\";\n              const ellipsisMetrics = this._measureText(ellipsis, context);\n              const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n              // Check fit\n              if (lineInfo.width + chunkWidth > maxWidth) {\n                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n                chunk.text += ellipsis;\n                skipFurtherText = true;\n                this.truncated = true;\n              }\n            } else if (wrap) {\n              // Check fit\n              if (lineInfo.width + chunkWidth > maxWidth) {\n                const excessWidth = maxWidth - lineInfo.width;\n                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\");\n                if (tmpText == \"\") {\n                  // Unable to fit a single letter - hide the whole label\n                  this.textVisible = true;\n                  return false;\n                }\n                //skipFurtherText = true;\n                //Add remaining chunks for the next line\n                leftoverChunks = chunks.slice(index + 1);\n                //Add remaining text of current chunk if it was forced-cut\n                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n                  leftoverChunks.unshift({\n                    type: \"value\",\n                    text: chunk.text.substr(tmpText.length)\n                  });\n                  if (currentFormat) {\n                    leftoverChunks.unshift({\n                      type: \"format\",\n                      text: currentFormat\n                    });\n                  }\n                }\n                // Set current chunk (truncated)\n                chunk.text = $utils.trim(tmpText);\n                chunks = [];\n                skipFurtherText = true;\n              }\n            }\n            // Chunk width?\n            let leftBoundMod = 1;\n            let rightBoundMod = 1;\n            if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n              // increase horizontal bounding boxes accordingly\n              const boundsMod = chunkWidth / currentChunkWidth;\n              switch (this.style.textAlign) {\n                case \"right\":\n                case \"end\":\n                  leftBoundMod = boundsMod;\n                  break;\n                case \"center\":\n                  leftBoundMod = boundsMod;\n                  rightBoundMod = boundsMod;\n                  break;\n                default:\n                  rightBoundMod = boundsMod;\n              }\n              chunkWidth = currentChunkWidth;\n            }\n            const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n            if (chunkHeight > lineInfo.height) {\n              lineInfo.height = chunkHeight;\n            }\n            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n              lineInfo.ascent = metrics.actualBoundingBoxAscent;\n            }\n            lineInfo.width += chunkWidth;\n            lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n            lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n            lineInfo.textChunks.push({\n              style: currentStyle,\n              fill: currentFill,\n              text: chunk.text,\n              width: chunkWidth,\n              height: chunkHeight,\n              left: metrics.actualBoundingBoxLeft,\n              right: metrics.actualBoundingBoxRight,\n              ascent: metrics.actualBoundingBoxAscent,\n              offsetX: 0,\n              offsetY: 0,\n              textDecoration: currentDecoration,\n              verticalAlign: currentVerticalAlign\n            });\n            //offsetX += chunkWidth;\n            firstTextChunk = false;\n          }\n          if (leftoverChunks) {\n            //return false;\n          }\n          return true;\n          //}\n        });\n        if (this.style.lineHeight instanceof Percent) {\n          lineInfo.height *= this.style.lineHeight.value;\n          lineInfo.ascent *= this.style.lineHeight.value;\n        } else {\n          lineInfo.height *= this.style.lineHeight || 1.2;\n          lineInfo.ascent *= this.style.lineHeight || 1.2;\n        }\n        if (minX < lineInfo.left) {\n          minX = lineInfo.left;\n        }\n        if (maxX < lineInfo.right) {\n          maxX = lineInfo.right;\n        }\n        this._textInfo.push(lineInfo);\n        //lineInfo.offsetY += lineInfo.ascent;\n        offsetY += lineInfo.height;\n        // Reset chunks so that it can proceed to the next line\n        chunks = leftoverChunks || [];\n      }\n    });\n    if (!styleRestored) {\n      context.restore();\n      ghostContext.restore();\n    }\n    // Adjust chunk internal offsets\n    $array.each(this._textInfo, (lineInfo, _index) => {\n      let currentChunkOffset = 0;\n      $array.each(lineInfo.textChunks, chunk => {\n        chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n        chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n        currentChunkOffset += chunk.width;\n        if (chunk.verticalAlign) {\n          switch (chunk.verticalAlign) {\n            case \"super\":\n              chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n              break;\n            case \"sub\":\n              chunk.offsetY += chunk.height / 2;\n              break;\n          }\n        }\n      });\n    });\n    const bounds = {\n      left: rtl ? -maxX : -minX,\n      top: 0,\n      right: rtl ? minX : maxX,\n      bottom: offsetY\n    };\n    // We need to fit?\n    if (oversizedBehavior !== \"none\") {\n      const ratio = this._fitRatio(bounds);\n      if (ratio < 1) {\n        if (oversizedBehavior == \"fit\") {\n          if ($type.isNumber(this.style.minScale) && ratio < this.style.minScale) {\n            this.textVisible = false;\n            bounds.left = 0;\n            bounds.top = 0;\n            bounds.right = 0;\n            bounds.bottom = 0;\n          } else {\n            if (!this._originalScale) {\n              this._originalScale = this.scale;\n            }\n            this.scale = ratio;\n            this.textVisible = true;\n          }\n        } else if (oversizedBehavior == \"hide\") {\n          this.textVisible = false;\n          bounds.left = 0;\n          bounds.top = 0;\n          bounds.right = 0;\n          bounds.bottom = 0;\n        } else {\n          switch (this.style.textAlign) {\n            case \"right\":\n            case \"end\":\n              bounds.left = rtl ? maxWidth : -maxWidth;\n              bounds.right = 0;\n              break;\n            case \"center\":\n              bounds.left = -maxWidth / 2;\n              bounds.right = maxWidth / 2;\n              break;\n            default:\n              bounds.left = 0;\n              bounds.right = rtl ? -maxWidth : maxWidth;\n          }\n          this.scale = this._originalScale || 1;\n          this._originalScale = undefined;\n          this.textVisible = true;\n        }\n      } else {\n        this.scale = this._originalScale || 1;\n        this._originalScale = undefined;\n        this.textVisible = true;\n      }\n    }\n    context.restore();\n    ghostContext.restore();\n    return bounds;\n  }\n  _fitRatio(bounds) {\n    const maxW = this.style.maxWidth;\n    const maxH = this.style.maxHeight;\n    if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n      return 1;\n    }\n    const w = bounds.right - bounds.left;\n    const h = bounds.bottom - bounds.top;\n    return Math.min(maxW / w || 1, maxH / h || 1);\n  }\n  _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\n    let width;\n    do {\n      if (breakWords) {\n        text = text.slice(0, -1);\n      } else {\n        let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\n        if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\n          breakWords = true;\n        } else if (tmp == \"\") {\n          return text;\n        } else {\n          text = tmp;\n        }\n      }\n      const metrics = this._measureText(text, context);\n      width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n    } while (width > maxWidth && text != \"\");\n    return text;\n  }\n  _measureText(text, context) {\n    let metrics = context.measureText(text);\n    let fakeMetrics = {};\n    if (metrics.actualBoundingBoxAscent == null) {\n      const div = document.createElement(\"div\");\n      div.innerText = text;\n      div.style.visibility = \"hidden\";\n      div.style.position = \"absolute\";\n      div.style.top = \"-1000000px;\";\n      div.style.fontFamily = this.style.fontFamily || \"\";\n      div.style.fontSize = this.style.fontSize + \"\";\n      document.body.appendChild(div);\n      const bbox = div.getBoundingClientRect();\n      document.body.removeChild(div);\n      const h = bbox.height;\n      const w = metrics.width;\n      let left = 0;\n      let right = w;\n      fakeMetrics = {\n        actualBoundingBoxAscent: h,\n        actualBoundingBoxDescent: 0,\n        actualBoundingBoxLeft: left,\n        actualBoundingBoxRight: right,\n        fontBoundingBoxAscent: h,\n        fontBoundingBoxDescent: 0,\n        width: w\n      };\n      //return fake;\n    } else {\n      fakeMetrics = {\n        actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n        actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n        actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n        actualBoundingBoxRight: metrics.actualBoundingBoxRight,\n        fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n        fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n        width: metrics.width\n      };\n    }\n    const w = metrics.width;\n    switch (this.style.textAlign) {\n      case \"right\":\n      case \"end\":\n        fakeMetrics.actualBoundingBoxLeft = w;\n        fakeMetrics.actualBoundingBoxRight = 0;\n        break;\n      case \"center\":\n        fakeMetrics.actualBoundingBoxLeft = w / 2;\n        fakeMetrics.actualBoundingBoxRight = w / 2;\n        break;\n      default:\n        fakeMetrics.actualBoundingBoxLeft = 0;\n        fakeMetrics.actualBoundingBoxRight = w;\n    }\n    return fakeMetrics;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasTextStyle {\n  constructor() {\n    //public wordWrapWidth: number = 100;\n    Object.defineProperty(this, \"fill\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fillOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textAlign\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontFamily\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontWeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontVariant\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textDecoration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // leading?: number;\n    // letterSpacing?: number;\n    Object.defineProperty(this, \"lineHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: percent(120)\n    });\n    Object.defineProperty(this, \"baselineRatio\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0.19\n    });\n    // padding?: number;\n    // stroke?: number;\n    // strokeThickness?: number;\n    // trim?: number;\n    // wordWrap?: boolean;\n    Object.defineProperty(this, \"direction\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textBaseline\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"oversizedBehavior\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"none\"\n    });\n    Object.defineProperty(this, \"breakWords\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ellipsis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"…\"\n    });\n    Object.defineProperty(this, \"maxWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"maxHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"minScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ignoreFormatting\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasRadialText extends CanvasText {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"textType\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"circular\"\n    });\n    Object.defineProperty(this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inside\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"orientation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"auto\"\n    });\n    Object.defineProperty(this, \"kerning\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_textReversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _render(status, targetGhostLayer = 0) {\n    switch (this.textType) {\n      case \"circular\":\n        this._renderCircular(status, targetGhostLayer);\n        break;\n      default:\n        super._render(status, targetGhostLayer);\n        break;\n    }\n  }\n  _renderCircular(status, targetGhostLayer = 0) {\n    if (this.textVisible) {\n      this._prerender(status);\n      const interactive = this._isInteractive(status);\n      const context = status.layer.context;\n      const layerDirty = status.layer.dirty;\n      const ghostContext = this._renderer._ghostLayer.context;\n      // Savepoint\n      context.save();\n      if (interactive) {\n        ghostContext.save();\n      }\n      // We need measurements in order to properly position text for alignment\n      if (!this._textInfo) {\n        this._measure(status);\n      }\n      // Init\n      let radius = this.radius || 0;\n      let startAngle = this.startAngle || 0;\n      let deltaAngle = 0;\n      let orientation = this.orientation;\n      let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n      const inside = this.inside;\n      const align = this.style.textAlign || \"left\";\n      const kerning = this.kerning || 0;\n      let clockwise = align == \"left\" ? 1 : -1;\n      const shouldReverse = !this._textReversed;\n      const ghostOnly = this._ghostOnly(targetGhostLayer);\n      const drawGhost = this._drawGhost(status, targetGhostLayer);\n      // Check if we need to invert the whole stuff\n      if (inward == \"auto\") {\n        // Calc max angle so we know whether we need to flip it\n        let maxAngle = 0;\n        let midAngle = 0;\n        $array.each(this._textInfo, (line, _index) => {\n          const deltaAngle = startAngle + line.width / (radius - line.height) / 2 * -clockwise;\n          if (deltaAngle > maxAngle) {\n            maxAngle = deltaAngle;\n          }\n        });\n        if (align == \"left\") {\n          midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n        } else if (align == \"right\") {\n          midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n        } else {\n          midAngle = startAngle * $math.DEGREES;\n        }\n        midAngle = $math.normalizeAngle(midAngle);\n        inward = midAngle >= 270 || midAngle <= 90;\n      }\n      if (inward == true && shouldReverse) {\n        this._textInfo.reverse();\n        this._textReversed = true;\n      }\n      // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n      // \tclockwise *= -1;\n      // }\n      // Process text info produced by _measure()\n      $array.each(this._textInfo, (line, _index) => {\n        const textHeight = line.height;\n        // Adjust radius (for `inside = false`)\n        // Radius adjustment for `inside = false` is below the line calculation\n        if (!inside) {\n          radius += textHeight;\n        }\n        // Reverse letters if we're painting them counter-clockwise\n        if ((clockwise == -1 && inward || clockwise == 1 && !inward) && shouldReverse) {\n          line.textChunks.reverse();\n        }\n        // Init angles\n        let lineStartAngle = startAngle;\n        deltaAngle = 0;\n        // Adjust for center-align\n        if (align == \"center\") {\n          lineStartAngle += line.width / (radius - textHeight) / 2 * -clockwise;\n          deltaAngle = lineStartAngle - startAngle;\n        }\n        // if (inward == \"auto\") {\n        // \tlet midAngle;\n        // \tif (align == \"left\") {\n        // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n        // \t}\n        // \telse if () {\n        // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n        // \t}\n        // \tinward = (midAngle >= 270) || (midAngle <= 90);\n        // }\n        // Rotate letters if they are facing outward\n        lineStartAngle += Math.PI * (inward ? 0 : 1); // Rotate 180 if outward\n        // Savepoint\n        context.save();\n        if (interactive) {\n          ghostContext.save();\n        }\n        // Assume starting angle\n        if (!ghostOnly) {\n          context.rotate(lineStartAngle);\n        }\n        if (interactive) {\n          ghostContext.rotate(lineStartAngle);\n        }\n        let angleShift = 0;\n        $array.each(line.textChunks, (chunk, _index) => {\n          // Draw the letter\n          const char = chunk.text;\n          const charWidth = chunk.width;\n          // Rotate half a letter\n          angleShift = charWidth / 2 / (radius - textHeight) * clockwise;\n          if (!ghostOnly) {\n            context.rotate(angleShift);\n          }\n          if (interactive) {\n            ghostContext.rotate(angleShift);\n          }\n          // Set style\n          if (chunk.style) {\n            context.save();\n            ghostContext.save();\n            if (!ghostOnly) {\n              context.font = chunk.style;\n            }\n            if (interactive) {\n              ghostContext.font = chunk.style;\n            }\n          }\n          if (chunk.fill) {\n            context.save();\n            if (!ghostOnly) {\n              context.fillStyle = chunk.fill.toCSS();\n            }\n            // Color does not affect ghostContext so we not set it\n          }\n          // Center letters\n          if (!ghostOnly) {\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n          }\n          if (interactive) {\n            ghostContext.textBaseline = \"middle\";\n            ghostContext.textAlign = \"center\";\n          }\n          // Plop the letter\n          if (layerDirty && !ghostOnly) {\n            context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n          }\n          if (interactive && drawGhost) {\n            ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n          }\n          if (chunk.fill) {\n            context.restore();\n            // Color does not affect ghostContext so we not set it\n          }\n          // Reset style\n          if (chunk.style) {\n            context.restore();\n            ghostContext.restore();\n          }\n          // Rotate half a letter and add spacing\n          angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n          if (!ghostOnly) {\n            context.rotate(angleShift);\n          }\n          if (interactive) {\n            ghostContext.rotate(angleShift);\n          }\n        });\n        // Restore angle\n        context.restore();\n        if (interactive) {\n          ghostContext.restore();\n        }\n        // Adjust radius (for `inside = true`)\n        if (inside) {\n          radius -= textHeight;\n        }\n      });\n      // Restore\n      context.restore();\n      if (interactive) {\n        ghostContext.restore();\n      }\n    }\n  }\n  _measure(status) {\n    switch (this.textType) {\n      case \"circular\":\n        return this._measureCircular(status);\n      default:\n        return super._measure(status);\n    }\n  }\n  _measureCircular(status) {\n    const context = status.layer.context;\n    const ghostContext = this._renderer._ghostLayer.context;\n    const rtl = this.style.direction == \"rtl\";\n    const oversizedBehavior = this.style.oversizedBehavior;\n    const maxWidth = this.style.maxWidth;\n    const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n    const ellipsis = this.style.ellipsis || \"\";\n    let ellipsisMetrics;\n    //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n    // Reset text info\n    this.textVisible = true;\n    this._textInfo = [];\n    this._textReversed = false;\n    // Pre-render\n    context.save();\n    ghostContext.save();\n    this._prerender(status, true);\n    // Split up text into lines\n    const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n    let styleRestored = true;\n    let totalWidth = 0;\n    // Iterate through the lines\n    let offsetY = 0;\n    $array.each(lines, (line, _index) => {\n      // Split up line into format/value chunks\n      let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n      // Init line object\n      let lineInfo = {\n        offsetY: offsetY,\n        ascent: 0,\n        width: 0,\n        height: 0,\n        left: 0,\n        right: 0,\n        textChunks: []\n      };\n      let currentStyle;\n      let currentFill;\n      let currentChunkWidth;\n      //while(chunk = chunks.shift()) {\n      $array.each(chunks, (chunk, _index) => {\n        // Format chunk\n        if (chunk.type == \"format\") {\n          if (chunk.text == \"[/]\") {\n            if (!styleRestored) {\n              context.restore();\n              ghostContext.restore();\n              styleRestored = true;\n            }\n            currentFill = undefined;\n            currentStyle = undefined;\n            currentChunkWidth = undefined;\n          } else {\n            let format = TextFormatter.getTextStyle(chunk.text);\n            const fontStyle = this._getFontStyle(format);\n            context.save();\n            ghostContext.save();\n            context.font = fontStyle;\n            currentStyle = fontStyle;\n            if (format.fill) {\n              currentFill = format.fill;\n            }\n            if (format.width) {\n              currentChunkWidth = $type.toNumber(format.width);\n            }\n            styleRestored = false;\n          }\n          if (truncate) {\n            ellipsisMetrics = this._measureText(ellipsis, context);\n          }\n        }\n        // Text format\n        else if (chunk.type == \"value\") {\n          // Measure each letter\n          let chars = chunk.text.match(/./ug) || [];\n          if (rtl) {\n            chars = $utils.splitString(chunk.text);\n            chars.reverse();\n          }\n          for (let i = 0; i < chars.length; i++) {\n            const char = chars[i];\n            // Measure\n            const metrics = this._measureText(char, context);\n            let chunkWidth = metrics.width;\n            // Chunk width?\n            if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n              chunkWidth = currentChunkWidth;\n            }\n            const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n            if (chunkHeight > lineInfo.height) {\n              lineInfo.height = chunkHeight;\n            }\n            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n              lineInfo.ascent = metrics.actualBoundingBoxAscent;\n            }\n            totalWidth += chunkWidth;\n            // Handle oversized behavior\n            if (truncate) {\n              // Measure ellipsis and check if it fits\n              if (!ellipsisMetrics) {\n                ellipsisMetrics = this._measureText(ellipsis, context);\n              }\n              const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n              //totalWidth += ellipsisWidth;\n              if (totalWidth + ellipsisWidth > maxWidth) {\n                if (lineInfo.textChunks.length == 1) {\n                  this.textVisible = false;\n                } else {\n                  lineInfo.width += ellipsisWidth;\n                  lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n                  lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n                  lineInfo.textChunks.push({\n                    style: currentStyle,\n                    fill: currentFill,\n                    text: ellipsis,\n                    width: ellipsisWidth,\n                    height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n                    left: ellipsisMetrics.actualBoundingBoxLeft,\n                    right: ellipsisMetrics.actualBoundingBoxRight,\n                    ascent: ellipsisMetrics.actualBoundingBoxAscent,\n                    offsetX: 0,\n                    offsetY: chunkHeight,\n                    textDecoration: undefined\n                  });\n                }\n                break;\n              }\n            }\n            lineInfo.width += chunkWidth;\n            lineInfo.left += metrics.actualBoundingBoxLeft;\n            lineInfo.right += metrics.actualBoundingBoxRight;\n            lineInfo.textChunks.push({\n              style: currentStyle,\n              fill: currentFill,\n              text: char,\n              width: chunkWidth,\n              height: chunkHeight + metrics.actualBoundingBoxDescent,\n              left: metrics.actualBoundingBoxLeft,\n              right: metrics.actualBoundingBoxRight,\n              ascent: metrics.actualBoundingBoxAscent,\n              offsetX: 0,\n              offsetY: chunkHeight,\n              textDecoration: undefined\n            });\n            if (rtl) {\n              // @todo still needed?\n              //break;\n            }\n          }\n        }\n      });\n      if (this.style.lineHeight instanceof Percent) {\n        lineInfo.height *= this.style.lineHeight.value;\n      } else {\n        lineInfo.height *= this.style.lineHeight || 1.2;\n      }\n      this._textInfo.push(lineInfo);\n      //lineInfo.offsetY += lineInfo.ascent;\n      offsetY += lineInfo.height;\n    });\n    if (!styleRestored) {\n      context.restore();\n      ghostContext.restore();\n    }\n    if (oversizedBehavior == \"hide\" && totalWidth > maxWidth) {\n      this.textVisible = false;\n    }\n    // Adjust chunk internal offsets\n    $array.each(this._textInfo, lineInfo => {\n      $array.each(lineInfo.textChunks, chunk => {\n        chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n      });\n    });\n    context.restore();\n    ghostContext.restore();\n    return {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasImage extends CanvasDisplayObject {\n  constructor(renderer, image) {\n    super(renderer);\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_imageMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.image = image;\n  }\n  _dispose() {\n    super._dispose();\n    if (this._imageMask) {\n      clearCanvas(this._imageMask);\n    }\n  }\n  getLocalBounds() {\n    if (!this._localBounds) {\n      let w = 0;\n      let h = 0;\n      if (this.width) {\n        w = this.width;\n      }\n      if (this.height) {\n        h = this.height;\n      }\n      this._localBounds = {\n        left: 0,\n        top: 0,\n        right: w,\n        bottom: h\n      };\n      this._addBounds(this._localBounds);\n    }\n    return this._localBounds;\n  }\n  _render(status, targetGhostLayer = 0) {\n    super._render(status);\n    if (this.image) {\n      if (this.tainted === undefined) {\n        this.tainted = isTainted(this.image);\n        status.layer.tainted = true;\n      }\n      if (this.tainted && this._renderer._omitTainted) {\n        return;\n      }\n      const ghostOnly = this._ghostOnly(targetGhostLayer);\n      const drawGhost = this._drawGhost(status, targetGhostLayer);\n      if (status.layer.dirty && !ghostOnly) {\n        if (this.shadowColor) {\n          status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n        }\n        if (this.shadowBlur) {\n          status.layer.context.shadowBlur = this.shadowBlur;\n        }\n        if (this.shadowOffsetX) {\n          status.layer.context.shadowOffsetX = this.shadowOffsetX;\n        }\n        if (this.shadowOffsetY) {\n          status.layer.context.shadowOffsetY = this.shadowOffsetY;\n        }\n        // TODO should this round ?\n        const width = this.width || this.image.naturalWidth;\n        const height = this.height || this.image.naturalHeight;\n        status.layer.context.drawImage(this.image, 0, 0, width, height);\n      }\n      if (this.interactive && this._isInteractive(status) && drawGhost) {\n        const mask = this._getMask(this.image);\n        this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\n      }\n    }\n  }\n  clear() {\n    super.clear();\n    this.image = undefined;\n    this._imageMask = undefined;\n  }\n  _getMask(image) {\n    if (this._imageMask === undefined) {\n      // TODO should this round ?\n      const width = this.width || image.naturalWidth;\n      const height = this.height || image.naturalHeight;\n      // We need to create a second canvas because destination-in clears out the entire canvas\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      const context = canvas.getContext(\"2d\");\n      context.imageSmoothingEnabled = false;\n      context.fillStyle = this._getColorId();\n      context.fillRect(0, 0, width, height);\n      if (!isTainted(image)) {\n        context.globalCompositeOperation = \"destination-in\";\n        context.drawImage(image, 0, 0, width, height);\n      }\n      this._imageMask = canvas;\n    }\n    return this._imageMask;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasRendererEvent {\n  constructor(event, originalPoint, point, bbox) {\n    Object.defineProperty(this, \"event\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: event\n    });\n    Object.defineProperty(this, \"originalPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: originalPoint\n    });\n    Object.defineProperty(this, \"point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: point\n    });\n    Object.defineProperty(this, \"bbox\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: bbox\n    });\n    Object.defineProperty(this, \"id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"simulated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"native\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    if ($utils.supports(\"touchevents\") && event instanceof Touch) {\n      this.id = event.identifier;\n    } else {\n      this.id = null;\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasRenderer extends ArrayDisposer {\n  constructor(resolution) {\n    super();\n    Object.defineProperty(this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(this, \"_layerDom\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(this, \"layers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_dirtyLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"defaultLayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.getLayer(0)\n    });\n    Object.defineProperty(this, \"_ghostLayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new GhostLayer()\n    });\n    Object.defineProperty(this, \"_deferredGhostLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_patternCanvas\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"canvas\")\n    });\n    Object.defineProperty(this, \"_patternContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._patternCanvas.getContext(\"2d\")\n    });\n    Object.defineProperty(this, \"_realWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_realHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_calculatedWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_calculatedHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"interactionsEnabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"_listeners\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_colorMap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_forceInteractive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_omitTainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // TODO this should store the Id as well\n    Object.defineProperty(this, \"_hovering\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Set()\n    });\n    Object.defineProperty(this, \"_dragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_mousedown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_lastPointerMoveEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tapToActivate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"tapToActivateTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 3000\n    });\n    Object.defineProperty(this, \"_touchActive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_touchActiveTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (resolution == null) {\n      this.resolution = window.devicePixelRatio;\n    } else {\n      this.resolution = resolution;\n    }\n    this.view.style.position = \"absolute\";\n    this.view.setAttribute(\"aria-hidden\", \"true\");\n    this.view.appendChild(this._layerDom);\n    this._disposers.push(new Disposer(() => {\n      $object.each(this._events, (_key, events) => {\n        events.disposer.dispose();\n      });\n      $array.each(this.layers, layer => {\n        clearCanvas(layer.view);\n        if (layer.exportableView) {\n          clearCanvas(layer.exportableView);\n        }\n      });\n      clearCanvas(this._ghostLayer.view);\n      clearCanvas(this._patternCanvas);\n    }));\n    /*\r\n    this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n        console.debug(target);\r\n    }));\r\n    */\n    // Monitor for possible pixel ratio changes (when page is zoomed)\n    this._disposers.push($utils.onZoom(() => {\n      if (resolution == null) {\n        this.resolution = window.devicePixelRatio;\n      }\n    }));\n    // We need this in order top prevent default touch gestures when dragging\n    // draggable elements\n    if ($utils.supports(\"touchevents\")) {\n      const listener = ev => {\n        if (this._dragging.length !== 0) {\n          $array.eachContinue(this._dragging, item => {\n            if (item.value.shouldCancelTouch()) {\n              ev.preventDefault();\n              return false;\n            }\n            return true;\n          });\n        }\n        // If touch down happends, delay touch out\n        if (this._touchActiveTimeout) {\n          this._delayTouchDeactivate();\n        }\n      };\n      this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, {\n        passive: false\n      }));\n      this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, {\n        passive: false\n      }));\n      this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\n        // If touch is moving, delay touch out\n        if (this._touchActiveTimeout) {\n          this._delayTouchDeactivate();\n        }\n      }, {\n        passive: true\n      }));\n      this._disposers.push($utils.addEventListener(window, \"click\", _ev => {\n        this._touchActive = false;\n      }, {\n        passive: true\n      }));\n      this._disposers.push($utils.addEventListener(this.view, \"click\", _ev => {\n        window.setTimeout(() => {\n          this._touchActive = true;\n          this._delayTouchDeactivate();\n        }, 100);\n      }, {\n        passive: true\n      }));\n    }\n    // Prevent scrolling of the window when hovering on \"wheelable\" object\n    if ($utils.supports(\"wheelevents\")) {\n      this._disposers.push($utils.addEventListener(this.view, \"wheel\", ev => {\n        let prevent = false;\n        this._hovering.forEach(obj => {\n          if (obj.wheelable) {\n            prevent = true;\n            return false;\n          }\n        });\n        if (prevent) {\n          ev.preventDefault();\n        }\n      }, {\n        passive: false\n      }));\n    }\n  }\n  /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n      this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n  });\r\n  */\n  resetImageArray() {\n    this._ghostLayer.imageArray = undefined;\n  }\n  _delayTouchDeactivate() {\n    if (this._touchActiveTimeout) {\n      clearTimeout(this._touchActiveTimeout);\n    }\n    if (this.tapToActivateTimeout > 0) {\n      this._touchActiveTimeout = window.setTimeout(() => {\n        this._touchActive = false;\n      }, this.tapToActivateTimeout);\n    }\n  }\n  get debugGhostView() {\n    return !!this._ghostLayer.view.parentNode;\n  }\n  set debugGhostView(value) {\n    if (value) {\n      if (!this._ghostLayer.view.parentNode) {\n        this.view.appendChild(this._ghostLayer.view);\n      }\n    } else {\n      if (this._ghostLayer.view.parentNode) {\n        this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\n      }\n    }\n  }\n  createLinearGradient(x1, y1, x2, y2) {\n    return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n  }\n  createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\n    return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n  }\n  createPattern(graphics, background, repetition, width, height) {\n    // const patternCanvas = document.createElement(\"canvas\");\n    // const patternContext = patternCanvas.getContext(\"2d\")!;\n    // patternCanvas.width = width;\n    // patternCanvas.height = height;\n    // if (fill) {\n    // \tpatternContext.fillStyle = fill.toCSS();\n    // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n    // }\n    // const layer = {\n    // \tview: patternCanvas,\n    // \tcontext: patternContext,\n    // \tvisible: true,\n    // \torder: 0,\n    // \twidth: width,\n    // \theight: height,\n    // \tdirty: true\n    // };\n    // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n    // // patternContext.stroke();\n    // image.targetLayer = layer;\n    // image.render(layer);\n    //this._layerDom.appendChild(patternCanvas);\n    this._patternCanvas.width = width;\n    this._patternCanvas.height = height;\n    this._patternContext.clearRect(0, 0, width, height);\n    // patternCanvas.style.width = width * this.resolution + \"px\";\n    // patternCanvas.style.height = height * this.resolution + \"px\";\n    background.renderDetached(this._patternContext);\n    graphics.renderDetached(this._patternContext);\n    return this._patternContext.createPattern(this._patternCanvas, repetition);\n  }\n  makeContainer() {\n    return new CanvasContainer(this);\n  }\n  makeGraphics() {\n    return new CanvasGraphics(this);\n  }\n  makeText(text, style) {\n    return new CanvasText(this, text, style);\n  }\n  makeTextStyle() {\n    return new CanvasTextStyle();\n  }\n  makeRadialText(text, style) {\n    return new CanvasRadialText(this, text, style);\n  }\n  makePicture(image) {\n    return new CanvasImage(this, image);\n  }\n  resizeLayer(layer) {\n    layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n  }\n  resizeGhost() {\n    this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n  }\n  resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\n    this._realWidth = realWidth;\n    this._realHeight = realHeight;\n    this._calculatedWidth = calculatedWidth;\n    this._calculatedHeight = calculatedHeight;\n    $array.each(this.layers, layer => {\n      if (layer) {\n        layer.dirty = true;\n        this.resizeLayer(layer);\n      }\n    });\n    this.resizeGhost();\n    this.view.style.width = calculatedWidth + \"px\";\n    this.view.style.height = calculatedHeight + \"px\";\n  }\n  createDetachedLayer(willReadFrequently = false) {\n    const view = document.createElement(\"canvas\");\n    const context = view.getContext(\"2d\", {\n      willReadFrequently: willReadFrequently\n    });\n    const layer = new CanvasLayer(view, context);\n    view.style.position = \"absolute\";\n    view.style.top = \"0px\";\n    view.style.left = \"0px\";\n    return layer;\n  }\n  getLayerByOrder(order) {\n    const layers = this.layers;\n    const length = layers.length;\n    for (let i = 0; i < length; i++) {\n      const layer = layers[i];\n      if (layer.order == order) {\n        return layer;\n      }\n    }\n  }\n  getLayer(order, visible = true) {\n    let existingLayer = this.getLayerByOrder(order);\n    if (existingLayer) {\n      return existingLayer;\n    }\n    const layer = this.createDetachedLayer(order == 99);\n    layer.order = order;\n    layer.visible = visible;\n    layer.view.className = \"am5-layer-\" + order;\n    if (layer.visible) {\n      this.resizeLayer(layer);\n    }\n    const layers = this.layers;\n    layers.push(layer);\n    layers.sort((a, b) => {\n      if (a.order > b.order) {\n        return 1;\n      } else if (a.order < b.order) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    const length = layers.length;\n    const layerIndex = $array.indexOf(layers, layer);\n    let next;\n    for (let i = layerIndex + 1; i < length; i++) {\n      if (layers[i].visible) {\n        next = layers[i];\n        break;\n      }\n    }\n    if (layer.visible) {\n      if (next === undefined) {\n        this._layerDom.appendChild(layer.view);\n      } else {\n        this._layerDom.insertBefore(layer.view, next.view);\n      }\n    }\n    return layer;\n  }\n  render(root) {\n    this._dirtyLayers.length = 0;\n    this._deferredGhostLayers = [];\n    $array.each(this.layers, layer => {\n      if (layer) {\n        if (layer.dirty && layer.visible) {\n          this._dirtyLayers.push(layer);\n          layer.clear();\n        }\n      }\n    });\n    this._ghostLayer.clear();\n    root.render({\n      inactive: null,\n      layer: this.defaultLayer\n    });\n    const deferredGhostLayers = this._deferredGhostLayers;\n    if (deferredGhostLayers.length) {\n      deferredGhostLayers.sort((a, b) => a - b);\n      $array.each(deferredGhostLayers, layerx => {\n        root.render({\n          inactive: null,\n          layer: this.defaultLayer\n        }, layerx);\n      });\n    }\n    this._ghostLayer.context.restore();\n    //setTimeout(() => {\n    // Remove this after the Chrome bug is fixed:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n    $array.each(this.layers, layer => {\n      if (layer) {\n        const context = layer.context;\n        context.beginPath();\n        context.moveTo(0, 0);\n        context.stroke();\n      }\n    });\n    $array.each(this._dirtyLayers, layer => {\n      layer.context.restore();\n      layer.dirty = false;\n    });\n    //}, 100)\n    if (this._hovering.size && this._lastPointerMoveEvent) {\n      const {\n        events,\n        target,\n        native\n      } = this._lastPointerMoveEvent;\n      //this._mouseMoveThrottler.run();\n      $array.each(events, event => {\n        this._dispatchGlobalMousemove(event, target, native);\n      });\n    }\n  }\n  paintId(obj) {\n    const id = distributeId(++this._colorId);\n    const color = Color.fromHex(id).toCSS();\n    this._colorMap[color] = obj;\n    return color;\n  }\n  _removeObject(obj) {\n    if (obj._colorId !== undefined) {\n      delete this._colorMap[obj._colorId];\n    }\n  }\n  // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n  // \treturn this._colorMap[colorId];\n  // }\n  _adjustBoundingBox(bbox) {\n    const margin = this._ghostLayer.margin;\n    return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\n  }\n  getEvent(originalEvent, adjustPoint = true) {\n    const bbox = this.view.getBoundingClientRect();\n    const x = originalEvent.clientX || 0;\n    const y = originalEvent.clientY || 0;\n    const widthScale = this._calculatedWidth / this._realWidth;\n    const heightScale = this._calculatedHeight / this._realHeight;\n    const originalPoint = {\n      x: x - bbox.left,\n      y: y - bbox.top\n    };\n    const point = {\n      x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\n      y: (y - (adjustPoint ? bbox.top : 0)) * heightScale\n    };\n    return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\n  }\n  _getHitTarget(point, bbox, target) {\n    if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\n      return;\n    }\n    if (!target || !this._layerDom.contains(target)) {\n      return;\n    }\n    const pixel = this._ghostLayer.getImageData(point, bbox);\n    if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n      return false;\n    }\n    const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n    const hit = this._colorMap[colorId];\n    return hit;\n  }\n  getObjectAtPoint(point) {\n    const data = this._ghostLayer.getImageArray(point);\n    if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\n      return undefined;\n    }\n    const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\n    const hit = this._colorMap[colorId];\n    return hit;\n  }\n  _withEvents(key, f) {\n    const events = this._events[key];\n    if (events !== undefined) {\n      events.dispatching = true;\n      try {\n        f(events);\n      } finally {\n        events.dispatching = false;\n        if (events.cleanup) {\n          events.cleanup = false;\n          $array.keepIf(events.callbacks, callback => {\n            return !callback.disposed;\n          });\n          if (events.callbacks.length === 0) {\n            events.disposer.dispose();\n            delete this._events[key];\n          }\n        }\n      }\n    }\n  }\n  _dispatchEventAll(key, event) {\n    if (!this.interactionsEnabled) {\n      return;\n    }\n    this._withEvents(key, events => {\n      $array.each(events.callbacks, callback => {\n        if (!callback.disposed) {\n          callback.callback.call(callback.context, event);\n        }\n      });\n    });\n  }\n  _dispatchEvent(key, target, event) {\n    if (!this.interactionsEnabled) {\n      return false;\n    }\n    let dispatched = false;\n    this._withEvents(key, events => {\n      $array.each(events.callbacks, callback => {\n        if (!callback.disposed && callback.object === target) {\n          callback.callback.call(callback.context, event);\n          dispatched = true;\n        }\n      });\n    });\n    return dispatched;\n  }\n  _dispatchMousedown(originalEvent, originalTarget) {\n    const button = originalEvent.button;\n    if (button != 0 && button != 2 && button != 1 && button !== undefined) {\n      // Ignore non-primary mouse buttons\n      return;\n    }\n    const event = this.getEvent(originalEvent);\n    const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n    if (target) {\n      const id = event.id;\n      let dragged = false;\n      eachTargets(target, obj => {\n        const info = {\n          id: id,\n          value: obj\n        };\n        this._mousedown.push(info);\n        if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n          // Only dispatch the first element which matches\n          dragged = true;\n          const has = this._dragging.some(x => {\n            return x.value === obj && x.id === id;\n          });\n          if (!has) {\n            this._dragging.push(info);\n          }\n        }\n        return true;\n      });\n    }\n  }\n  _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\n    const event = this.getEvent(originalEvent);\n    const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n    event.native = native;\n    if (target) {\n      this._hovering.forEach(obj => {\n        if (!obj.contains(target)) {\n          this._hovering.delete(obj);\n          if (obj.cursorOverStyle) {\n            $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n          }\n          this._dispatchEvent(\"pointerout\", obj, event);\n        }\n      });\n      if (event.native) {\n        eachTargets(target, obj => {\n          if (!this._hovering.has(obj)) {\n            this._hovering.add(obj);\n            if (obj.cursorOverStyle) {\n              obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n              $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n            }\n            this._dispatchEvent(\"pointerover\", obj, event);\n          }\n          return true;\n        });\n      }\n      //} else if (target === false) {\n    } else {\n      this._hovering.forEach(obj => {\n        if (obj.cursorOverStyle) {\n          $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n        }\n        this._dispatchEvent(\"pointerout\", obj, event);\n      });\n      this._hovering.clear();\n    }\n    this._dispatchEventAll(\"globalpointermove\", event);\n  }\n  removeHovering(graphics) {\n    this._hovering.delete(graphics);\n    if (graphics.cursorOverStyle) {\n      $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\n    }\n  }\n  _dispatchGlobalMouseup(originalEvent, native) {\n    const event = this.getEvent(originalEvent);\n    event.native = native;\n    //const target = this._getHitTarget(event.originalPoint);\n    this._dispatchEventAll(\"globalpointerup\", event);\n  }\n  _dispatchDragMove(originalEvent) {\n    if (this._dragging.length !== 0) {\n      const event = this.getEvent(originalEvent);\n      const id = event.id;\n      this._dragging.forEach(obj => {\n        if (obj.id === id) {\n          this._dispatchEvent(\"pointermove\", obj.value, event);\n        }\n      });\n    }\n  }\n  _dispatchDragEnd(originalEvent, originalTarget) {\n    const button = originalEvent.button;\n    let clickevent;\n    if (button == 0 || button === undefined) {\n      clickevent = \"click\";\n    } else if (button == 2) {\n      clickevent = \"rightclick\";\n    } else if (button == 1) {\n      clickevent = \"middleclick\";\n    } else {\n      // Ignore non-primary mouse buttons\n      return;\n    }\n    const event = this.getEvent(originalEvent);\n    const id = event.id;\n    if (this._mousedown.length !== 0) {\n      const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n      if (target) {\n        this._mousedown.forEach(obj => {\n          if (obj.id === id && obj.value.contains(target)) {\n            this._dispatchEvent(clickevent, obj.value, event);\n          }\n        });\n      }\n      this._mousedown.length = 0;\n    }\n    if (this._dragging.length !== 0) {\n      this._dragging.forEach(obj => {\n        if (obj.id === id) {\n          this._dispatchEvent(\"pointerup\", obj.value, event);\n        }\n      });\n      this._dragging.length = 0;\n    }\n  }\n  _dispatchDoubleClick(originalEvent, originalTarget) {\n    const event = this.getEvent(originalEvent);\n    const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n    if (target) {\n      eachTargets(target, obj => {\n        if (this._dispatchEvent(\"dblclick\", obj, event)) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    }\n  }\n  _dispatchWheel(originalEvent, originalTarget) {\n    const event = this.getEvent(originalEvent);\n    const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n    if (target) {\n      eachTargets(target, obj => {\n        if (this._dispatchEvent(\"wheel\", obj, event)) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    }\n  }\n  _makeSharedEvent(key, f) {\n    if (this._listeners[key] === undefined) {\n      const listener = f();\n      this._listeners[key] = new CounterDisposer(() => {\n        delete this._listeners[key];\n        listener.dispose();\n      });\n    }\n    return this._listeners[key].increment();\n  }\n  _onPointerEvent(name, f) {\n    let native = false;\n    let timer = null;\n    function clear() {\n      timer = null;\n      native = false;\n    }\n    return new MultiDisposer([new Disposer(() => {\n      if (timer !== null) {\n        clearTimeout(timer);\n      }\n      clear();\n    }), $utils.addEventListener(this.view, $utils.getRendererEvent(name), _ => {\n      native = true;\n      if (timer !== null) {\n        clearTimeout(timer);\n      }\n      timer = window.setTimeout(clear, 0);\n    }), onPointerEvent(window, name, (ev, target) => {\n      if (timer !== null) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      f(ev, target, native);\n      native = false;\n    })]);\n  }\n  // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n  _initEvent(key) {\n    switch (key) {\n      case \"globalpointermove\":\n      case \"pointerover\":\n      case \"pointerout\":\n        return this._makeSharedEvent(\"pointermove\", () => {\n          const listener = (events, target, native) => {\n            this._lastPointerMoveEvent = {\n              events,\n              target,\n              native\n            };\n            $array.each(events, event => {\n              this._dispatchGlobalMousemove(event, target, native);\n            });\n          };\n          return new MultiDisposer([this._onPointerEvent(\"pointerdown\", listener), this._onPointerEvent(\"pointermove\", listener)]);\n        });\n      case \"globalpointerup\":\n        return this._makeSharedEvent(\"pointerup\", () => {\n          const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\n            $array.each(events, event => {\n              this._dispatchGlobalMouseup(event, native);\n            });\n            this._lastPointerMoveEvent = {\n              events,\n              target,\n              native\n            };\n          });\n          const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\n            $array.each(events, event => {\n              this._dispatchGlobalMouseup(event, native);\n            });\n            this._lastPointerMoveEvent = {\n              events,\n              target,\n              native\n            };\n          });\n          return new Disposer(() => {\n            mouseup.dispose();\n            pointercancel.dispose();\n          });\n        });\n      case \"click\":\n      case \"rightclick\":\n      case \"middleclick\":\n      case \"pointerdown\":\n      /*\r\n          return this._makeSharedEvent(\"pointerdown\", () => {\r\n              return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                  this._lastPointerMoveEvent = { event, target, native };\r\n                  this._dispatchMousedown(event)\r\n              });\r\n          });\r\n      */\n      case \"pointermove\":\n      case \"pointerup\":\n        return this._makeSharedEvent(\"pointerdown\", () => {\n          //const throttler = new Throttler();\n          const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\n            $array.each(events, ev => {\n              this._dispatchMousedown(ev, target);\n            });\n          });\n          // TODO handle throttling properly for multitouch\n          const mousemove = this._onPointerEvent(\"pointermove\", ev => {\n            //throttler.throttle(() => {\n            $array.each(ev, ev => {\n              this._dispatchDragMove(ev);\n            });\n            //});\n          });\n          const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\n            $array.each(ev, ev => {\n              this._dispatchDragEnd(ev, target);\n            });\n          });\n          const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\n            $array.each(ev, ev => {\n              this._dispatchDragEnd(ev, target);\n            });\n          });\n          return new Disposer(() => {\n            mousedown.dispose();\n            mousemove.dispose();\n            mouseup.dispose();\n            pointercancel.dispose();\n          });\n        });\n      case \"dblclick\":\n        return this._makeSharedEvent(\"dblclick\", () => {\n          return this._onPointerEvent(\"dblclick\", (ev, target) => {\n            $array.each(ev, ev => {\n              this._dispatchDoubleClick(ev, target);\n            });\n          });\n        });\n      case \"wheel\":\n        return this._makeSharedEvent(\"wheel\", () => {\n          return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), event => {\n            this._dispatchWheel(event, $utils.getEventTarget(event));\n          }, {\n            passive: false\n          });\n        });\n    }\n  }\n  _addEvent(object, key, callback, context) {\n    let events = this._events[key];\n    if (events === undefined) {\n      events = this._events[key] = {\n        disposer: this._initEvent(key),\n        callbacks: [],\n        dispatching: false,\n        cleanup: false\n      };\n    }\n    const listener = {\n      object,\n      context,\n      callback,\n      disposed: false\n    };\n    events.callbacks.push(listener);\n    return new Disposer(() => {\n      listener.disposed = true;\n      if (events.dispatching) {\n        events.cleanup = true;\n      } else {\n        $array.removeFirst(events.callbacks, listener);\n        if (events.callbacks.length === 0) {\n          events.disposer.dispose();\n          delete this._events[key];\n        }\n      }\n    });\n  }\n  getCanvas(root, options) {\n    // Make sure everything is rendered\n    this.render(root);\n    if (!options) {\n      options = {};\n    }\n    let scale = this.resolution;\n    let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\n    let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\n    // Check if we need to scale\n    if (options.minWidth && options.minWidth > canvasWidth) {\n      let minScale = options.minWidth / canvasWidth;\n      if (minScale > scale) {\n        scale = minScale * this.resolution;\n      }\n    }\n    if (options.minHeight && options.minHeight > canvasHeight) {\n      let minScale = options.minHeight / canvasHeight;\n      if (minScale > scale) {\n        scale = minScale * this.resolution;\n      }\n    }\n    if (options.maxWidth && options.maxWidth < canvasWidth) {\n      let maxScale = options.maxWidth / canvasWidth;\n      if (maxScale < scale) {\n        scale = maxScale * this.resolution;\n      }\n    }\n    if (options.maxHeight && options.maxHeight > canvasHeight) {\n      let maxScale = options.maxHeight / canvasHeight;\n      if (maxScale < scale) {\n        scale = maxScale * this.resolution;\n      }\n    }\n    // Check if we need to compensate for pixel ratio\n    if (options.maintainPixelRatio) {\n      scale /= this.resolution;\n    }\n    // Init list canvases to remove from DOM after export\n    const canvases = [];\n    // Set up new canvas for export\n    let forceRender = false;\n    const canvas = document.createElement(\"canvas\");\n    if (scale != this.resolution) {\n      forceRender = true;\n      canvasWidth = canvasWidth * scale / this.resolution;\n      canvasHeight = canvasHeight * scale / this.resolution;\n    }\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    // Add to DOM so it inherits CSS\n    canvas.style.position = \"fixed\";\n    canvas.style.top = \"-10000px\";\n    this.view.appendChild(canvas);\n    canvases.push(canvas);\n    // Context\n    const context = canvas.getContext(\"2d\");\n    let width = 0;\n    let height = 0;\n    let needRerender = false;\n    $array.each(this.layers, layer => {\n      if (layer && layer.visible) {\n        if (layer.tainted || forceRender) {\n          needRerender = true;\n          layer.exportableView = layer.view;\n          layer.exportableContext = layer.context;\n          layer.view = document.createElement(\"canvas\");\n          // Add to DOM so it inherits CSS\n          layer.view.style.position = \"fixed\";\n          layer.view.style.top = \"-10000px\";\n          this.view.appendChild(layer.view);\n          canvases.push(layer.view);\n          let extraX = 0;\n          let extraY = 0;\n          if (layer.margin) {\n            extraX += layer.margin.left || 0 + layer.margin.right || 0;\n            extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\n          }\n          layer.view.width = canvasWidth + extraX;\n          layer.view.height = canvasHeight + extraY;\n          layer.context = layer.view.getContext(\"2d\");\n          layer.dirty = true;\n          layer.scale = scale;\n        }\n      }\n    });\n    if (needRerender) {\n      this._omitTainted = true;\n      this.render(root);\n      this._omitTainted = false;\n    }\n    $array.each(this.layers, layer => {\n      if (layer && layer.visible) {\n        // Layer is fine. Just plop it into our target canvas\n        let x = 0;\n        let y = 0;\n        if (layer.margin) {\n          x = -(layer.margin.left || 0) * this.resolution;\n          y = -(layer.margin.top || 0) * this.resolution;\n        }\n        context.drawImage(layer.view, x, y);\n        // Restore layer original canvas\n        if (layer.exportableView) {\n          layer.view = layer.exportableView;\n          layer.exportableView = undefined;\n        }\n        if (layer.exportableContext) {\n          layer.context = layer.exportableContext;\n          layer.exportableContext = undefined;\n        }\n        if (width < layer.view.clientWidth) {\n          width = layer.view.clientWidth;\n        }\n        if (height < layer.view.clientHeight) {\n          height = layer.view.clientHeight;\n        }\n        layer.scale = undefined;\n      }\n    });\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    $array.each(canvases, canvas => {\n      canvas.style.position = \"\";\n      canvas.style.top = \"\";\n      this.view.removeChild(canvas);\n    });\n    return canvas;\n  }\n}\nclass GhostLayer {\n  constructor() {\n    Object.defineProperty(this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"margin\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(this, \"_resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"imageArray\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.view = document.createElement(\"canvas\");\n    this.context = this.view.getContext(\"2d\", {\n      alpha: false,\n      willReadFrequently: true\n    });\n    this.context.imageSmoothingEnabled = false;\n    this.view.style.position = \"absolute\";\n    this.view.style.top = \"0px\";\n    this.view.style.left = \"0px\";\n  }\n  resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\n    this._resolution = resolution;\n    canvasWidth += this.margin.left + this.margin.right;\n    canvasHeight += this.margin.top + this.margin.bottom;\n    // TODO this should take into account calculateSize\n    domWidth += this.margin.left + this.margin.right;\n    domHeight += this.margin.top + this.margin.bottom;\n    this.view.style.left = -this.margin.left + \"px\";\n    this.view.style.top = -this.margin.top + \"px\";\n    this._width = Math.floor(canvasWidth * resolution);\n    this._height = Math.floor(canvasHeight * resolution);\n    this.view.width = this._width;\n    this.view.style.width = domWidth + \"px\";\n    this.view.height = this._height;\n    this.view.style.height = domHeight + \"px\";\n  }\n  getImageData(point, bbox) {\n    return this.context.getImageData(\n    // TODO should this round ?\n    Math.round((point.x - bbox.left) / bbox.width * this._width), Math.round((point.y - bbox.top) / bbox.height * this._height), 1, 1);\n  }\n  getImageArray(point) {\n    if (!this.imageArray) {\n      this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\n    }\n    const data = this.imageArray;\n    const x = Math.round(point.x * this._resolution);\n    const y = Math.round(point.y * this._resolution);\n    const i = (y * this._width + x) * 4;\n    return [data[i], data[i + 1], data[i + 2], data[i + 3]];\n  }\n  setMargin(layers) {\n    this.margin.left = 0;\n    this.margin.right = 0;\n    this.margin.top = 0;\n    this.margin.bottom = 0;\n    $array.each(layers, layer => {\n      if (layer.margin) {\n        this.margin.left = Math.max(this.margin.left, layer.margin.left);\n        this.margin.right = Math.max(this.margin.right, layer.margin.right);\n        this.margin.top = Math.max(this.margin.top, layer.margin.top);\n        this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\n      }\n    });\n  }\n  clear() {\n    this.context.save();\n    this.context.fillStyle = '#000';\n    this.context.fillRect(0, 0, this._width, this._height);\n  }\n}\n/**\r\n * @ignore\r\n */\nexport class CanvasLayer {\n  constructor(view, context) {\n    Object.defineProperty(this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"margin\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"order\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"visible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"scale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"dirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"exportableView\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"exportableContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    this.view = view;\n    this.context = context;\n  }\n  resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\n    // TODO should this take into account calculateSize ?\n    if (this.width != null) {\n      canvasWidth = this.width;\n      domWidth = this.width;\n    }\n    // TODO should this take into account calculateSize ?\n    if (this.height != null) {\n      canvasHeight = this.height;\n      domHeight = this.height;\n    }\n    if (this.margin) {\n      canvasWidth += this.margin.left + this.margin.right;\n      canvasHeight += this.margin.top + this.margin.bottom;\n      // TODO this should take into account calculateSize\n      domWidth += this.margin.left + this.margin.right;\n      domHeight += this.margin.top + this.margin.bottom;\n      this.view.style.left = -this.margin.left + \"px\";\n      this.view.style.top = -this.margin.top + \"px\";\n    } else {\n      this.view.style.left = \"0px\";\n      this.view.style.top = \"0px\";\n    }\n    this._width = Math.floor(canvasWidth * resolution);\n    this._height = Math.floor(canvasHeight * resolution);\n    this.view.width = this._width;\n    this.view.style.width = domWidth + \"px\";\n    this.view.height = this._height;\n    this.view.style.height = domHeight + \"px\";\n  }\n  clear() {\n    this.context.save();\n    this.context.clearRect(0, 0, this._width, this._height);\n  }\n}\n", "import { AnimationState } from \"./util/Animation\";\nimport { Container } from \"./render/Container\";\nimport { Text } from \"./render/Text\";\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\nimport { VerticalLayout } from \"./render/VerticalLayout\";\nimport { GridLayout } from \"./render/GridLayout\";\nimport { Disposer } from \"./util/Disposer\";\nimport { ResizeSensor } from \"./util/ResizeSensor\";\nimport { InterfaceColors } from \"./util/InterfaceColors\";\nimport { Graphics } from \"./render/Graphics\";\nimport { Rectangle } from \"./render/Rectangle\";\nimport { Tooltip } from \"./render/Tooltip\";\nimport { NumberFormatter } from \"./util/NumberFormatter\";\nimport { DateFormatter } from \"./util/DateFormatter\";\nimport { DurationFormatter } from \"./util/DurationFormatter\";\nimport { Language } from \"./util/Language\";\nimport { EventDispatcher } from \"./util/EventDispatcher\";\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\nimport { color } from \"./util/Color\";\nimport { populateString } from \"./util/PopulateString\";\nimport { registry } from \"./Registry\";\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\nimport * as $object from \"./util/Object\";\nimport * as $utils from \"./util/Utils\";\nimport * as $type from \"./util/Type\";\nimport en from \"../../locales/en\";\nfunction rAF(fps, callback) {\n  if (fps == null) {\n    requestAnimationFrame(callback);\n  } else {\n    setTimeout(() => {\n      requestAnimationFrame(callback);\n    }, 1000 / fps);\n  }\n}\n// TODO implement Disposer\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\nexport class Root {\n  constructor(id, settings = {}, isReal) {\n    /**\r\n     * A reference to original chart container (div element).\r\n     */\n    Object.defineProperty(this, \"dom\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_inner\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_isDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isDirtyParents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isDirtyAnimation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_dirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dirtyParents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dirtyBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dirtyPositions\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_ticker\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_tickers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_updateTick\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    /**\r\n     * Root's event dispatcher.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n     */\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    /**\r\n     * @ignore\r\n     * @todo needs description\r\n     */\n    Object.defineProperty(this, \"animationTime\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_animations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_renderer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_rootContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Main content container.\r\n     */\n    Object.defineProperty(this, \"container\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A [[Container]] used to display tooltips in.\r\n     */\n    Object.defineProperty(this, \"tooltipContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipContainerSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltip\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // Locale-related\n    /**\r\n     * @ignore\r\n     */\n    Object.defineProperty(this, \"language\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Language.new(this, {})\n    });\n    /**\r\n     * Locale used by the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n     */\n    Object.defineProperty(this, \"locale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: en\n    });\n    // Date-time related\n    /**\r\n     * Use UTC when formatting date/time.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n     */\n    Object.defineProperty(this, \"utc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * If set, will format date/time in specific time zone.\r\n     *\r\n     * The value should be named time zone, e.g.:\r\n     * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n     *\r\n     * NOTE: Using time zone feature may noticeable affect performance of the\r\n     * chart, especially with large data sets, since every single date will need\r\n     * to be recalculated.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n     * @since 5.1.0\r\n     */\n    Object.defineProperty(this, \"timezone\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * The maximum FPS that the Root will run at.\r\n     *\r\n     * If `undefined` it will run at the highest FPS.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n     */\n    Object.defineProperty(this, \"fps\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Number formatter.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n     */\n    Object.defineProperty(this, \"numberFormatter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: NumberFormatter.new(this, {})\n    });\n    /**\r\n     * Date/time formatter.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n     */\n    Object.defineProperty(this, \"dateFormatter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: DateFormatter.new(this, {})\n    });\n    /**\r\n     * Duration formatter.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n     */\n    Object.defineProperty(this, \"durationFormatter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: DurationFormatter.new(this, {})\n    });\n    // Accessibility\n    /**\r\n     * Global tab index for using for the whole chart\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     */\n    Object.defineProperty(this, \"tabindex\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    //@todo maybe make this better\n    Object.defineProperty(this, \"_tabindexes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_a11yD\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_focusElementDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_focusElementContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_focusedSprite\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_isShift\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_keyboardDragPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipElementContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_readerAlertElement\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_logo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipDiv\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n     */\n    Object.defineProperty(this, \"nonce\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Special color set to be used for various controls.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n     */\n    Object.defineProperty(this, \"interfaceColors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * An instance of vertical layout object that can be used to set `layout` setting\r\n     * of a [[Container]].\r\n     *\r\n     * @default VerticalLayout.new()\r\n     */\n    Object.defineProperty(this, \"verticalLayout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: VerticalLayout.new(this, {})\n    });\n    /**\r\n     * An instance of horizontal layout object that can be used to set `layout` setting\r\n     * of a [[Container]].\r\n     *\r\n     * @default HorizontalLayout.new()\r\n     */\n    Object.defineProperty(this, \"horizontalLayout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: HorizontalLayout.new(this, {})\n    });\n    /**\r\n     * An instance of grid layout object that can be used to set `layout` setting\r\n     * of a [[Container]].\r\n     *\r\n     * @default VerticalLayout.new()\r\n     */\n    Object.defineProperty(this, \"gridLayout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: GridLayout.new(this, {})\n    });\n    Object.defineProperty(this, \"_paused\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * Indicates whether chart should resized automatically when parent container\r\n     * width and/or height changes.\r\n     *\r\n     * If disabled (`autoResize = false`) you can make the chart resize manually\r\n     * by calling root element's `resize()` method.\r\n     */\n    Object.defineProperty(this, \"autoResize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"_fontHash\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"\"\n    });\n    Object.defineProperty(this, \"_isDisposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_disposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_resizeSensorDisposer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltips\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_htmlElementContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_htmlEnabledContainers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    /**\r\n     * Entities that have their `id` setting set.\r\n     *\r\n     * @since 5.11.0\r\n     */\n    Object.defineProperty(this, \"entitiesById\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    this._settings = settings;\n    if (settings.accessible == false) {\n      this._a11yD = true;\n    }\n    if (settings.useSafeResolution == null) {\n      settings.useSafeResolution = true;\n    }\n    let resolution;\n    if (settings.useSafeResolution) {\n      resolution = $utils.getSafeResolution();\n    }\n    this._renderer = new CanvasRenderer(resolution);\n    let dom;\n    if (id instanceof HTMLElement) {\n      dom = id;\n    } else {\n      dom = document.getElementById(id);\n    }\n    $array.each(registry.rootElements, root => {\n      if (root.dom === dom) {\n        throw new Error(\"You cannot have multiple Roots on the same DOM node\");\n      }\n    });\n    this.interfaceColors = InterfaceColors.new(this, {});\n    if (dom === null) {\n      throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\n    }\n    this.dom = dom;\n    let inner = document.createElement(\"div\");\n    inner.style.position = \"relative\";\n    inner.style.width = \"100%\";\n    inner.style.height = \"100%\";\n    dom.appendChild(inner);\n    const tooltipContainerBounds = settings.tooltipContainerBounds;\n    if (tooltipContainerBounds) {\n      this._tooltipContainerSettings = tooltipContainerBounds;\n    }\n    this._inner = inner;\n    this._updateComputedStyles();\n    registry.rootElements.push(this);\n  }\n  static new(id, settings) {\n    const root = new Root(id, settings, true);\n    root._init();\n    return root;\n  }\n  moveDOM(id) {\n    let dom;\n    if (id instanceof HTMLElement) {\n      dom = id;\n    } else {\n      dom = document.getElementById(id);\n    }\n    if (dom) {\n      while (this.dom.childNodes.length > 0) {\n        dom.appendChild(this.dom.childNodes[0]);\n      }\n      this.dom = dom;\n      this._initResizeSensor();\n      this.resize();\n    }\n  }\n  _handleLogo() {\n    if (this._logo) {\n      const w = this.dom.offsetWidth;\n      const h = this.dom.offsetHeight;\n      if (w <= 150 || h <= 60) {\n        this._logo.hide();\n      } else {\n        this._logo.show();\n      }\n    }\n  }\n  _showBranding() {\n    if (!this._logo) {\n      const logo = this.tooltipContainer.children.push(Container.new(this, {\n        interactive: true,\n        interactiveChildren: false,\n        position: \"absolute\",\n        setStateOnChildren: true,\n        paddingTop: 9,\n        paddingRight: 9,\n        paddingBottom: 9,\n        paddingLeft: 9,\n        scale: .6,\n        y: percent(100),\n        centerY: p100,\n        tooltipText: \"Created using amCharts 5\",\n        tooltipX: p100,\n        cursorOverStyle: \"pointer\",\n        background: Rectangle.new(this, {\n          fill: color(0x474758),\n          fillOpacity: 0,\n          tooltipY: 5\n        })\n      }));\n      const tooltip = Tooltip.new(this, {\n        pointerOrientation: \"horizontal\",\n        paddingTop: 4,\n        paddingRight: 7,\n        paddingBottom: 4,\n        paddingLeft: 7\n      });\n      tooltip.label.setAll({\n        fontSize: 12\n      });\n      tooltip.get(\"background\").setAll({\n        fill: this.interfaceColors.get(\"background\"),\n        stroke: this.interfaceColors.get(\"grid\"),\n        strokeOpacity: 0.3\n      });\n      logo.set(\"tooltip\", tooltip);\n      logo.events.on(\"click\", () => {\n        window.open(\"https://www.amcharts.com/\", \"_blank\");\n      });\n      logo.states.create(\"hover\", {});\n      const m = logo.children.push(Graphics.new(this, {\n        stroke: color(0xcccccc),\n        strokeWidth: 3,\n        svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\n      }));\n      m.states.create(\"hover\", {\n        stroke: color(0x3CABFF)\n      });\n      const a = logo.children.push(Graphics.new(this, {\n        stroke: color(0x888888),\n        strokeWidth: 3,\n        svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\n      }));\n      a.states.create(\"hover\", {\n        stroke: color(0x474758)\n      });\n      //logo.set(\"tooltip\", this._tooltip);\n      //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\n      this._logo = logo;\n      this._handleLogo();\n    }\n  }\n  _getRealSize() {\n    return this.dom.getBoundingClientRect();\n  }\n  _getCalculatedSize(rect) {\n    if (this._settings.calculateSize) {\n      return this._settings.calculateSize(rect);\n    } else {\n      return {\n        width: rect.width,\n        height: rect.height\n      };\n    }\n  }\n  _init() {\n    const settings = this._settings;\n    if (settings.accessible !== false) {\n      if (settings.focusable) {\n        this._inner.setAttribute(\"focusable\", \"true\");\n        this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\n      }\n      if (settings.ariaLabel) {\n        this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\n      }\n      if (settings.role) {\n        this._inner.setAttribute(\"role\", settings.role);\n      }\n    }\n    const renderer = this._renderer;\n    const rect = this._getRealSize();\n    const size = this._getCalculatedSize(rect);\n    const width = Math.floor(size.width);\n    const height = Math.floor(size.height);\n    const realWidth = Math.floor(rect.width);\n    const realHeight = Math.floor(rect.height);\n    const rootContainer = Container.new(this, {\n      visible: true,\n      width: width,\n      height: height\n    });\n    this._rootContainer = rootContainer;\n    this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\n    const container = rootContainer.children.push(Container.new(this, {\n      visible: true,\n      width: p100,\n      height: p100\n    }));\n    this.container = container;\n    renderer.resize(realWidth, realHeight, width, height);\n    //@todo: better appendChild - refer\n    this._inner.appendChild(renderer.view);\n    // TODO: TMP TMP TMP for testing only, remove\n    //renderer.debugGhostView = true;\n    this._initResizeSensor();\n    // HTML content holder\n    const htmlElementContainer = document.createElement(\"div\");\n    this._htmlElementContainer = htmlElementContainer;\n    htmlElementContainer.className = \"am5-html-container\";\n    htmlElementContainer.style.position = \"absolute\";\n    htmlElementContainer.style.pointerEvents = \"none\";\n    if (!this._tooltipContainerSettings) {\n      htmlElementContainer.style.overflow = \"hidden\";\n    }\n    this._inner.appendChild(htmlElementContainer);\n    if (this._a11yD !== true) {\n      // Create element which is used to make announcements to screen reader\n      const readerAlertElement = document.createElement(\"div\");\n      readerAlertElement.className = \"am5-reader-container\";\n      readerAlertElement.setAttribute(\"role\", \"alert\");\n      // readerAlertElement.style.zIndex = \"-100000\";\n      // readerAlertElement.style.opacity = \"0\";\n      // readerAlertElement.style.top = \"0\";\n      readerAlertElement.style.position = \"absolute\";\n      readerAlertElement.style.width = \"1px\";\n      readerAlertElement.style.height = \"1px\";\n      readerAlertElement.style.overflow = \"hidden\";\n      readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n      this._readerAlertElement = readerAlertElement;\n      this._inner.appendChild(this._readerAlertElement);\n      const focusElementContainer = document.createElement(\"div\");\n      focusElementContainer.className = \"am5-focus-container\";\n      focusElementContainer.style.position = \"absolute\";\n      focusElementContainer.style.pointerEvents = \"none\";\n      focusElementContainer.style.top = \"0px\";\n      focusElementContainer.style.left = \"0px\";\n      focusElementContainer.style.overflow = \"hidden\";\n      focusElementContainer.style.width = width + \"px\";\n      focusElementContainer.style.height = height + \"px\";\n      focusElementContainer.setAttribute(\"role\", \"graphics-document\");\n      $utils.setInteractive(focusElementContainer, false);\n      this._focusElementContainer = focusElementContainer;\n      this._inner.appendChild(this._focusElementContainer);\n      const tooltipElementContainer = document.createElement(\"div\");\n      this._tooltipElementContainer = tooltipElementContainer;\n      tooltipElementContainer.className = \"am5-tooltip-container\";\n      this._inner.appendChild(tooltipElementContainer);\n      // Add keyboard events for accessibility, e.g. simulating drag with arrow\n      // keys and click with ENTER\n      if ($utils.supports(\"keyboardevents\")) {\n        this._disposers.push($utils.addEventListener(window, \"keydown\", ev => {\n          const eventKey = $utils.getEventKey(ev);\n          if (eventKey == \"Shift\") {\n            this._isShift = true;\n          } else if (eventKey == \"Tab\") {\n            this._isShift = ev.shiftKey;\n          }\n        }));\n        this._disposers.push($utils.addEventListener(window, \"keyup\", ev => {\n          const eventKey = $utils.getEventKey(ev);\n          if (eventKey == \"Shift\") {\n            this._isShift = false;\n          }\n        }));\n        this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\n          // Some screen readers convert ENTER (and some SPACE) press whil on\n          // focused element to a \"click\" event, preventing actual \"keydown\"\n          // event from firing. We're using this \"click\" event to still\n          // generate internal click events.\n          const focusedSprite = this._focusedSprite;\n          if (focusedSprite) {\n            const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n            if (announceText !== \"\") {\n              this.readerAlert(announceText);\n            }\n            const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\n            focusedSprite.events.dispatch(\"click\", {\n              type: \"click\",\n              originalEvent: downEvent.event,\n              point: downEvent.point,\n              simulated: true,\n              target: focusedSprite\n            });\n          }\n        }));\n        this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", ev => {\n          const focusedSprite = this._focusedSprite;\n          if (focusedSprite) {\n            if (ev.key == \"Escape\") {\n              // ESC pressed - lose current focus\n              $utils.blur();\n              this._focusedSprite = undefined;\n            }\n            let dragOffsetX = 0;\n            let dragOffsetY = 0;\n            // TODO: figure out if using bogus MouseEvent is fine, or it will\n            // fail on some platforms\n            const eventKey = $utils.getEventKey(ev);\n            switch (eventKey) {\n              case \"Enter\":\n              case \" \":\n                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n                if (announceText !== \"\") {\n                  this.readerAlert(announceText);\n                }\n                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\n                  return;\n                }\n                ev.preventDefault();\n                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\n                focusedSprite.events.dispatch(\"click\", {\n                  type: \"click\",\n                  originalEvent: downEvent.event,\n                  point: downEvent.point,\n                  simulated: true,\n                  target: focusedSprite\n                });\n                return;\n              case \"ArrowLeft\":\n                dragOffsetX = -6;\n                break;\n              case \"ArrowRight\":\n                dragOffsetX = 6;\n                break;\n              case \"ArrowUp\":\n                dragOffsetY = -6;\n                break;\n              case \"ArrowDown\":\n                dragOffsetY = 6;\n                break;\n              default:\n                return;\n            }\n            if (dragOffsetX != 0 || dragOffsetY != 0) {\n              ev.preventDefault();\n              if (!focusedSprite.isDragging()) {\n                // Start dragging\n                this._keyboardDragPoint = {\n                  x: 0,\n                  y: 0\n                };\n                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\n                  clientX: 0,\n                  clientY: 0\n                }));\n                downEvent.point = {\n                  x: 0,\n                  y: 0\n                };\n                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\n                  focusedSprite.events.dispatch(\"pointerdown\", {\n                    type: \"pointerdown\",\n                    originalEvent: downEvent.event,\n                    point: downEvent.point,\n                    simulated: true,\n                    target: focusedSprite\n                  });\n                }\n              } else {\n                // Move focus marker\n                //this._positionFocusElement(focusedSprite);\n              }\n              // Move incrementally\n              const dragPoint = this._keyboardDragPoint;\n              dragPoint.x += dragOffsetX;\n              dragPoint.y += dragOffsetY;\n              const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\n                clientX: dragPoint.x,\n                clientY: dragPoint.y\n              }), false);\n              if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\n                focusedSprite.events.dispatch(\"globalpointermove\", {\n                  type: \"globalpointermove\",\n                  originalEvent: moveEvent.event,\n                  point: moveEvent.point,\n                  simulated: true,\n                  target: focusedSprite\n                });\n              }\n            }\n          }\n        }));\n        this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", ev => {\n          if (this._focusedSprite) {\n            const focusedSprite = this._focusedSprite;\n            const eventKey = $utils.getEventKey(ev);\n            switch (eventKey) {\n              case \"ArrowLeft\":\n              case \"ArrowRight\":\n              case \"ArrowUp\":\n              case \"ArrowDown\":\n                if (focusedSprite.isDragging()) {\n                  // Simulate drag stop\n                  const dragPoint = this._keyboardDragPoint;\n                  const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\n                    clientX: dragPoint.x,\n                    clientY: dragPoint.y\n                  }));\n                  if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\n                    focusedSprite.events.dispatch(\"globalpointerup\", {\n                      type: \"globalpointerup\",\n                      originalEvent: upEvent.event,\n                      point: upEvent.point,\n                      simulated: true,\n                      target: focusedSprite\n                    });\n                  }\n                  //this._positionFocusElement(focusedSprite);\n                  this._keyboardDragPoint = undefined;\n                  // @todo dispatch mouseup event instead of calling dragStop?\n                  // this._dispatchEvent(\"globalpointerup\", target, upEvent);\n                  return;\n                } else if (focusedSprite.get(\"focusableGroup\")) {\n                  // Find next item in focusable group\n                  const group = focusedSprite.get(\"focusableGroup\");\n                  const items = this._tabindexes.filter(item => {\n                    return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\n                  });\n                  let index = items.indexOf(focusedSprite);\n                  const lastIndex = items.length - 1;\n                  index += eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\" ? 1 : -1;\n                  if (index < 0) {\n                    index = lastIndex;\n                  } else if (index > lastIndex) {\n                    index = 0;\n                  }\n                  $utils.focus(items[index].getPrivate(\"focusElement\").dom);\n                }\n                break;\n              case \"Tab\":\n                const group = focusedSprite.get(\"focusableGroup\");\n                if (group && this._isShift) {\n                  this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\n                  return;\n                }\n                break;\n            }\n          }\n        }));\n      }\n    }\n    this._startTicker();\n    this.setThemes([]);\n    this._addTooltip();\n    if (!this._hasLicense()) {\n      this._showBranding();\n    }\n  }\n  _initResizeSensor() {\n    if (this._resizeSensorDisposer) {\n      this._resizeSensorDisposer.dispose();\n    }\n    this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\n      if (this.autoResize) {\n        this.resize();\n      }\n    });\n    this._disposers.push(this._resizeSensorDisposer);\n  }\n  /**\r\n   * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n   * can be resized manually by calling this method.\r\n   */\n  resize() {\n    const rect = this._getRealSize();\n    const size = this._getCalculatedSize(rect);\n    const w = Math.floor(size.width);\n    const h = Math.floor(size.height);\n    if (w > 0 && h > 0) {\n      const realWidth = Math.floor(rect.width);\n      const realHeight = Math.floor(rect.height);\n      const htmlElementContainer = this._htmlElementContainer;\n      htmlElementContainer.style.width = w + \"px\";\n      htmlElementContainer.style.height = h + \"px\";\n      if (this._a11yD !== true) {\n        const focusElementContainer = this._focusElementContainer;\n        focusElementContainer.style.width = w + \"px\";\n        focusElementContainer.style.height = h + \"px\";\n      }\n      this._renderer.resize(realWidth, realHeight, w, h);\n      const rootContainer = this._rootContainer;\n      rootContainer.setPrivate(\"width\", w);\n      rootContainer.setPrivate(\"height\", h);\n      this._render();\n      this._handleLogo();\n    }\n  }\n  _render() {\n    this._renderer.render(this._rootContainer._display);\n    if (this._focusElementDirty) {\n      this._updateCurrentFocus();\n      this._focusElementDirty = false;\n    }\n  }\n  _runTickers(currentTime) {\n    $array.each(this._tickers, f => {\n      f(currentTime);\n    });\n  }\n  _runAnimations(currentTime) {\n    let running = 0;\n    $array.keepIf(this._animations, animation => {\n      const state = animation._runAnimation(currentTime);\n      if (state === AnimationState.Stopped) {\n        return false;\n      } else if (state === AnimationState.Playing) {\n        ++running;\n        return true;\n      } else {\n        return true;\n      }\n    });\n    this._isDirtyAnimation = false;\n    return running === 0;\n  }\n  _runDirties() {\n    //console.log(\"tick **************************************************************\");\n    let allParents = {};\n    while (this._isDirtyParents) {\n      // This must be before calling _prepareChildren\n      this._isDirtyParents = false;\n      $object.keys(this._dirtyParents).forEach(key => {\n        const parent = this._dirtyParents[key];\n        delete this._dirtyParents[key];\n        if (!parent.isDisposed()) {\n          allParents[parent.uid] = parent;\n          parent._prepareChildren();\n        }\n      });\n    }\n    $object.keys(allParents).forEach(key => {\n      allParents[key]._updateChildren();\n    });\n    const objects = [];\n    //\t\tconsole.log(\"_beforeChanged\")\n    $object.keys(this._dirty).forEach(key => {\n      const entity = this._dirty[key];\n      if (entity.isDisposed()) {\n        delete this._dirty[entity.uid];\n      } else {\n        objects.push(entity);\n        entity._beforeChanged();\n      }\n    });\n    //\t\tconsole.log(\"_changed\")\n    objects.forEach(entity => {\n      entity._changed();\n      delete this._dirty[entity.uid];\n      entity._clearDirty();\n    });\n    this._isDirty = false;\n    const depths = {};\n    const bounds = [];\n    $object.keys(this._dirtyBounds).forEach(key => {\n      const entity = this._dirtyBounds[key];\n      delete this._dirtyBounds[key];\n      if (!entity.isDisposed()) {\n        depths[entity.uid] = entity.depth();\n        bounds.push(entity);\n      }\n    });\n    this._positionHTMLElements();\n    // High depth -> low depth\n    bounds.sort((x, y) => {\n      return $order.compare(depths[y.uid], depths[x.uid]);\n    });\n    //\t\tconsole.log(\"_updateBounds\")\n    bounds.forEach(entity => {\n      entity._updateBounds();\n    });\n    //\t\tconsole.log(\"_updatePosition\")\n    const dirtyPositions = this._dirtyPositions;\n    $object.keys(dirtyPositions).forEach(key => {\n      const sprite = dirtyPositions[key];\n      delete dirtyPositions[key];\n      if (!sprite.isDisposed()) {\n        sprite._updatePosition();\n      }\n    });\n    //\t\tconsole.log(\"_afterChanged\")\n    objects.forEach(entity => {\n      entity._afterChanged();\n    });\n  }\n  _renderFrame(currentTime) {\n    if (this._updateTick) {\n      if (this.events.isEnabled(\"framestarted\")) {\n        this.events.dispatch(\"framestarted\", {\n          type: \"framestarted\",\n          target: this,\n          timestamp: currentTime\n        });\n      }\n      this._checkComputedStyles();\n      this._runTickers(currentTime);\n      const animationDone = this._runAnimations(currentTime);\n      this._runDirties();\n      this._render();\n      this._renderer.resetImageArray();\n      this._positionHTMLElements();\n      if (this.events.isEnabled(\"frameended\")) {\n        this.events.dispatch(\"frameended\", {\n          type: \"frameended\",\n          target: this,\n          timestamp: currentTime\n        });\n      }\n      return this._tickers.length === 0 && animationDone && !this._isDirtyAnimation && !this._isDirty;\n    } else {\n      return true;\n    }\n  }\n  _runTicker(currentTime, now) {\n    if (!this.isDisposed()) {\n      this.animationTime = currentTime;\n      const done = this._renderFrame(currentTime);\n      // No more work to do\n      if (done) {\n        this._ticker = null;\n        this.animationTime = null;\n      } else {\n        if (!this._paused) {\n          if (now) {\n            this._ticker;\n          } else {\n            rAF(this.fps, this._ticker);\n          }\n        }\n      }\n    }\n  }\n  _runTickerNow(timeout = 10000) {\n    if (!this.isDisposed()) {\n      const endTime = performance.now() + timeout;\n      for (;;) {\n        const currentTime = performance.now();\n        if (currentTime >= endTime) {\n          this.animationTime = null;\n          break;\n        }\n        this.animationTime = currentTime;\n        const done = this._renderFrame(currentTime);\n        if (done) {\n          this.animationTime = null;\n          break;\n        }\n      }\n    }\n  }\n  _startTicker() {\n    if (this._ticker === null) {\n      this.animationTime = null;\n      this._ticker = currentTime => {\n        this._runTicker(currentTime);\n      };\n      rAF(this.fps, this._ticker);\n    }\n  }\n  /**\r\n   * Returns whether the root is updating or not.\r\n   */\n  get updateTick() {\n    return this._updateTick;\n  }\n  /**\r\n   * Enables or disables the root updating.\r\n   */\n  set updateTick(value) {\n    this._updateTick = value;\n    if (value) {\n      this._startTicker();\n    }\n  }\n  _addDirtyEntity(entity) {\n    this._isDirty = true;\n    if (this._dirty[entity.uid] === undefined) {\n      this._dirty[entity.uid] = entity;\n    }\n    this._startTicker();\n  }\n  _addDirtyParent(parent) {\n    this._isDirty = true;\n    this._isDirtyParents = true;\n    if (this._dirtyParents[parent.uid] === undefined) {\n      this._dirtyParents[parent.uid] = parent;\n    }\n    this._startTicker();\n  }\n  _addDirtyBounds(entity) {\n    this._isDirty = true;\n    if (this._dirtyBounds[entity.uid] === undefined) {\n      this._dirtyBounds[entity.uid] = entity;\n    }\n    this._startTicker();\n  }\n  _addDirtyPosition(sprite) {\n    this._isDirty = true;\n    if (this._dirtyPositions[sprite.uid] === undefined) {\n      this._dirtyPositions[sprite.uid] = sprite;\n    }\n    this._startTicker();\n  }\n  _addAnimation(animation) {\n    this._isDirtyAnimation = true;\n    // TODO use numeric id instead\n    if (this._animations.indexOf(animation) === -1) {\n      this._animations.push(animation);\n    }\n    this._startTicker();\n  }\n  _markDirty() {\n    this._isDirty = true;\n  }\n  _markDirtyRedraw() {\n    this.events.once(\"frameended\", () => {\n      this._isDirty = true;\n      this._startTicker();\n    });\n  }\n  eachFrame(f) {\n    this._tickers.push(f);\n    this._startTicker();\n    return new Disposer(() => {\n      $array.removeFirst(this._tickers, f);\n    });\n  }\n  markDirtyGlobal(container) {\n    if (!container) {\n      container = this.container;\n    }\n    container.walkChildren(child => {\n      if (child instanceof Container) {\n        this.markDirtyGlobal(child);\n      }\n      child.markDirty();\n      child.markDirtyBounds();\n    });\n  }\n  /**\r\n   * Returns width of the target container, in pixels.\r\n   *\r\n   * @return Width\r\n   */\n  width() {\n    // TODO make this more efficient, maybe just return the renderer's width ?\n    return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\n  }\n  /**\r\n   * Returns height of the target container, in pixels.\r\n   *\r\n   * @return Height\r\n   */\n  height() {\n    // TODO make this more efficient, maybe just return the renderer's height ?\n    return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\n  }\n  /**\r\n   * Disposes root and all the content in it.\r\n   */\n  dispose() {\n    if (!this._isDisposed) {\n      this._isDisposed = true;\n      this._rootContainer.dispose();\n      this._renderer.dispose();\n      this.horizontalLayout.dispose();\n      this.verticalLayout.dispose();\n      this.interfaceColors.dispose();\n      $array.each(this._disposers, x => {\n        x.dispose();\n      });\n      if (this._inner) {\n        $utils.removeElement(this._inner);\n      }\n      $array.remove(registry.rootElements, this);\n    }\n  }\n  /**\r\n   * Returns `true` if root element is disposed.\r\n   *\r\n   * @return Disposed?\r\n   */\n  isDisposed() {\n    return this._isDisposed;\n  }\n  /**\r\n   * Triggers screen reader read out a message.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n   * @param  text  Alert text\r\n   */\n  readerAlert(text) {\n    if (this._a11yD !== true) {\n      const element = this._readerAlertElement;\n      text = $utils.stripTags(text);\n      if (element.innerHTML == text) {\n        element.innerHTML = \"\";\n      }\n      element.innerHTML = text;\n    }\n  }\n  /**\r\n   * Sets themes to be used for the chart.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n   * @param  themes  A list of themes\r\n   */\n  setThemes(themes) {\n    this._rootContainer.set(\"themes\", themes);\n    // otherwise new themes are not applied\n    const tooltipContainer = this.tooltipContainer;\n    if (tooltipContainer) {\n      tooltipContainer._applyThemes();\n    }\n    // @todo review this\n    const interfaceColors = this.interfaceColors;\n    if (interfaceColors) {\n      interfaceColors._applyThemes();\n    }\n  }\n  _addTooltip() {\n    if (!this.tooltipContainer) {\n      const tooltipContainerSettings = this._tooltipContainerSettings;\n      const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\n        position: \"absolute\",\n        isMeasured: false,\n        width: p100,\n        height: p100,\n        layer: tooltipContainerSettings ? 35 : 30,\n        layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\n      }));\n      this.tooltipContainer = tooltipContainer;\n      const tooltip = Tooltip.new(this, {});\n      this.container.set(\"tooltip\", tooltip);\n      tooltip.hide(0);\n      this._tooltip = tooltip;\n    }\n  }\n  /**\r\n   * Accesibility\r\n   */\n  _registerTabindexOrder(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    if (target.get(\"focusable\")) {\n      $array.pushOne(this._tabindexes, target);\n    } else {\n      $array.remove(this._tabindexes, target);\n    }\n    this._invalidateTabindexes();\n  }\n  _unregisterTabindexOrder(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    $array.remove(this._tabindexes, target);\n    this._invalidateTabindexes();\n  }\n  _invalidateTabindexes() {\n    if (this._a11yD == true) {\n      return;\n    }\n    this._tabindexes.sort((a, b) => {\n      const aindex = a.get(\"tabindexOrder\", 0);\n      const bindex = b.get(\"tabindexOrder\", 0);\n      if (aindex == bindex) {\n        return 0;\n      } else if (aindex > bindex) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    const groups = [];\n    $array.each(this._tabindexes, (item, index) => {\n      if (!item.getPrivate(\"focusElement\")) {\n        this._makeFocusElement(index, item);\n      } else {\n        this._moveFocusElement(index, item);\n      }\n      const group = item.get(\"focusableGroup\");\n      if (group && item.getPrivate(\"focusable\") !== false) {\n        if (groups.indexOf(group) !== -1) {\n          // Non-first element in the group, make it not directly focusable\n          item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\n        } else {\n          groups.push(group);\n        }\n      }\n    });\n  }\n  _updateCurrentFocus() {\n    if (this._a11yD == true) {\n      return;\n    }\n    if (this._focusedSprite) {\n      this._decorateFocusElement(this._focusedSprite);\n      this._positionFocusElement(this._focusedSprite);\n    }\n  }\n  _decorateFocusElement(target, focusElement) {\n    if (this._a11yD == true) {\n      return;\n    }\n    // Decorate with proper accessibility attributes\n    if (!focusElement) {\n      focusElement = target.getPrivate(\"focusElement\").dom;\n    }\n    if (!focusElement) {\n      return;\n    }\n    const role = target.get(\"role\");\n    if (role) {\n      focusElement.setAttribute(\"role\", role);\n    } else {\n      focusElement.removeAttribute(\"role\");\n    }\n    const ariaLabel = target.get(\"ariaLabel\");\n    if (ariaLabel) {\n      const label = populateString(target, ariaLabel);\n      focusElement.setAttribute(\"aria-label\", label);\n    } else {\n      focusElement.removeAttribute(\"aria-label\");\n    }\n    const ariaLive = target.get(\"ariaLive\");\n    if (ariaLive) {\n      focusElement.setAttribute(\"aria-live\", ariaLive);\n    } else {\n      focusElement.removeAttribute(\"aria-live\");\n    }\n    const ariaChecked = target.get(\"ariaChecked\");\n    if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\n      focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\n    } else {\n      focusElement.removeAttribute(\"aria-checked\");\n    }\n    const ariaCurrent = target.get(\"ariaCurrent\");\n    if (ariaCurrent != null) {\n      focusElement.setAttribute(\"aria-current\", ariaCurrent);\n    } else {\n      focusElement.removeAttribute(\"aria-current\");\n    }\n    const ariaSelected = target.get(\"ariaSelected\");\n    if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\n      focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\n    } else {\n      focusElement.removeAttribute(\"aria-selected\");\n    }\n    if (target.get(\"ariaHidden\")) {\n      focusElement.setAttribute(\"aria-hidden\", \"true\");\n    } else {\n      focusElement.removeAttribute(\"aria-hidden\");\n    }\n    const ariaOrientation = target.get(\"ariaOrientation\");\n    if (ariaOrientation) {\n      focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\n    } else {\n      focusElement.removeAttribute(\"aria-orientation\");\n    }\n    const ariaValueNow = target.get(\"ariaValueNow\");\n    if (ariaValueNow) {\n      focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\n    } else {\n      focusElement.removeAttribute(\"aria-valuenow\");\n    }\n    const ariaValueMin = target.get(\"ariaValueMin\");\n    if (ariaValueMin) {\n      focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\n    } else {\n      focusElement.removeAttribute(\"aria-valuemin\");\n    }\n    const ariaValueMax = target.get(\"ariaValueMax\");\n    if (ariaValueMax) {\n      focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\n    } else {\n      focusElement.removeAttribute(\"aria-valuemax\");\n    }\n    const ariaValueText = target.get(\"ariaValueText\");\n    if (ariaValueText) {\n      focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\n    } else {\n      focusElement.removeAttribute(\"aria-valuetext\");\n    }\n    const ariaControls = target.get(\"ariaControls\");\n    if (ariaControls) {\n      focusElement.setAttribute(\"aria-controls\", ariaControls);\n    } else {\n      focusElement.removeAttribute(\"aria-controls\");\n    }\n    if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\n      if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\n        focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\n      }\n      focusElement.removeAttribute(\"aria-hidden\");\n    } else {\n      focusElement.removeAttribute(\"tabindex\");\n      focusElement.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n  _makeFocusElement(index, target) {\n    if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\n      return;\n    }\n    // Init\n    const focusElement = document.createElement(\"div\");\n    if (target.get(\"role\") != \"tooltip\") {\n      focusElement.tabIndex = this.tabindex;\n    }\n    focusElement.style.position = \"absolute\";\n    $utils.setInteractive(focusElement, false);\n    const disposers = [];\n    target.setPrivate(\"focusElement\", {\n      dom: focusElement,\n      disposers\n    });\n    this._decorateFocusElement(target);\n    disposers.push($utils.addEventListener(focusElement, \"focus\", ev => {\n      this._handleFocus(ev);\n    }));\n    disposers.push($utils.addEventListener(focusElement, \"blur\", ev => {\n      this._handleBlur(ev);\n    }));\n    this._moveFocusElement(index, target);\n  }\n  _removeFocusElement(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    $array.remove(this._tabindexes, target);\n    const focusElement = target.getPrivate(\"focusElement\");\n    if (focusElement) {\n      const container = this._focusElementContainer;\n      container.removeChild(focusElement.dom);\n      $array.each(focusElement.disposers, x => {\n        x.dispose();\n      });\n    }\n  }\n  _hideFocusElement(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    const focusElement = target.getPrivate(\"focusElement\");\n    focusElement.dom.style.display = \"none\";\n  }\n  _moveFocusElement(index, target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    // Get container\n    const container = this._focusElementContainer;\n    const focusElement = target.getPrivate(\"focusElement\").dom;\n    if (focusElement === this._focusElementContainer.children[index]) {\n      // Nothing to do\n      return;\n    }\n    const next = this._focusElementContainer.children[index + 1];\n    if (next) {\n      container.insertBefore(focusElement, next);\n    } else {\n      container.append(focusElement);\n    }\n  }\n  _positionFocusElement(target) {\n    if (this._a11yD == true || target == undefined) {\n      return;\n    }\n    const bounds = target.globalBounds();\n    let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\n    let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\n    const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\n    let x = bounds.left - padding;\n    let y = bounds.top - padding;\n    if (width < 0) {\n      x += width;\n      width = Math.abs(width);\n    }\n    if (height < 0) {\n      y += height;\n      height = Math.abs(height);\n    }\n    const focusElement = target.getPrivate(\"focusElement\").dom;\n    focusElement.style.top = y + \"px\";\n    focusElement.style.left = x + \"px\";\n    focusElement.style.width = width + padding * 2 + \"px\";\n    focusElement.style.height = height + padding * 2 + \"px\";\n  }\n  _getSpriteByFocusElement(target) {\n    let found;\n    $array.eachContinue(this._tabindexes, (item, _index) => {\n      if (item.getPrivate(\"focusElement\").dom === target) {\n        found = item;\n        return false;\n      }\n      return true;\n    });\n    return found;\n  }\n  _handleFocus(ev) {\n    if (this._a11yD == true) {\n      return;\n    }\n    // Get element\n    //const focused = this._tabindexes[index];\n    const focused = this._getSpriteByFocusElement(ev.target);\n    if (!focused) {\n      return;\n    }\n    // Jump over hidden elements\n    if (!focused.isVisibleDeep()) {\n      this._focusNext(ev.target, this._isShift ? -1 : 1);\n      return;\n    }\n    // Size and position\n    this._positionFocusElement(focused);\n    //this._decorateFocusElement(focused);\n    this._focusedSprite = focused;\n    if (focused.events.isEnabled(\"focus\")) {\n      focused.events.dispatch(\"focus\", {\n        type: \"focus\",\n        originalEvent: ev,\n        target: focused\n      });\n    }\n  }\n  _focusNext(el, direction, group) {\n    if (this._a11yD == true) {\n      return;\n    }\n    const focusableElements = Array.from(document.querySelectorAll(['a[href]', 'area[href]', 'button:not([disabled])', 'details', 'input:not([disabled])', 'iframe:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', '[contentEditable=\"\"]', '[contentEditable=\"true\"]', '[contentEditable=\"TRUE\"]', '[tabindex]:not([tabindex^=\"-\"])'\n    //':not([disabled])'\n    ].join(',')));\n    let index = focusableElements.indexOf(el) + direction;\n    if (index < 0) {\n      index = focusableElements.length - 1;\n    } else if (index >= focusableElements.length) {\n      index = 0;\n    }\n    const targetElement = focusableElements[index];\n    if (group && direction == -1) {\n      const target = this._getSpriteByFocusElement(targetElement);\n      if (target && target.get(\"focusableGroup\") == group) {\n        this._focusNext(targetElement, direction);\n        return;\n      }\n    }\n    targetElement.focus();\n  }\n  _handleBlur(ev) {\n    if (this._a11yD == true) {\n      return;\n    }\n    const focused = this._focusedSprite;\n    if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\n      focused.events.dispatch(\"blur\", {\n        type: \"blur\",\n        originalEvent: ev,\n        target: focused\n      });\n    }\n    this._focusedSprite = undefined;\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateTooltip(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    const text = $utils.stripTags(target._getText());\n    let tooltipElement = target.getPrivate(\"tooltipElement\");\n    if (target.get(\"role\") == \"tooltip\" && text != \"\") {\n      if (!tooltipElement) {\n        tooltipElement = this._makeTooltipElement(target);\n      }\n      if (tooltipElement.innerHTML != text) {\n        tooltipElement.innerHTML = text;\n      }\n      tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\n    } else if (tooltipElement) {\n      tooltipElement.remove();\n      target.removePrivate(\"tooltipElement\");\n    }\n  }\n  _makeTooltipElement(target) {\n    const container = this._tooltipElementContainer;\n    const tooltipElement = document.createElement(\"div\");\n    tooltipElement.style.position = \"absolute\";\n    tooltipElement.style.width = \"1px\";\n    tooltipElement.style.height = \"1px\";\n    tooltipElement.style.overflow = \"hidden\";\n    tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n    $utils.setInteractive(tooltipElement, false);\n    this._decorateFocusElement(target, tooltipElement);\n    container.append(tooltipElement);\n    target.setPrivate(\"tooltipElement\", tooltipElement);\n    return tooltipElement;\n  }\n  _removeTooltipElement(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    const tooltipElement = target.getPrivate(\"tooltipElement\");\n    if (tooltipElement) {\n      const parent = tooltipElement.parentElement;\n      if (parent) {\n        parent.removeChild(tooltipElement);\n      }\n    }\n  }\n  _invalidateAccessibility(target) {\n    if (this._a11yD == true) {\n      return;\n    }\n    this._focusElementDirty = true;\n    const focusElement = target.getPrivate(\"focusElement\");\n    if (target.get(\"focusable\")) {\n      if (focusElement) {\n        this._decorateFocusElement(target);\n        this._positionFocusElement(target);\n      }\n      // else {\n      // \tthis._renderer._makeFocusElement(0, this);\n      // }\n    } else if (focusElement) {\n      this._removeFocusElement(target);\n    }\n    //this.updateCurrentFocus();\n  }\n  /**\r\n   * Returns `true` if `target` is currently focused.\r\n   *\r\n   * @param   target  Target\r\n   * @return          Focused?\r\n   */\n  focused(target) {\n    return this._focusedSprite === target;\n  }\n  /**\r\n   * Converts document coordinates to coordinates withing root element.\r\n   *\r\n   * @param   point  Document point\r\n   * @return         Root point\r\n   */\n  documentPointToRoot(point) {\n    const rect = this._getRealSize();\n    const size = this._getCalculatedSize(rect);\n    const scaleWidth = size.width / rect.width;\n    const scaleHeight = size.height / rect.height;\n    return {\n      x: (point.x - rect.left) * scaleWidth,\n      y: (point.y - rect.top) * scaleHeight\n    };\n  }\n  /**\r\n   * Converts root coordinates to document\r\n   *\r\n   * @param   point  Document point\r\n   * @return         Root point\r\n   */\n  rootPointToDocument(point) {\n    const rect = this._getRealSize();\n    const size = this._getCalculatedSize(rect);\n    const scaleWidth = size.width / rect.width;\n    const scaleHeight = size.height / rect.height;\n    return {\n      x: point.x / scaleWidth + rect.left,\n      y: point.y / scaleHeight + rect.top\n    };\n  }\n  /**\r\n   * @ignore\r\n   */\n  addDisposer(disposer) {\n    this._disposers.push(disposer);\n    return disposer;\n  }\n  _updateComputedStyles() {\n    const styles = window.getComputedStyle(this.dom);\n    let fontHash = \"\";\n    $object.each(styles, (key, val) => {\n      if ($type.isString(key) && key.match(/^font/)) {\n        fontHash += val;\n      }\n    });\n    const changed = fontHash != this._fontHash;\n    if (changed) {\n      this._fontHash = fontHash;\n    }\n    return changed;\n  }\n  _checkComputedStyles() {\n    if (this._updateComputedStyles()) {\n      this._invalidateLabelBounds(this.container);\n    }\n  }\n  _invalidateLabelBounds(target) {\n    if (target instanceof Container) {\n      target.children.each(child => {\n        this._invalidateLabelBounds(child);\n      });\n    } else if (target instanceof Text) {\n      target.markDirtyBounds();\n    }\n  }\n  /**\r\n   * To all the clever heads out there. Yes, we did not make any attempts to\r\n   * scramble this.\r\n   *\r\n   * This is a part of a tool meant for our users to manage their commercial\r\n   * licenses for removal of amCharts branding from charts.\r\n   *\r\n   * The only legit way to do so is to purchase a commercial license for amCharts:\r\n   * https://www.amcharts.com/online-store/\r\n   *\r\n   * Removing or altering this code, or disabling amCharts branding in any other\r\n   * way is against the license and thus illegal.\r\n   */\n  _hasLicense() {\n    for (let i = 0; i < registry.licenses.length; i++) {\n      if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  _licenseApplied() {\n    if (this._logo) {\n      this._logo.set(\"forceHidden\", true);\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  get debugGhostView() {\n    return this._renderer.debugGhostView;\n  }\n  /**\r\n   * @ignore\r\n   */\n  set debugGhostView(value) {\n    this._renderer.debugGhostView = value;\n  }\n  /**\r\n   * Set this to `true` if you need chart to require first a tap onto it before\r\n   * touch gesture related functionality like zoom/pan is turned on.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n   * @default false\r\n   * @since 5.2.9\r\n   * @param  value  Needs a tap to activate touch functions\r\n   */\n  set tapToActivate(value) {\n    this._renderer.tapToActivate = value;\n  }\n  /**\r\n   * @return Needs a tap to activate touch functions\r\n   */\n  get tapToActivate() {\n    return this._renderer.tapToActivate;\n  }\n  /**\r\n   * If `tapToActivate` is set to `true`, this setting will determine number\r\n   * of milliseconds the chart will stay \"active\", before releasing the\r\n   * controls back to the page.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n   * @default 3000\r\n   * @since 5.2.9\r\n   * @param  value  Timeout\r\n   */\n  set tapToActivateTimeout(value) {\n    this._renderer.tapToActivateTimeout = value;\n  }\n  /**\r\n   * @return Timeout\r\n   */\n  get tapToActivateTimeout() {\n    return this._renderer.tapToActivateTimeout;\n  }\n  _makeHTMLElement(target) {\n    // Get container\n    const container = this._htmlElementContainer;\n    // Init\n    const htmlElement = document.createElement(\"div\");\n    target.setPrivate(\"htmlElement\", htmlElement);\n    // Should we put this into a wrapper?\n    let needWrapper = false;\n    let wrapperTarget;\n    target._walkParents(parent => {\n      if (parent.get(\"verticalScrollbar\")) {\n        needWrapper = true;\n        wrapperTarget = parent;\n        return false;\n      }\n    });\n    let htmlElementWrapper;\n    if (needWrapper) {\n      htmlElementWrapper = document.createElement(\"div\");\n      target.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\n      target.setPrivate(\"wrapperContainer\", wrapperTarget);\n      htmlElementWrapper.style.position = \"absolute\";\n      htmlElementWrapper.style.overflow = \"hidden\";\n      htmlElementWrapper.style.boxSizing = \"border-box\";\n      htmlElementWrapper.style.top = \"0px\";\n      htmlElementWrapper.style.left = \"0px\";\n      htmlElementWrapper.style.width = \"100%\";\n      htmlElementWrapper.style.height = \"100%\";\n      wrapperTarget.events.on(\"boundschanged\", () => {\n        this._positionHTMLElement(target);\n      });\n    }\n    //htmlElement.tabIndex = this.tabindex;\n    htmlElement.style.position = \"absolute\";\n    htmlElement.style.overflow = \"auto\";\n    htmlElement.style.boxSizing = \"border-box\";\n    $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\n    // Translate events\n    if (target.events.isEnabled(\"click\")) {\n      $utils.setInteractive(htmlElement, true);\n      this._disposers.push($utils.addEventListener(htmlElement, \"click\", ev => {\n        const downEvent = this._renderer.getEvent(ev);\n        target.events.dispatch(\"click\", {\n          type: \"click\",\n          originalEvent: downEvent.event,\n          point: downEvent.point,\n          simulated: false,\n          target: target\n        });\n      }));\n    }\n    this._positionHTMLElement(target);\n    if (needWrapper) {\n      htmlElementWrapper.append(htmlElement);\n      container.append(htmlElementWrapper);\n    } else {\n      container.append(htmlElement);\n    }\n    $array.pushOne(this._htmlEnabledContainers, target);\n    return htmlElement;\n  }\n  _positionHTMLElements() {\n    $array.each(this._htmlEnabledContainers, target => {\n      this._positionHTMLElement(target);\n    });\n  }\n  _positionHTMLElement(target) {\n    const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\n    if (htmlElementWrapper) {\n      const wrapperTarget = target.getPrivate(\"wrapperContainer\");\n      if (wrapperTarget) {\n        const bounds = wrapperTarget.globalBounds();\n        htmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\n      }\n    }\n    const htmlElement = target.getPrivate(\"htmlElement\");\n    if (htmlElement) {\n      // Translate settings\n      const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\n      $array.each(visualSettings, setting => {\n        const value = target.get(setting);\n        if (value) {\n          htmlElement.style[setting] = value + \"px\";\n        } else {\n          htmlElement.style[setting] = \"\";\n        }\n      });\n      const strtingSettings = [\"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"fontStyle\", \"fontVariant\", \"textDecoration\"];\n      $array.each(strtingSettings, setting => {\n        const value = target.get(setting);\n        if (value) {\n          if (setting == \"fontSize\" && !$type.isString(value)) {\n            htmlElement.style[setting] = value + \"px\";\n          } else {\n            htmlElement.style[setting] = value + \"\";\n          }\n        } else {\n          htmlElement.style[setting] = \"\";\n        }\n      });\n      // Init and reset scale / rotation\n      const scale = target.compositeScale() || 1;\n      const rotation = target.compositeRotation() || 0;\n      htmlElement.style.transform = \"\";\n      htmlElement.style.transformOrigin = \"\";\n      // Deal with opacity\n      const opacity = target.compositeOpacity();\n      setTimeout(() => {\n        htmlElement.style.opacity = opacity + \"\";\n      }, 10);\n      const visible = target.isVisibleDeep();\n      if (visible) {\n        htmlElement.style.display = \"block\";\n      }\n      // Deal with position\n      // const bounds = target.globalBounds();\n      // htmlElement.style.top = (bounds.top) + \"px\";\n      // htmlElement.style.left = (bounds.left) + \"px\";\n      let pos = {\n        x: target.x() + target.get(\"dx\", 0),\n        y: target.y() + target.get(\"dy\", 0)\n      };\n      if (target.parent) {\n        pos = target.parent.toGlobal(pos);\n      }\n      htmlElement.style.top = pos.y + \"px\";\n      htmlElement.style.left = pos.x + \"px\";\n      // Use width/height if those are set\n      const width = target.get(\"width\");\n      const height = target.get(\"height\");\n      let w = 0;\n      let h = 0;\n      if (width) {\n        w = target.width();\n      }\n      if (height) {\n        h = target.height();\n      }\n      if (!width || !height) {\n        htmlElement.style.position = \"fixed\";\n        htmlElement.style.width = \"\";\n        htmlElement.style.height = \"\";\n        const bbox = htmlElement.getBoundingClientRect();\n        htmlElement.style.position = \"absolute\";\n        if (!width) w = bbox.width;\n        if (!height) h = bbox.height;\n        let lw = w / scale;\n        let lh = h / scale;\n        let cx = target.get(\"centerX\", 0);\n        let cy = target.get(\"centerY\", 0);\n        let ll = 0;\n        let lr = 0;\n        let lt = 0;\n        let lb = 0;\n        if (cx instanceof Percent) {\n          ll = -cx.value * lw;\n          lr = (1 - cx.value) * lw;\n        } else {\n          ll = -cx;\n          lr = lw - cx;\n        }\n        if (cy instanceof Percent) {\n          lt = -cy.value * lh;\n          lb = (1 - cy.value) * lh;\n        } else {\n          lt = -cy;\n          lb = lh - cy;\n        }\n        target._localBounds = {\n          left: ll,\n          right: lr,\n          top: lt,\n          bottom: lb\n        };\n        let previousBounds = target._adjustedLocalBounds;\n        let newBounds = target._display.getAdjustedBounds(target._localBounds);\n        target._adjustedLocalBounds = newBounds;\n        // compare each value of the bounds\n        if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\n          target.markDirtyBounds();\n        }\n      }\n      if (w > 0) {\n        htmlElement.style.minWidth = w + \"px\";\n      }\n      if (h > 0) {\n        htmlElement.style.minHeight = h + \"px\";\n      }\n      // Hide or show\n      if (!visible || opacity == 0) {\n        htmlElement.style.display = \"none\";\n      }\n      // Center position\n      const x = target.get(\"centerX\", 0);\n      const originX = isPercent(x) ? x.percent + \"%\" : x + \"px\";\n      const y = target.get(\"centerY\", 0);\n      const originY = isPercent(y) ? y.percent + \"%\" : y + \"px\";\n      if (x || y) {\n        htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\n      }\n      // Deal with scale\n      if (scale != 1) {\n        htmlElement.style.transform += \"scale(\" + scale + \")\";\n      }\n      if (rotation != 0) {\n        htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\n      }\n      if (htmlElement.style.transform != \"\") {\n        htmlElement.style.transformOrigin = originX + \" \" + originY;\n        //htmlElement.style.transformOrigin = \"0% 0%\";\n      }\n    }\n  }\n  _setHTMLContent(target, html) {\n    let htmlElement = target.getPrivate(\"htmlElement\");\n    if (!htmlElement) {\n      htmlElement = this._makeHTMLElement(target);\n    }\n    if (htmlElement.innerHTML != html) {\n      htmlElement.innerHTML = html;\n    }\n  }\n  _removeHTMLContent(target) {\n    const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\n    const htmlElement = target.getPrivate(\"htmlElement\");\n    if (htmlElementWrapper) {\n      this._htmlElementContainer.removeChild(htmlElementWrapper);\n      target.removePrivate(\"htmlElement\");\n      target.removePrivate(\"htmlElementWrapper\");\n      target.removePrivate(\"wrapperContainer\");\n    } else if (htmlElement) {\n      this._htmlElementContainer.removeChild(htmlElement);\n      target.removePrivate(\"htmlElement\");\n      target.removePrivate(\"wrapperContainer\");\n    }\n    $array.remove(this._htmlEnabledContainers, target);\n  }\n}\n", "import { Entity } from \"./Entity\";\nimport { StyleRule } from \"./Utils\";\nimport { MultiDisposer, CounterDisposer } from \"../../core/util/Disposer\";\nimport * as $utils from \"./Utils\";\n/**\r\n * @ignore\r\n */\nlet rules;\n/**\r\n * @ignore\r\n */\nfunction modalCSS(element, root, _prefix) {\n  const ic = root.interfaceColors;\n  const active = ic.get(\"secondaryButton\").toCSS();\n  const text = ic.get(\"text\").toCSS();\n  const shadow = ic.get(\"alternativeBackground\").toCSS(0.45);\n  //const altbg = ic.get(\"alternativeBackground\")!.toCSS();\n  if (!rules) {\n    const disposer = new MultiDisposer([new StyleRule(element, \".am5-modal\", {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"position\": \"absolute\",\n      \"z-index\": \"100000\",\n      \"top\": \"0\",\n      \"left\": \"0\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-curtain\", {\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"position\": \"absolute\",\n      \"background\": ic.get(\"background\").toCSS(0.5),\n      \"z-index\": \"100\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-wrapper\", {\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"position\": \"absolute\",\n      \"text-align\": \"center\",\n      \"white-space\": \"nowrap\",\n      \"background\": ic.get(\"background\").toCSS(0.5),\n      \"z-index\": \"101\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-wrapper:before\", {\n      \"content\": \"''\",\n      \"display\": \"inline-block\",\n      \"height\": \"100%\",\n      \"vertical-align\": \"middle\",\n      \"margin-right\": \"-0.25em\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-content\", {\n      \"display\": \"inline-block\",\n      \"padding\": \"1.2em\",\n      \"vertical-align\": \"middle\",\n      \"text-align\": \"start\",\n      \"white-space\": \"normal\",\n      \"background\": ic.get(\"background\").toCSS(),\n      //\"border\": \"1px solid \" + ic.get(\"alternativeBackground\")!.toCSS(),\n      \"border-radius\": \"4px\",\n      \"-webkit-box-shadow\": \"0px 0px 36px 0px \" + shadow,\n      \"box-shadow\": \"0px 0px 36px 0px \" + shadow,\n      \"color\": text\n    }, root.nonce), new StyleRule(element, \".am5-modal-content h1\", {\n      \"font-size\": \"1em\",\n      \"margin\": \"0 0 0.5em 0\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-table\", {\n      \"display\": \"table\",\n      \"margin\": \"1em 0\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-table-row\", {\n      \"display\": \"table-row\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-table-heading\", {\n      \"display\": \"table-heading\",\n      \"padding\": \"3px 10px 3px 0\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-table-cell\", {\n      \"display\": \"table-cell\",\n      \"padding\": \"3px 0 3px 0\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-table-cell > *\", {\n      \"vertical-align\": \"middle\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select\", {\n      \"border\": \"1px solid \" + active,\n      \"border-radius\": \"4px\",\n      \"padding\": \"3px 5px\",\n      \"margin\": \"2px\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-input-narrow\", {\n      \"width\": \"50px\"\n    }, root.nonce), new StyleRule(element, \".am5-modal-button\", {\n      \"font-weight\": \"400\",\n      \"color\": ic.get(\"secondaryButtonText\").toCSS(),\n      \"line-height\": \"1.5\",\n      \"text-align\": \"center\",\n      \"text-decoration\": \"none\",\n      \"vertical-align\": \"middle\",\n      \"cursor\": \"pointer\",\n      \"padding\": \"0.2em 0.8em\",\n      \"font-size\": \"1em\",\n      \"border-radius\": \"0.25em\",\n      \"margin\": \"0 0.25em 0 0\",\n      \"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\").toCSS(),\n      \"background\": ic.get(\"secondaryButton\").toCSS()\n    }, root.nonce), new StyleRule(element, \".am5-modal-button:hover\", {\n      \"background\": ic.get(\"secondaryButtonHover\").toCSS()\n    }, root.nonce), new StyleRule(element, \".am5-modal-button.am5-modal-primary\", {\n      \"color\": ic.get(\"primaryButtonText\").toCSS(),\n      \"border\": \"1px solid \" + ic.get(\"primaryButtonStroke\").toCSS(),\n      \"background\": ic.get(\"primaryButton\").toCSS()\n    }, root.nonce), new StyleRule(element, \".am5-modal-button.am5-modal-primary:hover\", {\n      \"background\": ic.get(\"primaryButtonHover\").toCSS()\n    }, root.nonce)]);\n    rules = new CounterDisposer(() => {\n      rules = undefined;\n      disposer.dispose();\n    });\n  }\n  return rules.increment();\n}\n/**\r\n * Used to display a modal dialog with HTML content.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/modal-popups/} for more info\r\n */\nexport class Modal extends Entity {\n  //protected _currentPass: number = 0;\n  _afterNew() {\n    // Applying themes because this will not have parents\n    super._afterNewApplyThemes();\n    // Defaults\n    this._setRawDefault(\"deactivateRoot\", true);\n    // Load CSS\n    modalCSS($utils.getShadowRoot(this._root.dom), this._root);\n    // Create elements\n    const container = document.createElement(\"div\");\n    container.className = \"am5-modal\";\n    container.style.display = \"none\";\n    this.root._inner.appendChild(container);\n    this.setPrivate(\"container\", container);\n    const curtain = document.createElement(\"div\");\n    curtain.className = \"am5-modal-curtain\";\n    container.appendChild(curtain);\n    this.setPrivate(\"curtain\", curtain);\n    this._disposers.push($utils.addEventListener(curtain, \"click\", () => {\n      this.cancel();\n    }));\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"am5-modal-wrapper\";\n    container.appendChild(wrapper);\n    this.setPrivate(\"wrapper\", wrapper);\n    const content = document.createElement(\"div\");\n    content.className = \"am5-modal-content\";\n    wrapper.appendChild(content);\n    this.setPrivate(\"content\", content);\n    const html = this.get(\"content\");\n    if (html) {\n      content.innerHTML = html;\n    }\n    // Close on ESC\n    if ($utils.supports(\"keyboardevents\")) {\n      this._disposers.push($utils.addEventListener(document, \"keydown\", ev => {\n        if (this.isOpen() && $utils.getEventKey(ev) == \"Escape\") {\n          this.cancel();\n        }\n      }));\n    }\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"content\")) {\n      this.getPrivate(\"content\").innerHTML = this.get(\"content\", \"\");\n    }\n  }\n  /**\r\n   * Returns `true` if modal is currently open.\r\n   *\r\n   * @return  Modal open?\r\n   */\n  isOpen() {\n    return this.getPrivate(\"container\").style.display != \"none\";\n  }\n  /**\r\n   * Opens modal.\r\n   */\n  open() {\n    this.getPrivate(\"container\").style.display = \"block\";\n    if (this.get(\"deactivateRoot\")) {\n      this.setTimeout(() => {\n        this._root._renderer.interactionsEnabled = false;\n      }, 10);\n    }\n    this.events.dispatch(\"opened\", {\n      type: \"opened\",\n      target: this\n    });\n  }\n  /**\r\n   * Closes modal.\r\n   */\n  close() {\n    this.getPrivate(\"container\").style.display = \"none\";\n    if (this.get(\"deactivateRoot\")) {\n      this._root._renderer.interactionsEnabled = true;\n    }\n    this.events.dispatch(\"closed\", {\n      type: \"closed\",\n      target: this\n    });\n  }\n  /**\r\n   * Closes modal and invokes `cancelled` event.\r\n   */\n  cancel() {\n    this.getPrivate(\"container\").style.display = \"none\";\n    if (this.get(\"deactivateRoot\")) {\n      this._root._renderer.interactionsEnabled = true;\n    }\n    this.events.dispatch(\"cancelled\", {\n      type: \"cancelled\",\n      target: this\n    });\n  }\n  /**\r\n   * Disposes modal.\r\n   */\n  _dispose() {\n    super._dispose();\n    const container = this.getPrivate(\"container\");\n    if (container.parentElement) {\n      container.parentElement.removeChild(container);\n    }\n  }\n}\nObject.defineProperty(Modal, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Modal\"\n});\nObject.defineProperty(Modal, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Modal.className])\n});\n", "import { Entity } from \"../../core/util/Entity\";\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\nexport class Bullet extends Entity {\n  constructor() {\n    super(...arguments);\n    // used by MapPolygons where one data item can have multiple bullets of the same kind\n    Object.defineProperty(this, \"_index\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Target series object if it's a bullet for series.\r\n     */\n    Object.defineProperty(this, \"series\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    // Applying themes because bullet will not have parent\n    super._afterNewApplyThemes();\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"sprite\")) {\n      const sprite = this.get(\"sprite\");\n      if (sprite) {\n        sprite.setAll({\n          position: \"absolute\",\n          role: \"figure\"\n        });\n        this._disposers.push(sprite);\n      }\n    }\n    if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n      if (this.series) {\n        this.series._positionBullet(this);\n      }\n    }\n  }\n}\nObject.defineProperty(Bullet, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Bullet\"\n});\nObject.defineProperty(Bullet, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Bullet.className])\n});\n", "import { Graphics } from \"./Graphics\";\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Circle extends Graphics {\n  _afterNew() {\n    super._afterNew();\n    this._display.isMeasured = true;\n    this.setPrivateRaw(\"trustBounds\", true);\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"radius\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\n    }\n  }\n}\nObject.defineProperty(Circle, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Circle\"\n});\nObject.defineProperty(Circle, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Circle.className])\n});\n", "import { Graphics } from \"./Graphics\";\nimport * as $array from \"../util/Array\";\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/polygon/} for more info\r\n * @important\r\n * @since 5.4.0\r\n */\nexport class Polygon extends Graphics {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"morphAnimation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"coordinates\")) {\n      const points = [];\n      const coordinates = this.get(\"coordinates\");\n      if (coordinates) {\n        $array.each(coordinates, coord => {\n          points.push({\n            x: coord[0],\n            y: coord[1]\n          });\n        });\n      }\n      this.set(\"points\", points);\n    }\n    if (this.isPrivateDirty(\"points\")) {\n      this._clear = true;\n    }\n    if (this.isDirty(\"points\")) {\n      this._clear = true;\n      const points = this.get(\"points\");\n      const prevPoints = this._prevSettings.points;\n      if (prevPoints) {\n        if (points) {\n          let copy = $array.copy(points);\n          let prevCopy = $array.copy(prevPoints);\n          let cl = copy.length;\n          let pl = prevCopy.length;\n          if (cl > pl) {\n            let newCopy = $array.copy(copy);\n            for (let i = 0; i < cl; i++) {\n              let index = Math.floor(i / cl * pl);\n              newCopy[i] = {\n                x: prevCopy[index].x,\n                y: prevCopy[index].y\n              };\n            }\n            prevCopy = newCopy;\n          } else if (pl > cl) {\n            let newCopy = $array.copy(prevCopy);\n            for (let i = 0; i < pl; i++) {\n              let index = Math.floor(i / pl * cl);\n              newCopy[i] = {\n                x: copy[index].x,\n                y: copy[index].y\n              };\n            }\n            copy = newCopy;\n          }\n          this.setPrivateRaw(\"previousPoints\", prevCopy);\n          this.setPrivateRaw(\"points\", copy);\n          this.morphAnimation = this.animatePrivate({\n            key: \"morphProgress\",\n            from: 0,\n            to: 1,\n            duration: this.get(\"animationDuration\", 0),\n            easing: this.get(\"animationEasing\")\n          });\n          // solves no animated theme\n          this._root.events.once(\"frameended\", () => {\n            this._markDirtyPrivateKey(\"morphProgress\");\n          });\n        }\n      } else {\n        this.setPrivateRaw(\"previousPoints\", points);\n        this.setPrivateRaw(\"points\", points);\n      }\n      let minX = Infinity;\n      let maxX = -Infinity;\n      let minY = Infinity;\n      let maxY = -Infinity;\n      if (points) {\n        for (let i = 1, len = points.length; i < len; i++) {\n          const point = points[i];\n          minX = Math.min(minX, point.x);\n          maxX = Math.max(maxX, point.x);\n          minY = Math.min(minY, point.y);\n          maxY = Math.max(maxY, point.y);\n        }\n      }\n      this.setPrivate(\"minX\", minX);\n      this.setPrivate(\"maxX\", maxX);\n      this.setPrivate(\"minY\", minY);\n      this.setPrivate(\"maxY\", minY);\n    }\n    if (this.isPrivateDirty(\"morphProgress\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      this._draw();\n    }\n  }\n  _draw() {\n    const previousPoints = this.getPrivate(\"previousPoints\");\n    const points = this.getPrivate(\"points\");\n    const morphProgress = this.getPrivate(\"morphProgress\", 1);\n    if (points && previousPoints) {\n      const first = points[0];\n      const prevFirst = previousPoints[0];\n      if (first) {\n        this._display.moveTo(prevFirst.x + (first.x - prevFirst.x) * morphProgress, prevFirst.y + (first.y - prevFirst.y) * morphProgress);\n      }\n      for (let i = 1, len = points.length; i < len; i++) {\n        const point = points[i];\n        const prevPoint = previousPoints[i];\n        this._display.lineTo(prevPoint.x + (point.x - prevPoint.x) * morphProgress, prevPoint.y + (point.y - prevPoint.y) * morphProgress);\n      }\n      this._display.closePath();\n    }\n  }\n  _updateSize() {\n    this.markDirty();\n    this._clear = true;\n  }\n}\nObject.defineProperty(Polygon, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Polygon\"\n});\nObject.defineProperty(Polygon, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Polygon.className])\n});\n", "import { Graphics } from \"./Graphics\";\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Ellipse extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      this._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\n    }\n  }\n}\nObject.defineProperty(Ellipse, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Ellipse\"\n});\nObject.defineProperty(Ellipse, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Ellipse.className])\n});\n", "import { Graphics } from \"./Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Draws a Star.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Star extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"spikes\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      const display = this._display;\n      const r = this.get(\"radius\", 0);\n      const ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n      const spikes = this.get(\"spikes\", 0);\n      const step = Math.PI / spikes;\n      let angle = Math.PI / 2 * 3;\n      display.moveTo(0, -r);\n      for (let i = 0; i < spikes; i++) {\n        display.lineTo(Math.cos(angle) * r, Math.sin(angle) * r);\n        angle += step;\n        display.lineTo(Math.cos(angle) * ir, Math.sin(angle) * ir);\n        angle += step;\n      }\n      display.lineTo(0, -r);\n      display.closePath();\n    }\n  }\n}\nObject.defineProperty(Star, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Star\"\n});\nObject.defineProperty(Star, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Star.className])\n});\n", "import { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { color } from \"../../core/util/Color\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * A version of [[Container]] which adds zooming capabilities.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n * @since 5.8.0\r\n * @important\r\n */\nexport class ZoomableContainer extends Container {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_za\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_txa\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tya\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_movePoints\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_downScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_downX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_downY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_pinchDP\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * All elements must be added to `contents.children` instead of `children` of\r\n     * [[ZoomableContainer]].\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n     */\n    Object.defineProperty(this, \"contents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {\n        width: p100,\n        height: p100,\n        x: 0,\n        y: 0,\n        draggable: true,\n        background: Rectangle.new(this._root, {\n          fill: color(0xffffff),\n          fillOpacity: 0\n        })\n      }))\n    });\n    Object.defineProperty(this, \"_wheelDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    const events = this.contents.events;\n    this._disposers.push(events.on(\"pointerdown\", event => {\n      this._handleThisDown(event);\n    }));\n    this._disposers.push(events.on(\"globalpointerup\", event => {\n      this._handleThisUp(event);\n    }));\n    this._disposers.push(events.on(\"globalpointermove\", event => {\n      this._handleThisMove(event);\n    }));\n    const bg = this.contents.get(\"background\");\n    if (bg) {\n      bg.adapters.add(\"width\", width => {\n        return Number(width) * 20;\n      });\n      bg.adapters.add(\"height\", height => {\n        return Number(height) * 20;\n      });\n      bg.adapters.add(\"x\", x => {\n        return Number(x) - bg.width() / 2;\n      });\n      bg.adapters.add(\"y\", y => {\n        return Number(y) - bg.height() / 2;\n      });\n    }\n    const contents = this.contents;\n    contents.adapters.add(\"x\", x => {\n      const scale = contents.get(\"scale\", 1);\n      if ($type.isNumber(x) && scale >= 1) {\n        let maxPanOut = this.get(\"maxPanOut\", 0.4);\n        let w = contents.width();\n        x = Math.min(w * maxPanOut, x);\n        x = Math.max(this.width() - w * scale * (1 + maxPanOut), x);\n      }\n      return x;\n    });\n    contents.adapters.add(\"y\", y => {\n      const scale = contents.get(\"scale\", 1);\n      if ($type.isNumber(y) && scale >= 1) {\n        let maxPanOut = this.get(\"maxPanOut\", 0.4);\n        let h = contents.height();\n        y = Math.min(h * maxPanOut, y);\n        y = Math.max(this.height() - h * scale * (1 + maxPanOut), y);\n      }\n      return y;\n    });\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    if (this.isDirty(\"wheelable\")) {\n      this._handleSetWheel();\n    }\n    this.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\n  }\n  _handleSetWheel() {\n    if (this.get(\"wheelable\")) {\n      if (this._wheelDp) {\n        this._wheelDp.dispose();\n      }\n      this._wheelDp = this.events.on(\"wheel\", event => {\n        const wheelEvent = event.originalEvent;\n        // Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\n        // some page element is over the ZoomableContainer.\n        if ($utils.isLocalEvent(wheelEvent, this)) {\n          wheelEvent.preventDefault();\n        } else {\n          return;\n        }\n        const point = this.toLocal(event.point);\n        this._handleWheelZoom(wheelEvent.deltaY, point);\n      });\n      this._disposers.push(this._wheelDp);\n    } else {\n      if (this._wheelDp) {\n        this._wheelDp.dispose();\n      }\n    }\n  }\n  _handleWheelZoom(delta, point) {\n    let step = this.get(\"zoomStep\", 2);\n    let zoomLevel = this.contents.get(\"scale\", 1);\n    let newZoomLevel = zoomLevel;\n    if (delta > 0) {\n      newZoomLevel = zoomLevel / step;\n    } else if (delta < 0) {\n      newZoomLevel = zoomLevel * step;\n    }\n    if (newZoomLevel != zoomLevel) {\n      this.zoomToPoint(point, newZoomLevel);\n    }\n  }\n  /**\r\n   * Zooms to specific X/Y point.\r\n   *\r\n   * @param   point  Center point\r\n   * @param   level  Zoom level\r\n   * @return         Zoom Animation object\r\n   */\n  zoomToPoint(point, level) {\n    if (level) {\n      level = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n    }\n    const zoomLevel = this.contents.get(\"scale\", 1);\n    let x = point.x;\n    let y = point.y;\n    let cx = x;\n    let cy = y;\n    const contents = this.contents;\n    let tx = contents.x();\n    let ty = contents.y();\n    let xx = cx - (x - tx) / zoomLevel * level;\n    let yy = cy - (y - ty) / zoomLevel * level;\n    this._animateTo(xx, yy, level);\n    return this._za;\n  }\n  /**\r\n   * Zooms the container contents in by `zoomStep`.\r\n   *\r\n   * @return Zoom Animation object\r\n   */\n  zoomIn() {\n    return this.zoomToPoint({\n      x: this.width() / 2,\n      y: this.height() / 2\n    }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\n  }\n  /**\r\n   * Zooms the container contents out by `zoomStep`.\r\n   *\r\n   * @return Zoom Animation object\r\n   */\n  zoomOut() {\n    return this.zoomToPoint({\n      x: this.width() / 2,\n      y: this.height() / 2\n    }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\n  }\n  /**\r\n   * Fully zooms out the container contents.\r\n   *\r\n   * @return Zoom Animation object\r\n   */\n  goHome() {\n    return this._animateTo(0, 0, 1);\n  }\n  _animateTo(x, y, scale) {\n    const duration = this.get(\"animationDuration\", 0);\n    const easing = this.get(\"animationEasing\");\n    const contents = this.contents;\n    this._txa = contents.animate({\n      key: \"x\",\n      to: x,\n      duration: duration,\n      easing: easing\n    });\n    this._tya = contents.animate({\n      key: \"y\",\n      to: y,\n      duration: duration,\n      easing: easing\n    });\n    this._za = contents.animate({\n      key: \"scale\",\n      to: scale,\n      duration: duration,\n      easing: easing\n    });\n  }\n  _handleThisUp(_event) {\n    this._downPoints = {};\n  }\n  _handleThisDown(event) {\n    const contents = this.contents;\n    this._downScale = contents.get(\"scale\", 1);\n    const downPoints = contents._downPoints;\n    let count = $object.keys(downPoints).length;\n    if (count == 1) {\n      // workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n      let downPoint = downPoints[1];\n      if (!downPoint) {\n        downPoint = downPoints[0];\n      }\n      if (downPoint && downPoint.x == event.point.x && downPoint.y == event.point.y) {\n        count = 0;\n      }\n    }\n    if (count > 0) {\n      this._downX = contents.x();\n      this._downY = contents.y();\n      const downId = contents._getDownPointId();\n      if (downId) {\n        let movePoint = this._movePoints[downId];\n        if (movePoint) {\n          contents._downPoints[downId] = movePoint;\n        }\n      }\n    }\n  }\n  _handleThisMove(event) {\n    const originalEvent = event.originalEvent;\n    const pointerId = originalEvent.pointerId;\n    if (this.get(\"pinchZoom\")) {\n      if (pointerId) {\n        this._movePoints[pointerId] = event.point;\n        if ($object.keys(this.contents._downPoints).length > 1) {\n          this._handlePinch();\n          return;\n        }\n      }\n    }\n  }\n  _handlePinch() {\n    let i = 0;\n    let downPoints = [];\n    let movePoints = [];\n    $object.each(this.contents._downPoints, (k, point) => {\n      downPoints[i] = point;\n      let movePoint = this._movePoints[k];\n      if (movePoint) {\n        movePoints[i] = movePoint;\n      }\n      i++;\n    });\n    if (downPoints.length > 1 && movePoints.length > 1) {\n      this.contents._isDragging = false;\n      let downPoint0 = downPoints[0];\n      let downPoint1 = downPoints[1];\n      let movePoint0 = movePoints[0];\n      let movePoint1 = movePoints[1];\n      if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n        downPoint0 = this.toLocal(downPoint0);\n        downPoint1 = this.toLocal(downPoint1);\n        movePoint0 = this.toLocal(movePoint0);\n        movePoint1 = this.toLocal(movePoint1);\n        let initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n        let currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n        let level = currentDistance / initialDistance * this._downScale;\n        let moveCenter = {\n          x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2,\n          y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2\n        };\n        let downCenter = {\n          x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2,\n          y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2\n        };\n        let tx = this._downX || 0;\n        let ty = this._downY || 0;\n        let zoomLevel = this._downScale;\n        let xx = moveCenter.x - (-tx + downCenter.x) / zoomLevel * level;\n        let yy = moveCenter.y - (-ty + downCenter.y) / zoomLevel * level;\n        this.contents.setAll({\n          x: xx,\n          y: yy,\n          scale: level\n        });\n      }\n    }\n  }\n}\nObject.defineProperty(ZoomableContainer, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"ZoomableContainer\"\n});\nObject.defineProperty(ZoomableContainer, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([ZoomableContainer.className])\n});\n", "import { Entity } from \"../../util/Entity\";\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\nexport class Gradient extends Entity {\n  _afterNew() {\n    // Applying themes because gradient will not have parent\n    super._afterNewApplyThemes();\n  }\n  /**\r\n   * @ignore\r\n   */\n  getFill(_target) {\n    return {\n      addColorStop: (_offset, _color) => {}\n    };\n  }\n  _changed() {\n    super._changed();\n    //if (this.isDirty(\"target\") && this.get(\"target\")) {\n    //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n    //\t});\n    //}\n  }\n  /**\r\n   * @ignore\r\n   */\n  getBounds(target) {\n    const gradientTarget = this.get(\"target\");\n    if (gradientTarget) {\n      let bounds = gradientTarget.globalBounds();\n      const p0 = target.toLocal({\n        x: bounds.left,\n        y: bounds.top\n      });\n      const p1 = target.toLocal({\n        x: bounds.right,\n        y: bounds.top\n      });\n      const p2 = target.toLocal({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      const p3 = target.toLocal({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n    return target._display.getLocalBounds();\n  }\n}\nObject.defineProperty(Gradient, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Gradient\"\n});\nObject.defineProperty(Gradient, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Gradient.className])\n});\n", "import { Gradient } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\n/**\r\n * Linear gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\nexport class LinearGradient extends Gradient {\n  /**\r\n   * @ignore\r\n   */\n  getFill(target) {\n    const rotation = this.get(\"rotation\", 0);\n    let bounds = this.getBounds(target);\n    let l = bounds.left || 0;\n    let r = bounds.right || 0;\n    let t = bounds.top || 0;\n    let b = bounds.bottom || 0;\n    let cos = $math.cos(rotation);\n    let sin = $math.sin(rotation);\n    let w = cos * (r - l);\n    let h = sin * (b - t);\n    if (w == 0) {\n      w = 1;\n    }\n    if (h == 0) {\n      h = 1;\n    }\n    let longer = Math.max(w, h);\n    const gradient = this._root._renderer.createLinearGradient(l, t, l + longer * cos, t + longer * sin);\n    const stops = this.get(\"stops\");\n    if (stops) {\n      let i = 0;\n      $array.each(stops, stop => {\n        let offset = stop.offset;\n        if (!$type.isNumber(offset)) {\n          offset = i / (stops.length - 1);\n        }\n        let opacity = stop.opacity;\n        if (!$type.isNumber(opacity)) {\n          opacity = 1;\n        }\n        let color = stop.color;\n        if (color) {\n          const lighten = stop.lighten;\n          if (lighten) {\n            color = Color.lighten(color, lighten);\n          }\n          const brighten = stop.brighten;\n          if (brighten) {\n            color = Color.brighten(color, brighten);\n          }\n          gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n        }\n        i++;\n      });\n    }\n    return gradient;\n  }\n}\nObject.defineProperty(LinearGradient, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"LinearGradient\"\n});\nObject.defineProperty(LinearGradient, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Gradient.classNames.concat([LinearGradient.className])\n});\n", "import { Container } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\nexport class HeatLegend extends Container {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * A [[Container]] that all labels are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"labelContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {}))\n    });\n    /**\r\n     * A [[Container]] that all markers are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"markerContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {}))\n    });\n    /**\r\n     * A start [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n    Object.defineProperty(this, \"startLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.labelContainer.children.push(Label.new(this._root, {\n        themeTags: [\"start\"]\n      }))\n    });\n    /**\r\n     * An end [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n    Object.defineProperty(this, \"endLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.labelContainer.children.push(Label.new(this._root, {\n        themeTags: [\"end\"]\n      }))\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n    Object.defineProperty(this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.addDisposer(new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\n        themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n      }, [this.markers.template])))\n    });\n  }\n  _afterNew() {\n    this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n    super._afterNew();\n    this.set(\"tooltip\", Tooltip.new(this._root, {\n      themeTags: [\"heatlegend\"]\n    }));\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeMarker() {\n    const marker = this.markers.make();\n    marker.states.create(\"disabled\", {});\n    return marker;\n  }\n  /**\r\n   * Moves and shows tooltip at specific value.\r\n   *\r\n   * Can also specify optional text to show in tooltip, as well as the color.\r\n   *\r\n   * @param  value  Value\r\n   * @param  text   Text\r\n   * @param  color  Color\r\n   */\n  showValue(value, text, color) {\n    const tooltip = this.getTooltip();\n    if (tooltip && $type.isNumber(value)) {\n      const startValue = this.get(\"startValue\", 0);\n      const endValue = this.get(\"endValue\", 1);\n      let c = (value - startValue) / (endValue - startValue);\n      if (c == Infinity || c == -Infinity || isNaN(c)) {\n        c = 0.5;\n      }\n      const startColor = this.get(\"startColor\");\n      const endColor = this.get(\"endColor\");\n      if (!text) {\n        text = this.getNumberFormatter().format(value);\n      }\n      if (!color) {\n        color = Color.interpolate(c, startColor, endColor);\n      }\n      tooltip.label.set(\"text\", text);\n      let p;\n      if (this.get(\"orientation\") == \"vertical\") {\n        p = this.markerContainer.toGlobal({\n          x: 0,\n          y: this.innerHeight() * (1 - c)\n        });\n      } else {\n        p = this.markerContainer.toGlobal({\n          x: this.innerWidth() * c,\n          y: 0\n        });\n      }\n      let background = tooltip.get(\"background\");\n      if (background) {\n        background.set(\"fill\", color);\n      }\n      tooltip.set(\"pointTo\", p);\n      tooltip.show();\n    }\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    const labelContainer = this.labelContainer;\n    const orientation = this.get(\"orientation\");\n    const startLabel = this.startLabel;\n    const endLabel = this.endLabel;\n    const tooltip = this.getTooltip();\n    if (this.isDirty(\"orientation\")) {\n      if (orientation == \"vertical\") {\n        this.markerContainer.setAll({\n          layout: this._root.verticalLayout,\n          height: p100\n        });\n        this.set(\"layout\", this._root.horizontalLayout);\n        startLabel.setAll({\n          y: p100,\n          x: undefined,\n          centerY: p100,\n          centerX: p100\n        });\n        endLabel.setAll({\n          y: 0,\n          x: undefined,\n          centerY: 0,\n          centerX: p100\n        });\n        labelContainer.setAll({\n          height: p100,\n          width: undefined\n        });\n        if (tooltip) {\n          tooltip.set(\"pointerOrientation\", \"horizontal\");\n        }\n      } else {\n        this.markerContainer.setAll({\n          layout: this._root.horizontalLayout,\n          width: p100\n        });\n        this.set(\"layout\", this._root.verticalLayout);\n        startLabel.setAll({\n          x: 0,\n          y: undefined,\n          centerX: 0,\n          centerY: 0\n        });\n        endLabel.setAll({\n          x: p100,\n          y: undefined,\n          centerX: p100,\n          centerY: 0\n        });\n        labelContainer.setAll({\n          width: p100,\n          height: undefined\n        });\n        if (tooltip) {\n          tooltip.set(\"pointerOrientation\", \"vertical\");\n        }\n      }\n    }\n    if (this.isDirty(\"stepCount\")) {\n      const stepCount = this.get(\"stepCount\", 1);\n      const startColor = this.get(\"startColor\");\n      const endColor = this.get(\"endColor\");\n      this.markerContainer.children.clear();\n      if (stepCount > 1) {\n        for (let i = 0; i < stepCount; i++) {\n          const marker = this.makeMarker();\n          if (orientation == \"vertical\") {\n            this.markerContainer.children.moveValue(marker, 0);\n          } else {\n            this.markerContainer.children.push(marker);\n          }\n          if (startColor && endColor) {\n            marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n          }\n        }\n      } else if (stepCount == 1) {\n        const marker = this.makeMarker();\n        this.markerContainer.children.push(marker);\n        const gradient = LinearGradient.new(this._root, {\n          stops: [{\n            color: startColor\n          }, {\n            color: endColor\n          }]\n        });\n        if (orientation == \"vertical\") {\n          gradient.set(\"rotation\", 90);\n          let stops = gradient.get(\"stops\");\n          if (stops) {\n            stops.reverse();\n          }\n        } else {\n          gradient.set(\"rotation\", 0);\n        }\n        if (startColor && endColor) {\n          marker.set(\"fillGradient\", gradient);\n        }\n      }\n    }\n    if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n      startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n    }\n    if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n      endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\n    }\n  }\n}\nObject.defineProperty(HeatLegend, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"HeatLegend\"\n});\nObject.defineProperty(HeatLegend, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([HeatLegend.className])\n});\n", "import { Label } from \"./Label\";\nimport { Container } from \"./Container\";\nimport { RoundedRectangle } from \"./RoundedRectangle\";\nimport { Percent } from \"../util/Percent\";\nimport { color } from \"../util/Color\";\nimport * as $utils from \"../util/Utils\";\nimport * as $type from \"../util/Type\";\nimport * as $array from \"../util/Array\";\n/**\r\n * Editable label.\r\n *\r\n * @since 5.9.5\r\n */\nexport class EditableLabel extends Label {\n  _afterNew() {\n    super._afterNew();\n    const input = this.children.push(Container.new(this._root, {\n      html: \"<textarea class=\\\"am5-editable-label\\\"></textarea>\",\n      isMeasured: false\n    }));\n    input.hide();\n    const editOn = this.get(\"editOn\", \"click\");\n    if (editOn != \"none\") {\n      input.events.on(editOn, _ev => {\n        // this is here just to make it interactive\n      });\n      this.events.on(editOn, _ev => {\n        this.set(\"active\", true);\n      });\n    }\n    this.setPrivate(\"input\", input);\n    // Set background\n    let background = this.get(\"background\");\n    if (!background) {\n      background = this.set(\"background\", RoundedRectangle.new(this._root, {\n        themeTags: [\"editablelabel\", \"background\"]\n      }));\n    } else {\n      background.set(\"themeTags\", [\"editablelabel\", \"background\"]);\n    }\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    this._maybeInitTextarea();\n  }\n  _updateChildren() {\n    super._updateChildren();\n    if (this.isDirty(\"active\")) {\n      const editing = this.get(\"active\", false);\n      if (editing) {\n        this._startEditing();\n      } else {\n        this._stopEditing();\n      }\n      const bg = this.get(\"background\");\n      if (bg) {\n        bg.set(\"active\", editing);\n      }\n    }\n    ;\n    this._syncText();\n    this._syncStyle();\n  }\n  _maybeInitTextarea() {\n    if (!this._isInited()) {\n      const input = this.getPrivate(\"input\");\n      if (input && input.getPrivate(\"htmlElement\")) {\n        const el = input.getPrivate(\"htmlElement\");\n        const textarea = el.querySelector(\".am5-editable-label\");\n        if (textarea) {\n          this.setPrivate(\"textarea\", textarea);\n          // Resize textarea on keypress\n          textarea.addEventListener(\"input\", _ev => {\n            if (this.get(\"multiLine\") === false) {\n              // replace line breaks with spaces for single-line labels\n              textarea.value = textarea.value.replace(/\\n/g, \" \");\n            }\n            this.set(\"text\", textarea.value);\n            this._syncStyle();\n          });\n          // Finish editing on blur\n          textarea.addEventListener(\"blur\", _ev => this.set(\"active\", false));\n          // Finish editing on ESC press\n          if ($utils.supports(\"keyboardevents\")) {\n            this._disposers.push($utils.addEventListener(document, \"keydown\", ev => {\n              if ($utils.getEventKey(ev) == \"Escape\") {\n                this.set(\"active\", false);\n              }\n            }));\n          }\n          // Intercept ENTER if necessary\n          this._disposers.push($utils.addEventListener(document, \"keydown\", ev => {\n            if ($utils.getEventKey(ev) == \"Enter\" && this.get(\"multiLine\") === false) {\n              // Single-line label, save instead of breaking into new line\n              ev.preventDefault();\n              this.set(\"active\", false);\n            }\n          }));\n          this.events.dispatch(\"inited\", {\n            type: \"inited\",\n            target: this\n          });\n        }\n      }\n    }\n  }\n  _isInited() {\n    return this.getPrivate(\"textarea\") ? true : false;\n  }\n  _startEditing() {\n    if (!this._isInited()) {\n      this.events.once(\"inited\", () => {\n        this._startEditing();\n      });\n      return;\n    }\n    this._text.set(\"opacity\", 0);\n    const input = this.getPrivate(\"input\");\n    const textarea = this.getPrivate(\"textarea\");\n    if (textarea) {\n      if (this.get(\"text\", \"\") == \"\") {\n        this.set(\"text\", \" \");\n      }\n      input.show(0);\n      this.setTimeout(() => {\n        // size textarea to fit its actual content\n        this._syncStyle();\n        textarea.focus();\n      }, 100);\n    }\n  }\n  _stopEditing() {\n    if (!this._isInited()) {\n      this.events.once(\"inited\", () => {\n        this._stopEditing();\n      });\n      return;\n    }\n    const input = this.getPrivate(\"input\");\n    const textarea = this.getPrivate(\"textarea\");\n    if (textarea) {\n      this.set(\"text\", textarea.value);\n      input.hide(0);\n      this._text.set(\"opacity\", 1);\n    }\n  }\n  _syncStyle() {\n    const input = this.getPrivate(\"input\");\n    const textarea = this.getPrivate(\"textarea\");\n    if (textarea) {\n      // Set up HTML\n      const el = input.getPrivate(\"htmlElement\");\n      // Reset all styles\n      const computedStyles = window.getComputedStyle(textarea);\n      $array.each(computedStyles, style => {\n        textarea.style[style] = \"initial\";\n      });\n      // Remove textarea attributes\n      textarea.style.color = this.get(\"fill\", color(0x000000)).toCSS(this.get(\"fillOpacity\", 1));\n      textarea.style.backgroundColor = \"rgba(0, 0, 0, 0)\";\n      textarea.style.border = \"none\";\n      textarea.style.outline = \"none\";\n      textarea.style.padding = \"0\";\n      // Wrapping\n      textarea.wrap = \"off\";\n      textarea.style.resize = \"none\";\n      // Place carret under mouse cursor\n      // @todo\n      // Size\n      textarea.style.overflow = \"hidden\";\n      const maxWidth = this.get(\"maxWidth\", 0) - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0);\n      if (maxWidth > 0) {\n        textarea.style.maxWidth = maxWidth + \"px\";\n      } else {\n        // The actual minWidth will be set on frameend\n        textarea.style.minWidth = \"\";\n      }\n      textarea.style.height = \"auto\";\n      textarea.style.minHeight = textarea.scrollHeight + \"px\";\n      // If width is explicitly set on a label, use it for textarea\n      if (this.get(\"width\")) {\n        textarea.style.width = this.width() - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0) + \"px\";\n        textarea.style.minWidth = \"\";\n      }\n      // Line height\n      const lineHeight = this.get(\"lineHeight\");\n      if (!lineHeight) {\n        textarea.style.lineHeight = \"1.2\";\n      } else if (lineHeight instanceof Percent) {\n        textarea.style.lineHeight = lineHeight.value + \"\";\n      } else if ($type.isNumber(lineHeight)) {\n        textarea.style.lineHeight = lineHeight + \"\";\n      }\n      // Font stuff\n      let fontFamily = this.get(\"fontFamily\");\n      if (!fontFamily) {\n        fontFamily = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-family\").getPropertyValue(\"font-family\");\n      }\n      textarea.style.fontFamily = fontFamily;\n      let fontSize = this.get(\"fontSize\");\n      if (!fontSize) {\n        fontSize = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-size\").getPropertyValue(\"font-size\");\n      } else if ($type.isNumber(fontSize)) {\n        fontSize = fontSize + \"px\";\n      } else {\n        fontSize = fontSize;\n      }\n      textarea.style.fontSize = fontSize;\n      let fontWeight = this.get(\"fontWeight\");\n      if (!fontWeight) {\n        fontWeight = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-weight\").getPropertyValue(\"font-weight\");\n      } else {\n        fontWeight = fontWeight;\n      }\n      textarea.style.fontWeight = fontWeight;\n      let fontStyle = this.get(\"fontStyle\");\n      if (!fontStyle) {\n        fontStyle = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-style\").getPropertyValue(\"font-style\");\n      } else {\n        fontStyle = fontStyle;\n      }\n      textarea.style.fontStyle = fontStyle;\n      const oversizeBehavior = this.get(\"oversizedBehavior\");\n      if (oversizeBehavior == \"wrap\") {\n        textarea.style.whiteSpace = \"pre-wrap\";\n      } else {\n        textarea.style.whiteSpace = \"nowrap\";\n      }\n      // Adjust textarea postion based on textAlign setting\n      this._root.events.on(\"frameended\", () => {\n        if (textarea.style.minWidth == \"\") {\n          textarea.style.minWidth = textarea.scrollWidth + 20 + \"px\";\n        }\n        const textAlign = this.get(\"textAlign\", \"start\");\n        if (textAlign == \"center\") {\n          textarea.style.textAlign = \"center\";\n          if (!el.style.transform.match(/translateX/) && !this.get(\"width\")) {\n            el.style.transform += \" translateX(-50%)\";\n          }\n        } else if (textAlign == \"end\") {\n          textarea.style.textAlign = \"right\";\n          if (!el.style.transform.match(/translateX/) && !this.get(\"width\")) {\n            el.style.transform += \" translateX(-100%)\";\n          }\n        } else {\n          textarea.style.textAlign = textAlign;\n        }\n      });\n    }\n  }\n  _syncText() {\n    const textarea = this.getPrivate(\"textarea\");\n    let text = this.get(\"text\", \"\");\n    if (text == \" \") {\n      text = \"\";\n    }\n    if (textarea) {\n      textarea.value = text;\n    }\n  }\n}\nObject.defineProperty(EditableLabel, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"EditableLabel\"\n});\nObject.defineProperty(EditableLabel, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Label.classNames.concat([EditableLabel.className])\n});\n", "import { Series } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\nexport class Legend extends Series {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * List of all [[Container]] elements for legend items.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n    Object.defineProperty(this, \"itemContainers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\n        themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n        themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n        background: RoundedRectangle.new(this._root, {\n          themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n          themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n        })\n      }, [this.itemContainers.template])))\n    });\n    /**\r\n     * List of legend marker elements.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n    Object.defineProperty(this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\n        themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n      }, [this.markers.template])))\n    });\n    /**\r\n     * List of legend label elements.\r\n     *\r\n     * @default new ListTemplate<Label>\r\n     */\n    Object.defineProperty(this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\n        themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n      }, [this.labels.template])))\n    });\n    /**\r\n     * List of legend value label elements.\r\n     *\r\n     * @default new ListTemplate<label>\r\n     */\n    Object.defineProperty(this, \"valueLabels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\n        themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n      }, [this.valueLabels.template])))\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n    Object.defineProperty(this, \"markerRectangles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.addDisposer(new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\n        themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n      }, [this.markerRectangles.template])))\n    });\n  }\n  _afterNew() {\n    this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n    this.fields.push(\"name\", \"stroke\", \"fill\");\n    super._afterNew();\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeItemContainer(dataItem) {\n    const itemContainer = this.children.push(this.itemContainers.make());\n    itemContainer._setDataItem(dataItem);\n    this.itemContainers.push(itemContainer);\n    itemContainer.states.create(\"disabled\", {});\n    return itemContainer;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeMarker() {\n    const marker = this.markers.make();\n    this.markers.push(marker);\n    marker.states.create(\"disabled\", {});\n    return marker;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeLabel() {\n    const label = this.labels.make();\n    label.states.create(\"disabled\", {});\n    return label;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeValueLabel() {\n    const valueLabel = this.valueLabels.make();\n    valueLabel.states.create(\"disabled\", {});\n    return valueLabel;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeMarkerRectangle() {\n    const markerRectangle = this.markerRectangles.make();\n    markerRectangle.states.create(\"disabled\", {});\n    return markerRectangle;\n  }\n  processDataItem(dataItem) {\n    super.processDataItem(dataItem);\n    const itemContainer = this.makeItemContainer(dataItem);\n    const nameField = this.get(\"nameField\");\n    const fillField = this.get(\"fillField\");\n    const strokeField = this.get(\"strokeField\");\n    if (itemContainer) {\n      const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n      const item = dataItem.dataContext;\n      if (item && item.set) {\n        item.set(\"legendDataItem\", dataItem);\n      }\n      itemContainer._setDataItem(dataItem);\n      dataItem.set(\"itemContainer\", itemContainer);\n      const marker = this.makeMarker();\n      if (marker) {\n        itemContainer.children.push(marker);\n        marker._setDataItem(dataItem);\n        dataItem.set(\"marker\", marker);\n        const useDefaultMarker = this.get(\"useDefaultMarker\");\n        const markerRectangle = marker.children.push(this.makeMarkerRectangle());\n        let fill = dataItem.get(\"fill\");\n        let stroke = dataItem.get(\"stroke\");\n        dataItem.set(\"markerRectangle\", markerRectangle);\n        if (item && item.get) {\n          fill = item.get(fillField, fill);\n          stroke = item.get(strokeField, stroke);\n        }\n        if (!stroke) {\n          stroke = fill;\n        }\n        if (!useDefaultMarker) {\n          if (item && item.createLegendMarker) {\n            item.createLegendMarker();\n          }\n        } else {\n          if (item.on) {\n            item.on(fillField, () => {\n              markerRectangle.set(\"fill\", item.get(fillField));\n            });\n            item.on(strokeField, () => {\n              markerRectangle.set(\"stroke\", item.get(strokeField));\n            });\n          }\n        }\n        markerRectangle.setAll({\n          fill,\n          stroke\n        });\n        // this solves if template field is set on slice\n        const component = item.component;\n        if (component && component.updateLegendMarker) {\n          component.updateLegendMarker(item);\n        }\n      }\n      const label = this.makeLabel();\n      if (label) {\n        itemContainer.children.push(label);\n        label._setDataItem(dataItem);\n        dataItem.set(\"label\", label);\n        label.text.on(\"text\", () => {\n          itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\n          itemContainer.markDirtyAccessibility();\n        });\n        if (item && item.get) {\n          dataItem.set(\"name\", item.get(nameField));\n        }\n        let name = dataItem.get(\"name\");\n        if (name) {\n          label.set(\"text\", name);\n        }\n      }\n      const valueLabel = this.makeValueLabel();\n      if (valueLabel) {\n        itemContainer.children.push(valueLabel);\n        valueLabel._setDataItem(dataItem);\n        dataItem.set(\"valueLabel\", valueLabel);\n      }\n      if (item && item.show) {\n        item.on(\"visible\", visible => {\n          itemContainer.set(\"disabled\", !visible);\n        });\n        if (!item.get(\"visible\")) {\n          itemContainer.set(\"disabled\", true);\n        }\n        if (clickTarget != \"none\") {\n          let clickContainer = itemContainer;\n          if (clickTarget == \"marker\") {\n            clickContainer = marker;\n          }\n          this._addClickEvents(clickContainer, item, dataItem);\n        }\n      }\n      // Sort children\n      this.children.values.sort((a, b) => {\n        const targetA = a.dataItem.dataContext;\n        const targetB = b.dataItem.dataContext;\n        if (targetA && targetB) {\n          const indexA = this.data.indexOf(targetA);\n          const indexB = this.data.indexOf(targetB);\n          if (indexA > indexB) {\n            return 1;\n          } else if (indexA < indexB) {\n            return -1;\n          }\n        }\n        return 0;\n      });\n      if (item && item.updateLegendValue) {\n        item.updateLegendValue();\n      }\n    }\n  }\n  _addClickEvents(container, item, dataItem) {\n    container.set(\"cursorOverStyle\", \"pointer\");\n    container.events.on(\"pointerover\", () => {\n      const component = item.component;\n      if (component && component.hoverDataItem) {\n        component.hoverDataItem(item);\n      }\n    });\n    container.events.on(\"pointerout\", () => {\n      const component = item.component;\n      if (component && component.hoverDataItem) {\n        component.unhoverDataItem(item);\n      }\n    });\n    container.events.on(\"click\", () => {\n      const labelText = dataItem.get(\"label\").text._getText();\n      if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n        item.show();\n        container.set(\"disabled\", false);\n        this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\n      } else if (item.hide) {\n        item.hide();\n        container.set(\"disabled\", true);\n        this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\n      }\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  disposeDataItem(dataItem) {\n    super.disposeDataItem(dataItem);\n    const dataContext = dataItem.dataContext;\n    if (dataContext && dataContext.get) {\n      const di = dataContext.get(\"legendDataItem\");\n      if (di == dataItem) {\n        dataContext.set(\"legendDataItem\", undefined);\n      }\n    }\n    let itemContainer = dataItem.get(\"itemContainer\");\n    if (itemContainer) {\n      this.itemContainers.removeValue(itemContainer);\n      itemContainer.dispose();\n    }\n    let marker = dataItem.get(\"marker\");\n    if (marker) {\n      this.markers.removeValue(marker);\n      marker.dispose();\n    }\n    let markerRectangle = dataItem.get(\"markerRectangle\");\n    if (markerRectangle) {\n      this.markerRectangles.removeValue(markerRectangle);\n      markerRectangle.dispose();\n    }\n    let label = dataItem.get(\"label\");\n    if (label) {\n      this.labels.removeValue(label);\n      label.dispose();\n    }\n    let valueLabel = dataItem.get(\"valueLabel\");\n    if (valueLabel) {\n      this.valueLabels.removeValue(valueLabel);\n      valueLabel.dispose();\n    }\n  }\n}\nObject.defineProperty(Legend, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Legend\"\n});\nObject.defineProperty(Legend, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Series.classNames.concat([Legend.className])\n});\n", "import { Sprite } from \"./Sprite\";\nimport * as $type from \"../util/Type\";\n/**\r\n * Displays an image.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\r\n * @important\r\n */\nexport class Picture extends Sprite {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makePicture(undefined)\n    });\n  }\n  _changed() {\n    super._changed();\n    if (this.isDirty(\"width\")) {\n      const width = this.get(\"width\");\n      this._display.width = $type.isNumber(width) ? width : undefined;\n    }\n    if (this.isDirty(\"height\")) {\n      const height = this.get(\"height\");\n      this._display.height = $type.isNumber(height) ? height : undefined;\n    }\n    if (this.isDirty(\"shadowColor\")) {\n      this._display.clear();\n      const shadowColor = this.get(\"shadowColor\");\n      this._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n    }\n    if (this.isDirty(\"shadowBlur\")) {\n      this._display.clear();\n      this._display.shadowBlur = this.get(\"shadowBlur\");\n    }\n    if (this.isDirty(\"shadowOffsetX\")) {\n      this._display.clear();\n      this._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n    }\n    if (this.isDirty(\"shadowOffsetY\")) {\n      this._display.clear();\n      this._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n    }\n    if (this.isDirty(\"shadowOpacity\")) {\n      this._display.clear();\n      this._display.shadowOpacity = this.get(\"shadowOpacity\");\n    }\n    if (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n      this._display.clear();\n      this._load();\n    }\n  }\n  _load() {\n    const src = this.get(\"src\");\n    if (src) {\n      const image = new Image();\n      image.crossOrigin = this.get(\"cors\", \"anonymous\");\n      image.src = src;\n      const events = this.events;\n      image.decode().then(() => {\n        this._display.image = image;\n        this._updateSize();\n        if (!events.isDisposed() && events.isEnabled(\"loaded\")) {\n          events.dispatch(\"loaded\", {\n            type: \"loaded\",\n            target: this\n          });\n        }\n      }).catch(_error => {\n        if (!events.isDisposed() && events.isEnabled(\"loaderror\")) {\n          events.dispatch(\"loaderror\", {\n            type: \"loaderror\",\n            target: this\n          });\n        }\n      });\n    }\n  }\n  _updateSize() {\n    super._updateSize();\n    const image = this._display.image;\n    if (image) {\n      let w = this.getPrivate(\"width\", this.get(\"width\"));\n      let h = this.getPrivate(\"height\", this.get(\"height\"));\n      const r = image.width && image.height ? image.width / image.height : 0;\n      if ($type.isNumber(w) && $type.isNumber(h)) {\n        this._display.width = w;\n        this._display.height = h;\n      } else if ($type.isNumber(w) && r) {\n        h = w / r;\n      } else if ($type.isNumber(h) && r) {\n        w = h * r;\n      } else {\n        w = image.width;\n        h = image.height;\n      }\n      if ($type.isNumber(w)) {\n        this._display.width = w;\n      }\n      if ($type.isNumber(h)) {\n        this._display.height = h;\n      }\n      this.markDirtyBounds();\n      this.markDirty();\n    }\n  }\n}\nObject.defineProperty(Picture, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Picture\"\n});\nObject.defineProperty(Picture, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Sprite.classNames.concat([Picture.className])\n});\n", "import { Graphics } from \"./Graphics\";\n/**\r\n * Draws a triangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Triangle extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear && !this.get(\"draw\")) {\n      this._draw();\n    }\n  }\n  _draw() {\n    const w = this.width();\n    const h = this.height();\n    const display = this._display;\n    display.moveTo(-w / 2, h / 2);\n    display.lineTo(0, -h / 2);\n    display.lineTo(w / 2, h / 2);\n    display.lineTo(-w / 2, h / 2);\n    display.closePath();\n  }\n  _updateSize() {\n    this.markDirty();\n    this._clear = true;\n  }\n}\nObject.defineProperty(Triangle, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Triangle\"\n});\nObject.defineProperty(Triangle, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Triangle.className])\n});\n", "import { Scrollbar } from \"./Scrollbar\";\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\nexport class Slider extends Scrollbar {\n  _afterNew() {\n    this._addOrientationClass();\n    super._afterNew();\n    this.endGrip.setPrivate(\"visible\", false);\n    this.thumb.setPrivate(\"visible\", false);\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateGrips() {\n    super.updateGrips();\n    const startGrip = this.startGrip;\n    this.endGrip.setAll({\n      x: startGrip.x(),\n      y: startGrip.y()\n    });\n    this.setRaw(\"end\", this.get(\"start\"));\n  }\n}\nObject.defineProperty(Slider, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Slider\"\n});\nObject.defineProperty(Slider, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Scrollbar.classNames.concat([Slider.className])\n});\n", "import { Graphics } from \"./Graphics\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport { arc } from \"d3-shape\";\nimport * as $math from \"../util/Math\";\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\nexport class Slice extends Graphics {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @ignore\r\n     */\n    Object.defineProperty(this, \"ix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * @ignore\r\n     */\n    Object.defineProperty(this, \"iy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_generator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: arc()\n    });\n  }\n  _getTooltipPoint() {\n    let tooltipX = this.get(\"tooltipX\");\n    let tooltipY = this.get(\"tooltipY\");\n    let x = 0;\n    let y = 0;\n    if ($type.isNumber(tooltipX)) {\n      x = tooltipX;\n    }\n    if ($type.isNumber(tooltipY)) {\n      y = tooltipY;\n    }\n    let radius = this.get(\"radius\", 0);\n    let innerRadius = this.get(\"innerRadius\", 0);\n    let dRadius = this.get(\"dRadius\", 0);\n    let dInnerRadius = this.get(\"dInnerRadius\", 0);\n    radius += dRadius;\n    innerRadius += dInnerRadius;\n    if (innerRadius < 0) {\n      innerRadius = radius + innerRadius;\n    }\n    if (tooltipX instanceof Percent) {\n      x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\n    }\n    if (tooltipY instanceof Percent) {\n      y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\n    }\n    if (this.get(\"arc\") >= 360 && innerRadius == 0) {\n      x = 0;\n      y = 0;\n    }\n    return {\n      x,\n      y\n    };\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      let startAngle = this.get(\"startAngle\", 0);\n      let arc = this.get(\"arc\", 0);\n      const generator = this._generator;\n      if (arc < 0) {\n        startAngle = startAngle + arc;\n        arc = arc * -1;\n      }\n      if (arc > 0.1) {\n        // this fixes bug with full circle when arc is very small\n        generator.cornerRadius(this.get(\"cornerRadius\", 0));\n      }\n      generator.context(this._display);\n      let radius = this.get(\"radius\", 0);\n      let innerRadius = this.get(\"innerRadius\", 0);\n      let dRadius = this.get(\"dRadius\", 0);\n      let dInnerRadius = this.get(\"dInnerRadius\", 0);\n      radius += dRadius;\n      innerRadius += dInnerRadius;\n      if (innerRadius < 0) {\n        innerRadius = radius + innerRadius;\n      }\n      generator({\n        innerRadius: innerRadius,\n        outerRadius: radius,\n        startAngle: (startAngle + 90) * $math.RADIANS,\n        endAngle: (startAngle + arc + 90) * $math.RADIANS\n      });\n      let middleAngle = startAngle + arc / 2;\n      this.ix = $math.cos(middleAngle);\n      this.iy = $math.sin(middleAngle);\n      const shiftRadius = this.get(\"shiftRadius\", 0);\n      this.setRaw(\"dx\", this.ix * shiftRadius);\n      this.setRaw(\"dy\", this.iy * shiftRadius);\n      this.markDirtyPosition();\n    }\n  }\n}\nObject.defineProperty(Slice, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Slice\"\n});\nObject.defineProperty(Slice, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Slice.className])\n});\n", "import { Container } from \"../../core/render/Container\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { MultiDisposer } from \"../../core/util/Disposer\";\nimport { ZoomableContainer } from \"./ZoomableContainer\";\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\nexport class ZoomTools extends Container {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * A [[Button]] for home.\r\n     */\n    Object.defineProperty(this, \"homeButton\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Button.new(this._root, {\n        width: 35,\n        height: 35,\n        themeTags: [\"home\"]\n      }))\n    });\n    /**\r\n     * A [[Button]] for zoom in.\r\n     */\n    Object.defineProperty(this, \"plusButton\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Button.new(this._root, {\n        width: 35,\n        height: 35,\n        themeTags: [\"plus\"]\n      }))\n    });\n    /**\r\n     * A [[Button]] for zoom out.\r\n     */\n    Object.defineProperty(this, \"minusButton\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Button.new(this._root, {\n        width: 35,\n        height: 35,\n        themeTags: [\"minus\"]\n      }))\n    });\n    Object.defineProperty(this, \"_disposer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_targetDisposer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    this.set(\"position\", \"absolute\");\n    this.set(\"layout\", this._root.verticalLayout);\n    this.addTag(\"zoomtools\");\n    this.plusButton.setAll({\n      icon: Graphics.new(this._root, {\n        themeTags: [\"icon\"]\n      }),\n      layout: undefined\n    });\n    this.minusButton.setAll({\n      icon: Graphics.new(this._root, {\n        themeTags: [\"icon\"]\n      }),\n      layout: undefined\n    });\n    this.homeButton.setAll({\n      icon: Graphics.new(this._root, {\n        themeTags: [\"icon\"]\n      }),\n      layout: undefined\n    });\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    if (this.isDirty(\"target\")) {\n      const target = this.get(\"target\");\n      const previous = this._prevSettings.target;\n      if (target) {\n        if (target instanceof ZoomableContainer) {\n          this._targetDisposer = this.addDisposer(target.contents.on(\"scale\", scale => {\n            if (scale == target.get(\"minZoomLevel\")) {\n              this.minusButton.set(\"disabled\", true);\n            } else {\n              this.minusButton.set(\"disabled\", false);\n            }\n            if (scale == target.get(\"maxZoomLevel\")) {\n              this.plusButton.set(\"disabled\", true);\n            } else {\n              this.plusButton.set(\"disabled\", false);\n            }\n          }));\n          this.root.events.once(\"frameended\", () => {\n            if (target.get(\"scale\") == target.get(\"minZoomLevel\")) {\n              this.minusButton.set(\"disabled\", true);\n            }\n          });\n        }\n        this._disposer = new MultiDisposer([this.plusButton.events.on(\"click\", () => {\n          target.zoomIn();\n        }), this.minusButton.events.on(\"click\", () => {\n          target.zoomOut();\n        }), this.homeButton.events.on(\"click\", () => {\n          target.goHome();\n        })]);\n      }\n      if (previous) {\n        if (this._disposer) {\n          this._disposer.dispose();\n        }\n        if (this._targetDisposer) {\n          this._targetDisposer.dispose();\n        }\n      }\n    }\n  }\n}\nObject.defineProperty(ZoomTools, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"ZoomTools\"\n});\nObject.defineProperty(ZoomTools, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([ZoomTools.className])\n});\n", "import { Pattern } from \"./Pattern\";\nimport { Color } from \"../../util/Color\";\n/**\r\n * Grain pattern.\r\n *\r\n * Allows to add grain (noise) effect to your [[Graphics]] objects.\r\n *\r\n * Note, grain pattern does not support `fill` and `color` setting.\r\n * Use `colors` setting to define colors of a grain pixels.\r\n *\r\n * Note, rotation setting is not supported by this pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Grain_patterns} for more info\r\n * @since 5.5.0\r\n */\nexport class GrainPattern extends Pattern {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"canvas\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"canvas\")\n    });\n    Object.defineProperty(this, \"context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.canvas.getContext(\"2d\")\n    });\n    Object.defineProperty(this, \"_clearGrain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _beforeChanged() {\n    //document.body.appendChild(this.canvas); // temp\n    this.canvas.width = this.get(\"width\", 200);\n    this.canvas.height = this.get(\"height\", 200);\n    if (this.isDirty(\"size\") || this.isDirty(\"density\") || this.isDirty(\"minOpacity\") || this.isDirty(\"maxOpacity\") || this.isDirty(\"colors\") || this.isDirty(\"horizontalGap\") || this.isDirty(\"verticalGap\")) {\n      this._clearGrain = true;\n    }\n    super._beforeChanged();\n  }\n  _changed() {\n    super._changed();\n    if (this._clearGrain) {\n      const width = this.get(\"width\", 200);\n      const height = this.get(\"height\", 200);\n      const patternData = this.context.getImageData(0, 0, width, height);\n      const size = Math.max(1, this.get(\"size\", 1));\n      const minOpacity = this.get(\"minOpacity\", 0);\n      const maxOpacity = this.get(\"maxOpacity\", 0.3);\n      const colors = this.get(\"colors\", [this.get(\"color\", Color.fromHex(0x000000))]);\n      const cols = width / size;\n      const rows = height / size;\n      const density = this.get(\"density\", 1);\n      const horizontalGap = this.get(\"horizontalGap\", 0) + 1;\n      const verticalGap = this.get(\"verticalGap\", 0) + 1;\n      for (let r = 0; r < rows; r++) {\n        if (verticalGap > 0) {\n          if (r / verticalGap != Math.round(r / verticalGap)) {\n            continue;\n          }\n        }\n        for (let c = 0; c < cols; c++) {\n          const color = colors[Math.floor(Math.random() * colors.length)];\n          const alpha = (minOpacity + Math.random() * (maxOpacity - minOpacity)) * 255;\n          const rnd = Math.random();\n          if (horizontalGap > 0) {\n            if (c / horizontalGap != Math.round(c / horizontalGap)) {\n              continue;\n            }\n          }\n          if (rnd < density) {\n            this._setRectData(c, r, size, width, patternData.data, color.r, color.g, color.b, alpha);\n          }\n        }\n      }\n      this.context.putImageData(patternData, 0, 0);\n      this._pattern = this.context.createPattern(this.canvas, \"repeat\");\n    }\n    this._clearGrain = false;\n  }\n  _checkDirtyFill() {\n    return false;\n  }\n  _setRectData(col, row, size, width, data, rc, gc, bc, ac) {\n    for (var c = col * size; c < col * size + size; c++) {\n      for (var r = row * size; r < row * size + size; r++) {\n        var i = (r * width + c) * 4;\n        data[i] = rc;\n        data[i + 1] = gc;\n        data[i + 2] = bc;\n        data[i + 3] = ac;\n      }\n    }\n  }\n}\nObject.defineProperty(GrainPattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"GrainPattern\"\n});\nObject.defineProperty(GrainPattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Pattern.classNames.concat([GrainPattern.className])\n});\n", "import { Gradient } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $utils from \"../../util/Utils\";\n/**\r\n * Radial gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\nexport class RadialGradient extends Gradient {\n  /**\r\n   * @ignore\r\n   */\n  getFill(target) {\n    const bounds = this.getBounds(target);\n    let x = 0;\n    let y = 0;\n    let l = bounds.left || 0;\n    let r = bounds.right || 0;\n    let t = bounds.top || 0;\n    let b = bounds.bottom || 0;\n    const width = r - l;\n    const height = b - t;\n    let radius = target.get(\"radius\");\n    if ($type.isNumber(radius)) {\n      x = 0;\n      y = 0;\n    } else {\n      radius = Math.min(width, height) / 2;\n      x = width / 2;\n      y = height / 2;\n    }\n    let ux = this.get(\"x\");\n    let uy = this.get(\"y\");\n    if (ux != null) {\n      x = $utils.relativeToValue(ux, width);\n    }\n    if (uy != null) {\n      y = $utils.relativeToValue(uy, height);\n    }\n    const gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\n    const stops = this.get(\"stops\");\n    if (stops) {\n      let i = 0;\n      $array.each(stops, stop => {\n        let offset = stop.offset;\n        if (!$type.isNumber(offset)) {\n          offset = i / (stops.length - 1);\n        }\n        let opacity = stop.opacity;\n        if (!$type.isNumber(opacity)) {\n          opacity = 1;\n        }\n        let color = stop.color;\n        if (color) {\n          const lighten = stop.lighten;\n          if (lighten) {\n            color = Color.lighten(color, lighten);\n          }\n          const brighten = stop.brighten;\n          if (brighten) {\n            color = Color.brighten(color, brighten);\n          }\n          gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n        }\n        i++;\n      });\n    }\n    return gradient;\n  }\n}\nObject.defineProperty(RadialGradient, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"RadialGradient\"\n});\nObject.defineProperty(RadialGradient, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Gradient.classNames.concat([RadialGradient.className])\n});\n", "import { Pattern } from \"./Pattern\";\nimport * as $math from \"../../util/Math\";\n/**\r\n * Circle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\nexport class CirclePattern extends Pattern {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"gap\")) {\n      this._clear = true;\n    }\n  }\n  _draw() {\n    super._draw();\n    const checkered = this.get(\"checkered\", false);\n    const centered = this.get(\"centered\", true);\n    const gap = this.get(\"gap\", 0);\n    const rotation = this.get(\"rotation\", 0);\n    let w = this.get(\"width\", 100);\n    let h = this.get(\"height\", 100);\n    let radius = this.get(\"radius\", 3);\n    let cellW = radius * 2 + gap;\n    let cellH = radius * 2 + gap;\n    let cols = Math.round(w / cellW);\n    let rows = Math.round(h / cellH);\n    cellW = w / cols;\n    cellH = h / rows;\n    if (rotation != 0) {\n      // @todo this is probably not right\n      this._display.x = cellW * $math.cos(rotation);\n      this._display.y = cellH * $math.sin(rotation);\n    }\n    const color = this.get(\"color\");\n    const colorOpacity = this.get(\"colorOpacity\");\n    if (color || colorOpacity) {\n      this._display.beginFill(color, colorOpacity);\n    }\n    for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n      for (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n        if (!checkered || (r & 1) != 1 && (c & 1) != 1 || (r & 1) == 1 && (c & 1) == 1) {\n          let x = c * cellW;\n          let y = r * cellH;\n          if (centered) {\n            x += cellW + gap / 2;\n            y += cellH + gap / 2;\n          }\n          this._display.drawCircle(x - radius, y - radius, radius);\n        }\n      }\n    }\n    if (checkered) {\n      w = w / 2 - gap * 2;\n      h = h / 2 - gap * 2;\n    } else {\n      w -= gap;\n      h -= gap;\n    }\n    if (color || colorOpacity) {\n      this._display.endFill();\n    }\n  }\n}\nObject.defineProperty(CirclePattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"CirclePattern\"\n});\nObject.defineProperty(CirclePattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Pattern.classNames.concat([CirclePattern.className])\n});\n", "import { Pattern } from \"./Pattern\";\nimport * as $type from \"../../util//Type\";\n/**\r\n * Line pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\nexport class LinePattern extends Pattern {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"gap\")) {\n      this._clear = true;\n    }\n  }\n  _draw() {\n    super._draw();\n    const w = this.get(\"width\", 100);\n    const h = this.get(\"height\", 100);\n    const gap = this.get(\"gap\", 0);\n    const strokeWidth = this.get(\"strokeWidth\", 1);\n    if (!gap) {\n      this._display.moveTo(0, 0);\n      this._display.lineTo(w, 0);\n    } else {\n      let step = gap + strokeWidth;\n      let count = h / step;\n      for (let i = -count; i < count * 2; i++) {\n        const y = Math.round(i * step - step / 2) + 0.5;\n        this._display.moveTo(-w, y);\n        this._display.lineTo(w * 2, y);\n      }\n    }\n    this._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\n    let strokeDasharray = this.get(\"strokeDasharray\");\n    if ($type.isNumber(strokeDasharray)) {\n      if (strokeDasharray < 0.5) {\n        strokeDasharray = [0];\n      } else {\n        strokeDasharray = [strokeDasharray];\n      }\n    }\n    this._display.setLineDash(strokeDasharray);\n    const strokeDashoffset = this.get(\"strokeDashoffset\");\n    if (strokeDashoffset) {\n      this._display.setLineDashOffset(strokeDashoffset);\n    }\n    this._display.endStroke();\n  }\n}\nObject.defineProperty(LinePattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"LinePattern\"\n});\nObject.defineProperty(LinePattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Pattern.classNames.concat([LinePattern.className])\n});\n", "import { Pattern } from \"./Pattern\";\nimport * as $math from \"../../util/Math\";\n/**\r\n * Rectangle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\nexport class RectanglePattern extends Pattern {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"gap\")) {\n      this._clear = true;\n    }\n  }\n  _draw() {\n    super._draw();\n    const checkered = this.get(\"checkered\", false);\n    const centered = this.get(\"centered\", true);\n    const gap = this.get(\"gap\", 0);\n    const rotation = this.get(\"rotation\", 0);\n    let w = this.get(\"width\", 100);\n    let h = this.get(\"height\", 100);\n    let rectW = this.get(\"maxWidth\", 5);\n    let rectH = this.get(\"maxHeight\", 5);\n    const display = this._display;\n    let cellW = rectW + gap;\n    let cellH = rectH + gap;\n    let cols = Math.round(w / cellW);\n    let rows = Math.round(h / cellH);\n    cellW = w / cols;\n    cellH = h / rows;\n    if (rotation != 0) {\n      // @todo this is probably not right\n      display.x = cellW / 2 * $math.cos(rotation);\n      display.y = -cellH / 2 * $math.sin(rotation);\n    }\n    for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n      for (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n        if (!checkered || (r & 1) != 1 && (c & 1) != 1 || (r & 1) == 1 && (c & 1) == 1) {\n          let x = c * cellW;\n          let y = r * cellH;\n          if (centered) {\n            x += (cellW - rectW) / 2;\n            y += (cellH - rectH) / 2;\n          }\n          display.drawRect(x, y, rectW, rectH);\n        }\n      }\n    }\n    if (checkered) {\n      w = w / 2 - gap * 2;\n      h = h / 2 - gap * 2;\n    } else {\n      w -= gap;\n      h -= gap;\n    }\n    const color = this.get(\"color\");\n    const colorOpacity = this.get(\"colorOpacity\");\n    if (color || colorOpacity) {\n      // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\n      // this._display.endStroke();\n      display.beginFill(color, colorOpacity);\n      display.endFill();\n    }\n  }\n}\nObject.defineProperty(RectanglePattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"RectanglePattern\"\n});\nObject.defineProperty(RectanglePattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Pattern.classNames.concat([RectanglePattern.className])\n});\n", "import { Pattern } from \"./Pattern\";\n/**\r\n * A pattern that uses an SVG path.\r\n *\r\n * @since 5.2.33\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\nexport class PathPattern extends Pattern {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"svgPath\")) {\n      this._clear = true;\n    }\n  }\n  _draw() {\n    super._draw();\n    // const checkered = this.get(\"checkered\", false);\n    // const centered = this.get(\"centered\", true);\n    // const gap = this.get(\"gap\", 0);\n    // const rotation = this.get(\"rotation\", 0);\n    // let w = this.get(\"width\", 100);\n    // let h = this.get(\"height\", 100);\n    // let rectW = this.get(\"maxWidth\", 5);\n    // let rectH = this.get(\"maxHeight\", 5);\n    // let cellW = rectW + gap;\n    // let cellH = rectH + gap;\n    // let cols = Math.round(w / cellW);\n    // let rows = Math.round(h / cellH);\n    // cellW = w / cols;\n    // cellH = h / rows;\n    // if (rotation != 0) {\n    // \t// @todo this is probably not right\n    // \tthis._display.x = cellW / 2 * $math.cos(rotation);\n    // \tthis._display.y = -cellH / 2 * $math.sin(rotation);\n    // }\n    // for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n    // \tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n    // \t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\n    // \t\t\tlet x = c * cellW;\n    // \t\t\tlet y = r * cellH;\n    // \t\t\tif (centered) {\n    // \t\t\t\tx += (cellW - rectW) / 2;\n    // \t\t\t\ty += (cellH - rectH) / 2;\n    // \t\t\t}\n    // \t\t\tthis._display.drawRect(x, y, rectW, rectH);\n    // \t\t}\n    // \t}\n    // }\n    // if (checkered) {\n    // \tw = w / 2 - gap * 2;\n    // \th = h / 2 - gap * 2;\n    // }\n    // else {\n    // \tw -= gap;\n    // \th -= gap;\n    // }\n    const svgPath = this.get(\"svgPath\");\n    if (svgPath != null) {\n      this._display.svgPath(svgPath);\n    }\n    const color = this.get(\"color\");\n    const colorOpacity = this.get(\"colorOpacity\");\n    if (color || colorOpacity) {\n      // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\n      // this._display.endStroke();\n      this._display.beginFill(color, colorOpacity);\n      this._display.endFill();\n    }\n  }\n}\nObject.defineProperty(PathPattern, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"PathPattern\"\n});\nObject.defineProperty(PathPattern, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Pattern.classNames.concat([PathPattern.className])\n});\n", "import { LinePattern } from \"../render/patterns/LinePattern\";\nimport { RectanglePattern } from \"../render/patterns/RectanglePattern\";\nimport { CirclePattern } from \"../render/patterns/CirclePattern\";\nimport { Entity } from \"./Entity\";\n/**\r\n * An object which holds list of [[Pattern]] objects and can serve them up in\r\n * an interative way.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Pattern_sets} for more info\r\n * @since 5.10.0\r\n */\nexport class PatternSet extends Entity {\n  _afterNew() {\n    // Applying themes because pattern set will not have parent\n    super._afterNewApplyThemes();\n    if (this.get(\"patterns\", []).length === 0) {\n      const color = this.get(\"color\", this.root.interfaceColors.get(\"stroke\"));\n      this.set(\"patterns\", [this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: 45,\n        strokeWidth: 1,\n        //gap: 6,\n        color: color\n      }), this.getRectanglePattern({\n        width: 10,\n        height: 10,\n        rotation: 0,\n        maxWidth: 4,\n        maxHeight: 4,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: -45,\n        strokeWidth: 1,\n        gap: 6,\n        color: color\n      }), this.getCirclePattern({\n        width: 11,\n        height: 11,\n        radius: 2,\n        color: color\n      }), this.getLinePattern({\n        width: 6,\n        height: 6,\n        rotation: 90,\n        strokeWidth: 1,\n        color: color\n      }), this.getRectanglePattern({\n        width: 14,\n        height: 14,\n        rotation: 45,\n        gap: 4,\n        maxWidth: 6,\n        maxHeight: 6,\n        checkered: true,\n        color: color\n      }), this.getLinePattern({\n        width: 6,\n        height: 6,\n        rotation: 0,\n        strokeWidth: 1,\n        color: color\n      }), this.getRectanglePattern({\n        width: 15,\n        height: 15,\n        rotation: 0,\n        gap: 5,\n        maxWidth: 5,\n        maxHeight: 5,\n        checkered: true,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: 45,\n        strokeWidth: 2,\n        gap: 3,\n        strokeDasharray: [4, 2],\n        color: color\n      }), this.getCirclePattern({\n        width: 20,\n        height: 20,\n        radius: 3,\n        gap: 4,\n        checkered: true,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: -45,\n        strokeWidth: 2,\n        gap: 3,\n        strokeDasharray: [4, 2],\n        color: color\n      }), this.getRectanglePattern({\n        width: 10,\n        height: 10,\n        rotation: 0,\n        gap: 1,\n        maxWidth: 9,\n        maxHeight: 9,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: -45,\n        strokeWidth: 2,\n        gap: 1,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: 45,\n        strokeWidth: 2,\n        gap: 1,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: 0,\n        strokeWidth: 3,\n        gap: 1,\n        color: color\n      }), this.getLinePattern({\n        width: 1000,\n        height: 1000,\n        rotation: 90,\n        strokeWidth: 3,\n        gap: 1,\n        color: color\n      })]);\n    }\n    this._dirty[\"patterns\"] = false;\n  }\n  _beforeChanged() {\n    if (this.isDirty(\"patterns\")) {\n      this.reset();\n    }\n  }\n  /**\r\n   * Returns a [[Pattern]] at specific index.\r\n   *\r\n   * @param   index  Index\r\n   * @return         Color\r\n   */\n  getIndex(index) {\n    const patterns = this.get(\"patterns\", []);\n    if (index < patterns.length && patterns[index] !== null) {\n      return patterns[index];\n    }\n    if (index > patterns.length - 1) {\n      const adjustedIndex = index - Math.floor(index * (index / patterns.length));\n      return patterns[adjustedIndex];\n    }\n    return patterns[index];\n  }\n  /**\r\n   * Returns next [[Color]] in the list.\r\n   *\r\n   * If the list is out of colors, new ones are generated dynamically.\r\n   */\n  next() {\n    let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n    this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n    return this.getIndex(currentStep);\n  }\n  /**\r\n   * Resets counter to the start of the list, so the next call for `next()` will\r\n   * return the first pattern.\r\n   */\n  reset() {\n    this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n  }\n  /**\r\n   * Returns a [[LinePattern].\r\n   *\r\n   * @param   settings  Pattern settings\r\n   * @return            Pattern object\r\n   */\n  getLinePattern(settings) {\n    let pattern = LinePattern.new(this.root, settings);\n    return pattern;\n  }\n  /**\r\n   * Returns a [[RectanglePattern].\r\n   *\r\n   * @param   settings  Pattern settings\r\n   * @return            Pattern object\r\n   */\n  getRectanglePattern(settings) {\n    let pattern = RectanglePattern.new(this.root, settings);\n    return pattern;\n  }\n  /**\r\n   * Returns a [[CirclePattern].\r\n   *\r\n   * @param   settings  Pattern settings\r\n   * @return            Pattern object\r\n   */\n  getCirclePattern(settings) {\n    let pattern = CirclePattern.new(this.root, settings);\n    return pattern;\n  }\n}\nObject.defineProperty(PatternSet, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"PatternSet\"\n});\nObject.defineProperty(PatternSet, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([PatternSet.className])\n});\n", "import * as $type from \"./Type\";\nimport * as $object from \"./Object\";\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\nexport class JSONParser {\n  /**\r\n   * Parses JSON string.\r\n   *\r\n   * @param   input    JSON\r\n   * @param   options  Options\r\n   * @return           Data\r\n   */\n  static parse(input, options) {\n    options = this._applyDefaults(options);\n    try {\n      if ($type.isString(input)) {\n        let data = JSON.parse(input);\n        if (options.reverse && $type.isArray(data)) {\n          data.reverse();\n        }\n        return data;\n      } else if ($type.isArray(input) || $type.isObject(input)) {\n        return input;\n      } else {\n        throw \"Unable to parse JSON data\";\n      }\n    } catch (e) {\n      return undefined;\n    }\n  }\n  static _applyDefaults(options) {\n    const normalized = {};\n    const defaults = {\n      reverse: false\n    };\n    if (!options) {\n      options = {};\n    }\n    $object.each(defaults, (key, val) => {\n      normalized[key] = options[key] || val;\n    });\n    return normalized;\n  }\n}\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\nexport class CSVParser {\n  /**\r\n   * Parses CSV string.\r\n   *\r\n   * @param   input    CSV\r\n   * @param   options  Options\r\n   * @return           Data\r\n   */\n  static parse(input, options) {\n    options = this._applyDefaults(options);\n    // Get CSV data as array\n    let data = this.CSVToArray(input, options.delimiter);\n    // Init resuling array\n    let res = [],\n      cols = [],\n      col,\n      i;\n    // Skip rows\n    for (i = 0; i < options.skipRows; i++) {\n      data.shift();\n    }\n    // First row holds column names?\n    if (options.useColumnNames) {\n      cols = data.shift();\n      // Normalize column names\n      for (let x = 0; x < cols.length; x++) {\n        // trim\n        col = cols[x] != null ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\n        // Check for empty\n        if (\"\" === col) {\n          col = \"col\" + x;\n        }\n        cols[x] = col;\n      }\n    }\n    // Iterate through the result set\n    let row;\n    while (true) {\n      row = options.reverse ? data.pop() : data.shift();\n      if (!row) {\n        break;\n      }\n      if (options.skipEmpty && row.length === 1 && row[0] === \"\") {\n        continue;\n      }\n      let dataPoint = {};\n      for (i = 0; i < row.length; i++) {\n        col = undefined === cols[i] ? \"col\" + i : cols[i];\n        dataPoint[col] = row[i];\n      }\n      res.push(dataPoint);\n    }\n    return res;\n  }\n  /**\r\n   * @ignore\r\n   */\n  static CSVToArray(data, delimiter) {\n    // Check to see if the delimiter is defined. If not,\n    // then default to comma.\n    delimiter = delimiter || ',';\n    // Create a regular expression to parse the CSV values.\n    let objPattern = new RegExp(\n    // Delimiters.\n    \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n    // Quoted fields.\n    \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n    // Standard fields.\n    \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\", \"gi\");\n    // Create an array to hold our data. Give the array\n    // a default empty first row.\n    let arrData = [[]];\n    // Create an array to hold our individual pattern\n    // matching groups.\n    let arrMatches = null;\n    // Keep looping over the regular expression matches\n    // until we can no longer find a match.\n    while (true) {\n      arrMatches = objPattern.exec(data);\n      if (!arrMatches) {\n        break;\n      }\n      // Get the delimiter that was found.\n      let strMatchedDelimiter = arrMatches[1];\n      // Check to see if the given delimiter has a length\n      // (is not the start of string) and if it matches\n      // field delimiter. If id does not, then we know\n      // that this delimiter is a row delimiter.\n      if (strMatchedDelimiter.length && strMatchedDelimiter !== delimiter) {\n        // Since we have reached a new row of data,\n        // add an empty row to our data array.\n        arrData.push([]);\n      }\n      // Now that we have our delimiter out of the way,\n      // let's check to see which kind of value we\n      // captured (quoted or unquoted).\n      let strMatchedValue;\n      if (arrMatches[2]) {\n        // We found a quoted value. When we capture\n        // this value, unescape any double quotes.\n        strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\n      } else {\n        // We found a non-quoted value.\n        strMatchedValue = arrMatches[3];\n      }\n      // Now that we have our value string, let's add\n      // it to the data array.\n      arrData[arrData.length - 1].push(strMatchedValue);\n    }\n    // Return the parsed data.\n    return arrData;\n  }\n  static _applyDefaults(options) {\n    const normalized = {};\n    const defaults = {\n      delimiter: \",\",\n      reverse: false,\n      skipRows: 0,\n      skipEmpty: true,\n      useColumnNames: false\n    };\n    if (!options) {\n      options = {};\n    }\n    $object.each(defaults, (key, val) => {\n      normalized[key] = options[key] || val;\n    });\n    return normalized;\n  }\n}\n", "import { Entity } from \"./Entity\";\nimport { Color } from \"./Color\";\nimport * as $type from \"./Type\";\nimport * as $object from \"./Object\";\nimport * as $array from \"./Array\";\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\nexport class DataProcessor extends Entity {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_checkDates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_checkNumbers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_checkColors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_checkEmpty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_checkDeep\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    this._checkFeatures();\n    this.on(\"dateFields\", () => this._checkFeatures());\n    this.on(\"dateFormat\", () => this._checkFeatures());\n    this.on(\"numericFields\", () => this._checkFeatures());\n    this.on(\"colorFields\", () => this._checkFeatures());\n    this.on(\"emptyAs\", () => this._checkFeatures());\n  }\n  _checkFeatures() {\n    if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\n      this._checkDates = this.get(\"dateFields\") && this.get(\"dateFields\").length > 0;\n    }\n    if (this.isDirty(\"numericFields\")) {\n      this._checkNumbers = this.get(\"numericFields\") && this.get(\"numericFields\").length > 0;\n    }\n    if (this.isDirty(\"colorFields\")) {\n      this._checkColors = this.get(\"colorFields\") && this.get(\"colorFields\").length > 0;\n    }\n    if (this.isDirty(\"emptyAs\")) {\n      this._checkEmpty = this.get(\"emptyAs\") != null;\n    }\n    this._checkDeepFeatures();\n  }\n  _checkDeepFeatures() {\n    const deepFields = [];\n    $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], where => {\n      $array.each(this.get(where, []), field => {\n        const steps = field.split(\".\");\n        steps.pop();\n        while (steps.length > 0) {\n          deepFields.push(steps.join(\".\"));\n          steps.pop();\n        }\n      });\n    });\n    this._checkDeep = deepFields.length > 0;\n    this.setPrivate(\"deepFields\", deepFields);\n  }\n  /**\r\n   * Processess entire array of data.\r\n   *\r\n   * NOTE: calling this will modify original array!\r\n   */\n  processMany(data) {\n    if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\n      $array.each(data, row => {\n        this.processRow(row);\n      });\n    }\n  }\n  /**\r\n   * Processes a row (object) of data.\r\n   *\r\n   * NOTE: calling this will modify values of the original object!\r\n   */\n  processRow(row, prefix = \"\") {\n    $object.each(row, (key, _value) => {\n      const lookupKey = prefix + key;\n      if (this._checkEmpty) {\n        row[key] = this._maybeToEmpty(row[key]);\n      }\n      if (this._checkNumbers) {\n        row[key] = this._maybeToNumber(lookupKey, row[key]);\n      }\n      if (this._checkDates) {\n        row[key] = this._maybeToDate(lookupKey, row[key]);\n      }\n      if (this._checkColors) {\n        row[key] = this._maybeToColor(lookupKey, row[key]);\n      }\n      if (this._checkDeep && this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\n        this.processRow(row[key], lookupKey + \".\");\n      }\n    });\n  }\n  _maybeToNumber(field, value) {\n    if (this.get(\"numericFields\").indexOf(field) !== -1) {\n      return $type.toNumber(value);\n    }\n    return value;\n  }\n  _maybeToDate(field, value) {\n    if (this.get(\"dateFields\").indexOf(field) !== -1) {\n      return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\n    }\n    return value;\n  }\n  _maybeToEmpty(value) {\n    if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\n      return this.get(\"emptyAs\");\n    }\n    return value;\n  }\n  _maybeToColor(field, value) {\n    if (this.get(\"colorFields\").indexOf(field) !== -1) {\n      return Color.fromAny(value);\n    }\n    return value;\n  }\n}\n", "import { Container } from \"./Container\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { RoundedRectangle } from \"./RoundedRectangle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { color } from \"../util/Color\";\nimport * as $math from \"../util/Math\";\nexport class SpriteResizer extends Container {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"rectangle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Rectangle.new(this._root, {\n        themeTags: [\"rectangle\"],\n        fillOpacity: 0,\n        fill: color(0xFFFFFF)\n      }))\n    });\n    Object.defineProperty(this, \"gripL\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"left\")\n    });\n    Object.defineProperty(this, \"gripR\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"right\")\n    });\n    Object.defineProperty(this, \"gripT\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"top\")\n    });\n    Object.defineProperty(this, \"gripB\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"bottom\")\n    });\n    Object.defineProperty(this, \"_is\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_ix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_iw\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_positionDP\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_isHover\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    this.addTag(\"resizer\");\n    this.set(\"visible\", false);\n    this.gripL.events.on(\"dragged\", e => {\n      this._resize(e.target, -1);\n    });\n    this.gripR.events.on(\"dragged\", e => {\n      this._resize(e.target, 1);\n    });\n    this.gripL.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n    this.gripR.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n    this.gripT.events.on(\"dragged\", e => {\n      this._rotate(e, 90);\n    });\n    this.gripB.events.on(\"dragged\", e => {\n      this._rotate(e, -90);\n    });\n    this.gripT.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n    this.gripB.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n  }\n  _resizeStart(grip) {\n    const sprite = this.get(\"sprite\");\n    if (sprite) {\n      this._is = sprite.get(\"scale\", 1);\n      this._ix = grip.x();\n      this._iw = this.width() / 2;\n    }\n  }\n  _resize(grip, c) {\n    const sprite = this.get(\"sprite\");\n    const spriteTemplate = this.get(\"spriteTemplate\");\n    if (sprite) {\n      const scale = Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw));\n      if (spriteTemplate) {\n        spriteTemplate.set(\"scale\", scale);\n      } else {\n        sprite.set(\"scale\", scale);\n      }\n      sprite.states.lookup(\"default\").set(\"scale\", scale);\n      this._updatePositions();\n    }\n  }\n  _rotate(e, delta) {\n    const sprite = this.get(\"sprite\");\n    const spriteTemplate = this.get(\"spriteTemplate\");\n    if (sprite) {\n      const parent = this.parent;\n      if (parent) {\n        const rotationStep = this.get(\"rotationStep\", 10);\n        let angle = Math.round(($math.getAngle({\n          x: this.x(),\n          y: this.y()\n        }, parent.toLocal(e.point)) + delta) / rotationStep) * rotationStep;\n        if (spriteTemplate) {\n          spriteTemplate.set(\"rotation\", angle);\n        } else {\n          sprite.set(\"rotation\", angle);\n        }\n        sprite.states.lookup(\"default\").set(\"rotation\", angle);\n        this._updatePositions();\n      }\n    }\n  }\n  _createGrip(themeTag) {\n    const container = this.children.push(Container.new(this._root, {\n      themeTags: [\"grip\", themeTag],\n      setStateOnChildren: true,\n      draggable: true\n    }));\n    container.children.push(RoundedRectangle.new(this._root, {\n      themeTags: [\"outline\"],\n      centerX: p50,\n      centerY: p50\n    }));\n    container.children.push(RoundedRectangle.new(this._root, {\n      centerX: p50,\n      centerY: p50\n    }));\n    return container;\n  }\n  _updateChildren() {\n    super._updateChildren();\n    if (this.isDirty(\"sprite\")) {\n      const sprite = this.get(\"sprite\");\n      if (sprite) {\n        this.show(0);\n        this.setPrivate(\"visible\", true);\n        this._updatePositions();\n        const parent = sprite.parent;\n        if (parent) {\n          parent.children.moveValue(this, 0);\n        }\n        this._positionDP = sprite.events.on(\"positionchanged\", () => {\n          this._updatePositions();\n        });\n        this._positionDP = sprite.events.on(\"boundschanged\", () => {\n          this._updatePositions();\n        });\n      } else {\n        this.hide(0);\n        this.setPrivate(\"visible\", false);\n        if (this._positionDP) {\n          this._positionDP.dispose();\n        }\n      }\n    }\n    if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\n      this._updatePositions();\n    }\n  }\n  _updatePositions() {\n    const sprite = this.get(\"sprite\");\n    if (sprite) {\n      let bounds = sprite.localBounds();\n      let scale = sprite.get(\"scale\", 1);\n      let d = 20;\n      let w = (bounds.right - bounds.left) * scale + d;\n      let h = (bounds.bottom - bounds.top) * scale + d;\n      let a = sprite.get(\"rotation\", 0);\n      const rectangle = this.rectangle;\n      let cx = sprite.get(\"centerX\", p50);\n      let cy = sprite.get(\"centerY\", p50);\n      let cxr = 0;\n      if (cx instanceof Percent) {\n        cxr = cx.value;\n      }\n      let cyr = 0;\n      if (cy instanceof Percent) {\n        cyr = cy.value;\n      }\n      rectangle.setAll({\n        centerX: cx,\n        centerY: cy,\n        width: w,\n        height: h\n      });\n      this.setAll({\n        x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a),\n        y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a),\n        width: w,\n        height: h,\n        rotation: a\n      });\n      this.gripT.setAll({\n        x: (0.5 - cxr) * w,\n        y: -cyr * h\n      });\n      this.gripB.setAll({\n        x: (0.5 - cxr) * w,\n        y: (1 - cyr) * h\n      });\n      this.gripL.setAll({\n        x: -cxr * w,\n        y: (0.5 - cyr) * h\n      });\n      this.gripR.setAll({\n        x: (1 - cxr) * w,\n        y: (0.5 - cyr) * h\n      });\n      this.rectangle.setAll({\n        width: w,\n        height: h\n      });\n    }\n  }\n}\nObject.defineProperty(SpriteResizer, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"SpriteResizer\"\n});\nObject.defineProperty(SpriteResizer, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([SpriteResizer.className])\n});\n", "/**\r\n * A collection of network-related functions\r\n */\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/net-load-utility/} for more info\r\n * @param url      URL for the file to load\r\n * @param target   A target element that is requesting the net load\r\n * @param options  Request options\r\n * @return Result (Promise)\r\n */\nexport function load(url, target, options) {\n  return new Promise((success, error) => {\n    // Is return type Blob?\n    let isBlob = options != null && options.responseType == \"blob\";\n    // Create request and set up handlers\n    let xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        let response;\n        let blob;\n        if (isBlob) {\n          blob = xhr.response;\n          readBlob(blob).then(response => {\n            let output = {\n              xhr: xhr,\n              error: false,\n              response: response,\n              blob: blob,\n              type: xhr.getResponseHeader(\"Content-Type\"),\n              target: target\n            };\n            success(output);\n          });\n          return;\n        } else {\n          response = xhr.responseText || xhr.response;\n        }\n        let output = {\n          xhr: xhr,\n          error: false,\n          response: response,\n          blob: blob,\n          type: xhr.getResponseHeader(\"Content-Type\"),\n          target: target\n        };\n        success(output);\n      } else {\n        error({\n          xhr: xhr,\n          error: true,\n          type: xhr.getResponseHeader(\"Content-Type\"),\n          target: target\n        });\n      }\n    };\n    xhr.onerror = () => {\n      error({\n        xhr: xhr,\n        error: true,\n        type: xhr.getResponseHeader(\"Content-Type\"),\n        target: target\n      });\n    };\n    // Open request\n    xhr.open(\"GET\", url, true);\n    if (options && options.withCredentials) {\n      xhr.withCredentials = true;\n    }\n    // Process options\n    if (options != null) {\n      if (options.requestHeaders != null) {\n        for (let i = 0; i < options.requestHeaders.length; i++) {\n          let header = options.requestHeaders[i];\n          xhr.setRequestHeader(header.key, header.value);\n        }\n      }\n      if (options.responseType != null) {\n        xhr.responseType = options.responseType;\n      }\n    }\n    // Send request\n    xhr.send();\n  });\n}\n/**\r\n * Returns textual representation of a Blob object.\r\n *\r\n * @param   blob  Target blob\r\n * @return        Text promise\r\n */\nexport function readBlob(blob) {\n  return new Promise((success, error) => {\n    const reader = new FileReader();\n    reader.onload = _event => {\n      success(reader.result);\n    };\n    reader.onerror = e => {\n      error(e);\n    };\n    reader.readAsText(blob);\n  });\n}\n"],
  "mappings": "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",
  "names": ["fill", "fillGradient", "copy", "each", "a", "each", "value", "eachContinue", "each", "mapToEllipse", "approxUnitArc", "vectorAngle", "getArcCenter", "arcToBezier", "p0", "color", "blur", "_index", "metrics", "height", "w", "deltaAngle", "each", "ev", "canvas", "group", "each", "copy", "each", "p0", "cos", "sin", "color", "color", "color", "color", "color", "color", "color", "color", "each", "each", "response", "output"]
}
